{"version":3,"sources":["image.js","interpreter.js","header.js","prettyprint.js","sendifier.js","App.js","serviceWorker.js","index.js"],"names":["colorDb","DARK-RED","makeColor","FIRE-BRICK","DEEP-PINK","INDIAN-RED","MEDIUM-VIOLET-RED","VIOLET-RED","LIGHT-CORAL","HOT-PINK","PALE-VIOLET-RED","LIGHT-PINK","ROSY-BROWN","LAVENDER-BLUSH","SADDLE-BROWN","DARK-ORANGE","DARK-GOLDENRON","SANDY-BROWN","LIGHT-SALMON","DARK-SALMON","NAVAJO-WHITE","PEACH-PUFF","DARK-KHAKI","PALE-GOLDENROD","BLANCHE-DIAMOND","MEDIUM-GOLDENROD","PAPAYA-WHIP","MISTY-ROSE","LEMON-CHIFFON","ANTIQUE-WHITE","CORN-SILK","LIGHT-GOLDENRON-YELLOW","OLD-LACE","LIGHT-YELLOW","FLORAL-WHITE","LAWN-GREEN","GREEN-YELLOW","YELLOW-GREEN","OLIVE-DRAB","MEDIUM-FOREST-GREEN","DARK-OLIVE-GREEN","DARK-SEA-GREEN","DARK-GREEN","LIME-GREEN","FOREST-GREEN","SPRING-GREEN","MEDIUM-SPRING-GREEN","SEA-GREEN","MEDIUM-SEA-GREEN","LIGHT-GREEN","PALE-GREEN","MEDIUM-AQUAMARINE","LIGHT-SEA-GREEN","MEDIUM-TURQUOISE","MINT-CREAM","ROYAL-BLUE","DODGER-BLUE","DEEP-SKY-BLUE","CORNFLOWER-BLUE","STEEL-BLUE","LIGHT-SKY-BLUE","DARK-TURQUOISE","DARKTURQUOISE","SKY-BLUE","SKYBLUE","CADET-BLUE","DARK-SLATE-GRAY","LIGHT-STEEL-BLUE","LIGHT-BLUE","POWDER-BLUE","PALE-TURQUOISE","LIGHT-CYAN","ALICE-BLUE","MEDIUM-BLUE","DARK-BLUE","MIDNIGHT-BLUE","BLUE-VIOLET","MEDIUM-SLATE-BLUE","SLATE-BLUE","DARK-SLATE-BLUE","DARK-VIOLET","DARK-ORCHID","MEDIUM-PURPLE","MEDIUM-ORCHID","DARK-MAGENTA","GHOST-WHITE","WHITE-SMOKE","LIGHT-GRAY","DARK-GRAY","DIM-GRAY","ORANGE","ORANGERED","TOMATO","DARKRED","RED","FIREBRICK","CRIMSON","DEEPPINK","MAROON","INDIAN RED","INDIANRED","MEDIUM VIOLET RED","MEDIUMVIOLETRED","VIOLET RED","VIOLETRED","LIGHTCORAL","HOTPINK","PALEVIOLETRED","LIGHTPINK","ROSYBROWN","PINK","ORCHID","LAVENDERBLUSH","SNOW","CHOCOLATE","SADDLEBROWN","BROWN","DARKORANGE","CORAL","SIENNA","SALMON","PERU","DARKGOLDENROD","GOLDENROD","SANDYBROWN","LIGHTSALMON","DARKSALMON","GOLD","YELLOW","OLIVE","BURLYWOOD","TAN","NAVAJOWHITE","PEACHPUFF","KHAKI","DARKKHAKI","MOCCASIN","WHEAT","BISQUE","PALEGOLDENROD","BLANCHEDALMOND","MEDIUM GOLDENROD","MEDIUMGOLDENROD","PAPAYAWHIP","MISTYROSE","LEMONCHIFFON","ANTIQUEWHITE","CORNSILK","LIGHTGOLDENRODYELLOW","OLDLACE","LINEN","LIGHTYELLOW","SEASHELL","BEIGE","FLORALWHITE","IVORY","GREEN","LAWNGREEN","CHARTREUSE","GREEN YELLOW","GREENYELLOW","YELLOW GREEN","YELLOWGREEN","MEDIUM FOREST GREEN","OLIVEDRAB","MEDIUMFORESTGREEN","DARK OLIVE GREEN","DARKOLIVEGREEN","DARKSEAGREEN","LIME","DARK GREEN","DARKGREEN","LIME GREEN","LIMEGREEN","FOREST GREEN","FORESTGREEN","SPRING GREEN","SPRINGGREEN","MEDIUM SPRING GREEN","MEDIUMSPRINGGREEN","SEA GREEN","SEAGREEN","MEDIUM SEA GREEN","MEDIUMSEAGREEN","AQUAMARINE","LIGHTGREEN","PALE GREEN","PALEGREEN","MEDIUM AQUAMARINE","MEDIUMAQUAMARINE","TURQUOISE","LIGHTSEAGREEN","MEDIUM TURQUOISE","MEDIUMTURQUOISE","HONEYDEW","MINTCREAM","ROYALBLUE","DODGERBLUE","DEEPSKYBLUE","CORNFLOWERBLUE","STEEL BLUE","STEELBLUE","LIGHTSKYBLUE","DARK TURQUOISE","CYAN","AQUA","DARKCYAN","TEAL","SKY BLUE","CADET BLUE","CADETBLUE","DARK SLATE GRAY","DARKSLATEGRAY","LIGHTSLATEGRAY","SLATEGRAY","LIGHT STEEL BLUE","LIGHTSTEELBLUE","LIGHT BLUE","LIGHTBLUE","POWDERBLUE","PALETURQUOISE","LIGHTCYAN","ALICEBLUE","AZURE","MEDIUM BLUE","MEDIUMBLUE","DARKBLUE","MIDNIGHT BLUE","MIDNIGHTBLUE","NAVY","BLUE","INDIGO","BLUE VIOLET","BLUEVIOLET","MEDIUM SLATE BLUE","MEDIUMSLATEBLUE","SLATE BLUE","SLATEBLUE","PURPLE","DARK SLATE BLUE","DARKSLATEBLUE","DARKVIOLET","DARK ORCHID","DARKORCHID","MEDIUMPURPLE","CORNFLOWER BLUE","MEDIUM ORCHID","MEDIUMORCHID","MAGENTA","FUCHSIA","DARKMAGENTA","VIOLET","PLUM","LAVENDER","THISTLE","GHOSTWHITE","WHITE","WHITESMOKE","GAINSBORO","LIGHT GRAY","LIGHTGRAY","SILVER","GRAY","DARK GRAY","DARKGRAY","DIM GRAY","DIMGRAY","BLACK","TRANSPARENT","r","g","b","a","arguments","length","undefined","Error","changeAlpha","color","checkDimension","maybeDimension","checkColor","maybeColor","replace","toUpperCase","concat","checkMode","maybeMode","checkXPlace","maybeXPlace","checkYPlace","maybeYPlace","makeRectangle","width","height","mode","type","makeEquiTriangle","A","B","C","makeTriangle","makeBeside","images","yplace","makeAbove","xplace","makeOverlay","makePlace","image","x","y","scene","emptyScene","w","h","coordinates","map","coord","reduce","acc","Math","max","s","area","sqrt","round","render","red","green","blue","alpha","react_default","createElement","cx","cy","fill","stroke","strokeWidth","render_circle","render_rect","D","pow","c","points","render_triangle","cur","render_polygon","initY","yCorrect","make_list_renderer","dx","dy","renderoozle","render_beside","initX","xCorrect","render_above","render_overlay","render_place","xChange","yChange","render_list","first","rest","slice","Object","toConsumableArray","paint","picture","viewBox","xmlns","key","random","RVAR_T","RAPP_T","RFUNCT_T","RNUM_T","RBOOL_T","RSTRING_T","RLIST_T","RSYM_T","RIMAGE_T","RCOLOR_T","RIF_T","RSTRUCT_T","RCLOS_T","varRE","appRE","numRE","boolRE","strRE","quoteRE","symRE","listRE","initEnv","makeStruct","name","binding","value","args","forEach","arg","typeCheck","firstArg","secondArg","car","cdr","d","reverse","isnull","val","thirdArg","fourthArg","restArgs","img","parse","text","test","numStr","match","trim","prog","boolStr","toLowerCase","matches","substring","parseFunct","funct","app","parseArg","SyntaxError","tst","els","thn","parseQ","listArr","num","bool","charAt","str","sym","parsePrefix","defStructRE","defineRE","nameRE","progs","parsed","parsePrefixExpr","openRE","superID","fieldClose","fieldOpen","fieldIDs","fieldID","closRE","parameters","param","body","interp","env","variable","ReferenceError","lookup","isRVAR","rator","rands","extedEnv","i","TypeError","interpPrefix","curEnv","closVar","def","makeDefine","unparse_cons","arr","id","fields","field","unparse_list","elems","parseCheck","types","includes","typesString","e","message","Fragment","numFields","fieldExtractors","fid","struct","extract","isRBOOL","gray","pink","yellow","allBools","every","isBooleanFormula","formula","outputs","thenChildren","NIL","nil","string","String","line","union","docL","docR","left","right","nest","doc","indent","group","flatten","makePretty","ribbon","best","thisRibbon","current","be","k","pairs","memoize","fits","diffWidth","diffRibbon","thunk","console","log","seen","layout","repeat","putSpace","putLine","compose","folddoc","f","docs","spread","stack","bracket","progToDoc_cons","program","progToDoc_list","list","Infinity","toBSL","tables","listOrCons","progToDoc","pretty","table","fieldToDoc","sig","signature","purp","purpose","params","checkExpects","examples","example","inputs","input","want","join","formulasToDoc","formulas","bools","splitForms","filter","nonbools","splitFormulas","form","condRows","tableToString","sessionURL","sessionID","Sendifier","delay","classCallCheck","this","url","item","sendItem","bind","_this","clear","sent","fetch","method","JSON","stringify","headers","Content-Type","then","timerID","setTimeout","news","clearTimeout","dryRun","yo","keyCount","takeKey","peekKey","lookahead","unparse","unparse_to_string","deepEquals","proga","progb","isRAPP","functCheck","argCheck","arga","elem","isRSTRUCT","fieldsSame","structa","structb","idSame","fielda","isRIMAGE","toRGBAArray","can","document","ctx","getContext","svg","xml","ReactDOMServer","renderToString","image64","btoa","src","drawImage","getImageData","data","imgA","imgB","dataA_red","dataA_green","dataB_red","dataB_green","redSame","datumA_red","greenSame","datumA_green","Colon","props","className","ErrorMessage","error","title","index_esm","icon","Alert","size","verticalAlign","ariaLabel","RemButton","onClick","Trashcan","ValidatedInput","possibleConstructorReturn","getPrototypeOf","call","state","textChange","assertThisInitialized","target","setState","isValid","onValid","dummy","onEmpty","placeholder","onChange","React","Component","ValidatedArea","_this2","rows","cols","newlines","apply","split","spellCheck","Succinct","tableChange","newTab","oldTab","alteredTabs","indexOf","programChange","validName","modTab","tableVars","otherTab","paramVars","globalEnv","inEnv","reals","App_ValidatedInput","disabled","objectSpread","sides","paramTypes","outType","validSignature","deadTab","aliveTabs","remTable","SuccinctTab","tableNames","formulasChange","SuccinctHead","paramsExamplesChange","SuccinctBody","paramNames","examplesFormulasChange","validProg","isgood","formulaChange","newForm","oldForm","alteredForms","countWidth","child","abyss","maxDepth","curMax","numParams","colSpan","App_ValidatedArea","deadForm","aliveForms","remFormula","_","children","countUp","depth","DepictFormula","numExamples","Array","Parameters","validParam","modParam","paramChange","newParam","alteredParams","alteredExamples","deadParam","deadIndex","aliveParams","modExamples","remParam","childChange","newChild","modChild","deadChild","aliveChildren","remChild","exampleChange","newExample","oldExample","exists","addAnotherOutputToFormula","deadExample","aliveExamples","removeOutputFromFormula","remExample","Inputs","inputsChange","Outputs","row","Want","wantChange","inputChange","newInput","oldInput","alteredInputs","inputFields","TestCell","output","DummyCell","parentOutput","Check","valueCell","evalWant","DefinitionsArea","_this3","prefixChange","validPrefix","BSLArea","_this4","showBSL","toggleDisplay","bslArea","readOnly","htmlFor","App","_this5","prefix","prefixError","snapshots","calculate","playbackTime","playbackTimeChange","sendifier","floor","prevProps","setItem","makeLookup","expr","flatMap","lookups","tableEnv","calcFormula","localEnv","subExamples","maybeSpecial","newFormula","_this6","newProg","_this7","event","min","t","_this8","App_DefinitionsArea","defaultValue","App_BSLArea","ListRecordings","_this9","recordings","_this10","response","json","o","entries","_ref","_ref2","slicedToArray","info","startsWith","alignRight","text-align","columns","Cell","react_router_dom","to","Header","accessor","maxWidth","date","Date","abs","toLocaleString","dateStyle","timeStyle","lib_default","defaultSortDesc","headerStyle","style","es","defaultSorted","desc","FetchRecordings","_this11","playbackSessionIDChange","_this12","playbackSessionID","snapshot","App_App","Boolean","window","location","hostname","ReactDOM","react_router","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80fbc59d.chunk.js","sourcesContent":["/*******************************************\n    This here is the image library in js\n*******************************************/\n\n\n/***\n    Data Definitions:\nAn Image is one of \n      - Circle\n      - Rectangle\n      - Triangle\n      - Polygon\n      - Beside\n      - Above\n      - Overlay\n      - Place\n\n    A Circle is\n      {r:     Integer,\n       color: Color,\n       mode:  String,\n       type:  'circle'}\n     \n    A Rectangle is\n      {width:  Integer,\n       height: Integer,\n       color:  Color,\n       mode:   String,\n       type:   'rect'}\n       \n    A Triangle is                   \n      {A:      Integer,             /\\\n       B:      Integer,            /  \\\n       C:      Integer,        B  /    \\  C\n       color:  Color,            /      \\\n       mode:   String,          /________\\\n       type:   'triangle'}          A      \n       \n    A Polygon is\n      {coordinates: [{x: Integer, y: Integer}],\n       color:       Color,\n       mode:        String,\n       type:        'polygon'}\n       \n    note: only acute triangles are handled\n       \n    A Beside is\n      {type:   'beside',\n       yplace:  String,\n       images: [Image]} note: images must be non-empty\n       \n    An Above is\n      {type:   'above',\n       xplace:  String,\n       images: [Image]} note: images must be non-empty\n\n    An Overlay is\n      {type:   'overlay',\n       yplace: String\n       xplace: String,\n       images: [Image]} note: images must be non-empty\n       \n   A Place is\n     {type: place,\n      x:     Integer,\n      y:     Integer,\n      image: Image,\n      scene: Image}\n       \n    A Color is\n      {r: Integer,\n       g: Integer,\n       b: Integer,\n       a: Integer}\n***/\n\nimport React from 'react';\n\n// these colors taken from https://github.com/brownplt/code.pyret.org/blob/horizon/src/web/js/trove/image-lib.js\nconst colorDb = {\n    \"DARK-RED\" : makeColor(139, 0, 0),\n    \"FIRE-BRICK\" : makeColor(178, 34, 34),\n    \"DEEP-PINK\" : makeColor(255, 20, 147),\n    \"INDIAN-RED\" : makeColor(205, 92, 92),\n    \"MEDIUM-VIOLET-RED\" : makeColor(199, 21, 133),\n    \"VIOLET-RED\" : makeColor(208, 32, 144),\n    \"LIGHT-CORAL\" : makeColor(240, 128, 128),\n    \"HOT-PINK\" : makeColor(255, 105, 180),\n    \"PALE-VIOLET-RED\" : makeColor(219, 112, 147),\n    \"LIGHT-PINK\" : makeColor(255, 182, 193),\n    \"ROSY-BROWN\" : makeColor(188, 143, 143),\n    \"LAVENDER-BLUSH\" : makeColor(255, 240, 245),\n    \"SADDLE-BROWN\" : makeColor(139, 69, 19),\n    \"DARK-ORANGE\" : makeColor(255, 140, 0),\n    \"DARK-GOLDENRON\" : makeColor(184, 134, 11),\n    \"SANDY-BROWN\" : makeColor(244, 164, 96),\n    \"LIGHT-SALMON\" : makeColor(255, 160, 122),\n    \"DARK-SALMON\" : makeColor(233, 150, 122),\n    \"NAVAJO-WHITE\" : makeColor(255, 222, 173),\n    \"PEACH-PUFF\" : makeColor(255, 218, 185),\n    \"DARK-KHAKI\" : makeColor(189, 183, 107),\n    \"PALE-GOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHE-DIAMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM-GOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYA-WHIP\" : makeColor(255, 239, 213),\n    \"MISTY-ROSE\" : makeColor(255, 228, 225),\n    \"LEMON-CHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUE-WHITE\" : makeColor(250, 235, 215),\n    \"CORN-SILK\" : makeColor(255, 248, 220),\n    \"LIGHT-GOLDENRON-YELLOW\" : makeColor(250, 250, 210),\n    \"OLD-LACE\" : makeColor(253, 245, 230),\n    \"LIGHT-YELLOW\" : makeColor(255, 255, 224),\n    \"FLORAL-WHITE\" : makeColor(255, 250, 240),\n    \"LAWN-GREEN\" : makeColor(124, 252, 0),\n    \"GREEN-YELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW-GREEN\" : makeColor(154, 205, 50),\n    \"OLIVE-DRAB\" : makeColor(107, 142, 35),\n    \"MEDIUM-FOREST-GREEN\" : makeColor(107, 142, 35),\n    \"DARK-OLIVE-GREEN\" : makeColor(85, 107, 47),\n    \"DARK-SEA-GREEN\" : makeColor(143, 188, 139),\n    \"DARK-GREEN\" : makeColor(0, 100, 0),\n    \"LIME-GREEN\" : makeColor(50, 205, 50),\n    \"FOREST-GREEN\" : makeColor(34, 139, 34),\n    \"SPRING-GREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM-SPRING-GREEN\" : makeColor(0, 250, 154),\n    \"SEA-GREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM-SEA-GREEN\" : makeColor(60, 179, 113),\n    \"LIGHT-GREEN\" : makeColor(144, 238, 144),\n    \"PALE-GREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM-AQUAMARINE\" : makeColor(102, 205, 170),\n    \"LIGHT-SEA-GREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM-TURQUOISE\" : makeColor(72, 209, 204),\n    \"MINT-CREAM\" : makeColor(245, 255, 250),\n    \"ROYAL-BLUE\" : makeColor(65, 105, 225),\n    \"DODGER-BLUE\" : makeColor(30, 144, 255),\n    \"DEEP-SKY-BLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWER-BLUE\" : makeColor(100, 149, 237),\n    \"STEEL-BLUE\" : makeColor(70, 130, 180),\n    \"LIGHT-SKY-BLUE\" : makeColor(135, 206, 250),\n    \"DARK-TURQUOISE\" : makeColor(0, 206, 209),\n    \"DARKTURQUOISE\" : makeColor(0, 206, 209),\n    \"SKY-BLUE\" : makeColor(135, 206, 235),\n    \"SKYBLUE\" : makeColor(135, 206, 235),\n    \"CADET-BLUE\" : makeColor(96, 160, 160),\n    \"DARK-SLATE-GRAY\" : makeColor(47, 79, 79),\n    \"LIGHT-STEEL-BLUE\" : makeColor(176, 196, 222),\n    \"LIGHT-BLUE\" : makeColor(173, 216, 230),\n    \"POWDER-BLUE\" : makeColor(176, 224, 230),\n    \"PALE-TURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHT-CYAN\" : makeColor(224, 255, 255),\n    \"ALICE-BLUE\" : makeColor(240, 248, 255),\n    \"MEDIUM-BLUE\" : makeColor(0, 0, 205),\n    \"DARK-BLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT-BLUE\" : makeColor(25, 25, 112),\n    \"BLUE-VIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM-SLATE-BLUE\" : makeColor(123, 104, 238),\n    \"SLATE-BLUE\" : makeColor(106, 90, 205),\n    \"DARK-SLATE-BLUE\" : makeColor(72, 61, 139),\n    \"DARK-VIOLET\" : makeColor(148, 0, 211),\n    \"DARK-ORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUM-PURPLE\" : makeColor(147, 112, 219),\n    \"MEDIUM-ORCHID\" : makeColor(186, 85, 211),\n    \"DARK-MAGENTA\" : makeColor(139, 0, 139),\n    \"GHOST-WHITE\" : makeColor(248, 248, 255),\n    \"WHITE-SMOKE\" : makeColor(245, 245, 245),\n    \"LIGHT-GRAY\" : makeColor(211, 211, 211),\n    \"DARK-GRAY\" : makeColor(169, 169, 169),\n    \"DIM-GRAY\" : makeColor(105, 105, 105),\n\n    \"ORANGE\" : makeColor(255, 165, 0),\n    \"ORANGERED\" : makeColor(255, 69, 0),\n    \"TOMATO\" : makeColor(255, 99, 71),\n    \"DARKRED\" : makeColor(139, 0, 0),\n    \"RED\" : makeColor(255, 0, 0),\n    \"FIREBRICK\" : makeColor(178, 34, 34),\n    \"CRIMSON\" : makeColor(220, 20, 60),\n    \"DEEPPINK\" : makeColor(255, 20, 147),\n    \"MAROON\" : makeColor(176, 48, 96),\n    \"INDIAN RED\" : makeColor(205, 92, 92),\n    \"INDIANRED\" : makeColor(205, 92, 92),\n    \"MEDIUM VIOLET RED\" : makeColor(199, 21, 133),\n    \"MEDIUMVIOLETRED\" : makeColor(199, 21, 133),\n    \"VIOLET RED\" : makeColor(208, 32, 144),\n    \"VIOLETRED\" : makeColor(208, 32, 144),\n    \"LIGHTCORAL\" : makeColor(240, 128, 128),\n    \"HOTPINK\" : makeColor(255, 105, 180),\n    \"PALEVIOLETRED\" : makeColor(219, 112, 147),\n    \"LIGHTPINK\" : makeColor(255, 182, 193),\n    \"ROSYBROWN\" : makeColor(188, 143, 143),\n    \"PINK\" : makeColor(255, 192, 203),\n    \"ORCHID\" : makeColor(218, 112, 214),\n    \"LAVENDERBLUSH\" : makeColor(255, 240, 245),\n    \"SNOW\" : makeColor(255, 250, 250),\n    \"CHOCOLATE\" : makeColor(210, 105, 30),\n    \"SADDLEBROWN\" : makeColor(139, 69, 19),\n    \"BROWN\" : makeColor(132, 60, 36),\n    \"DARKORANGE\" : makeColor(255, 140, 0),\n    \"CORAL\" : makeColor(255, 127, 80),\n    \"SIENNA\" : makeColor(160, 82, 45),\n    \"SALMON\" : makeColor(250, 128, 114),\n    \"PERU\" : makeColor(205, 133, 63),\n    \"DARKGOLDENROD\" : makeColor(184, 134, 11),\n    \"GOLDENROD\" : makeColor(218, 165, 32),\n    \"SANDYBROWN\" : makeColor(244, 164, 96),\n    \"LIGHTSALMON\" : makeColor(255, 160, 122),\n    \"DARKSALMON\" : makeColor(233, 150, 122),\n    \"GOLD\" : makeColor(255, 215, 0),\n    \"YELLOW\" : makeColor(255, 255, 0),\n    \"OLIVE\" : makeColor(128, 128, 0),\n    \"BURLYWOOD\" : makeColor(222, 184, 135),\n    \"TAN\" : makeColor(210, 180, 140),\n    \"NAVAJOWHITE\" : makeColor(255, 222, 173),\n    \"PEACHPUFF\" : makeColor(255, 218, 185),\n    \"KHAKI\" : makeColor(240, 230, 140),\n    \"DARKKHAKI\" : makeColor(189, 183, 107),\n    \"MOCCASIN\" : makeColor(255, 228, 181),\n    \"WHEAT\" : makeColor(245, 222, 179),\n    \"BISQUE\" : makeColor(255, 228, 196),\n    \"PALEGOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHEDALMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM GOLDENROD\" : makeColor(234, 234, 173),\n    \"MEDIUMGOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYAWHIP\" : makeColor(255, 239, 213),\n    \"MISTYROSE\" : makeColor(255, 228, 225),\n    \"LEMONCHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUEWHITE\" : makeColor(250, 235, 215),\n    \"CORNSILK\" : makeColor(255, 248, 220),\n    \"LIGHTGOLDENRODYELLOW\" : makeColor(250, 250, 210),\n    \"OLDLACE\" : makeColor(253, 245, 230),\n    \"LINEN\" : makeColor(250, 240, 230),\n    \"LIGHTYELLOW\" : makeColor(255, 255, 224),\n    \"SEASHELL\" : makeColor(255, 245, 238),\n    \"BEIGE\" : makeColor(245, 245, 220),\n    \"FLORALWHITE\" : makeColor(255, 250, 240),\n    \"IVORY\" : makeColor(255, 255, 240),\n    \"GREEN\" : makeColor(0, 255, 0),\n    \"LAWNGREEN\" : makeColor(124, 252, 0),\n    \"CHARTREUSE\" : makeColor(127, 255, 0),\n    \"GREEN YELLOW\" : makeColor(173, 255, 47),\n    \"GREENYELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW GREEN\" : makeColor(154, 205, 50),\n    \"YELLOWGREEN\" : makeColor(154, 205, 50),\n    \"MEDIUM FOREST GREEN\" : makeColor(107, 142, 35),\n    \"OLIVEDRAB\" : makeColor(107, 142, 35),\n    \"MEDIUMFORESTGREEN\" : makeColor(107, 142, 35),\n    \"DARK OLIVE GREEN\" : makeColor(85, 107, 47),\n    \"DARKOLIVEGREEN\" : makeColor(85, 107, 47),\n    \"DARKSEAGREEN\" : makeColor(143, 188, 139),\n    \"LIME\" : makeColor(0, 255, 0),\n    \"DARK GREEN\" : makeColor(0, 100, 0),\n    \"DARKGREEN\" : makeColor(0, 100, 0),\n    \"LIME GREEN\" : makeColor(50, 205, 50),\n    \"LIMEGREEN\" : makeColor(50, 205, 50),\n    \"FOREST GREEN\" : makeColor(34, 139, 34),\n    \"FORESTGREEN\" : makeColor(34, 139, 34),\n    \"SPRING GREEN\" : makeColor(0, 255, 127),\n    \"SPRINGGREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM SPRING GREEN\" : makeColor(0, 250, 154),\n    \"MEDIUMSPRINGGREEN\" : makeColor(0, 250, 154),\n    \"SEA GREEN\" : makeColor(46, 139, 87),\n    \"SEAGREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM SEA GREEN\" : makeColor(60, 179, 113),\n    \"MEDIUMSEAGREEN\" : makeColor(60, 179, 113),\n    \"AQUAMARINE\" : makeColor(112, 216, 144),\n    \"LIGHTGREEN\" : makeColor(144, 238, 144),\n    \"PALE GREEN\" : makeColor(152, 251, 152),\n    \"PALEGREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM AQUAMARINE\" : makeColor(102, 205, 170),\n    \"MEDIUMAQUAMARINE\" : makeColor(102, 205, 170),\n    \"TURQUOISE\" : makeColor(64, 224, 208),\n    \"LIGHTSEAGREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM TURQUOISE\" : makeColor(72, 209, 204),\n    \"MEDIUMTURQUOISE\" : makeColor(72, 209, 204),\n    \"HONEYDEW\" : makeColor(240, 255, 240),\n    \"MINTCREAM\" : makeColor(245, 255, 250),\n    \"ROYALBLUE\" : makeColor(65, 105, 225),\n    \"DODGERBLUE\" : makeColor(30, 144, 255),\n    \"DEEPSKYBLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWERBLUE\" : makeColor(100, 149, 237),\n    \"STEEL BLUE\" : makeColor(70, 130, 180),\n    \"STEELBLUE\" : makeColor(70, 130, 180),\n    \"LIGHTSKYBLUE\" : makeColor(135, 206, 250),\n    \"DARK TURQUOISE\" : makeColor(0, 206, 209),\n    \"CYAN\" : makeColor(0, 255, 255),\n    \"AQUA\" : makeColor(0, 255, 255),\n    \"DARKCYAN\" : makeColor(0, 139, 139),\n    \"TEAL\" : makeColor(0, 128, 128),\n    \"SKY BLUE\" : makeColor(135, 206, 235),\n    \"CADET BLUE\" : makeColor(96, 160, 160),\n    \"CADETBLUE\" : makeColor(95, 158, 160),\n    \"DARK SLATE GRAY\" : makeColor(47, 79, 79),\n    \"DARKSLATEGRAY\" : makeColor(47, 79, 79),\n    \"LIGHTSLATEGRAY\" : makeColor(119, 136, 153),\n    \"SLATEGRAY\" : makeColor(112, 128, 144),\n    \"LIGHT STEEL BLUE\" : makeColor(176, 196, 222),\n    \"LIGHTSTEELBLUE\" : makeColor(176, 196, 222),\n    \"LIGHT BLUE\" : makeColor(173, 216, 230),\n    \"LIGHTBLUE\" : makeColor(173, 216, 230),\n    \"POWDERBLUE\" : makeColor(176, 224, 230),\n    \"PALETURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHTCYAN\" : makeColor(224, 255, 255),\n    \"ALICEBLUE\" : makeColor(240, 248, 255),\n    \"AZURE\" : makeColor(240, 255, 255),\n    \"MEDIUM BLUE\" : makeColor(0, 0, 205),\n    \"MEDIUMBLUE\" : makeColor(0, 0, 205),\n    \"DARKBLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT BLUE\" : makeColor(25, 25, 112),\n    \"MIDNIGHTBLUE\" : makeColor(25, 25, 112),\n    \"NAVY\" : makeColor(36, 36, 140),\n    \"BLUE\" : makeColor(0, 0, 255),\n    \"INDIGO\" : makeColor(75, 0, 130),\n    \"BLUE VIOLET\" : makeColor(138, 43, 226),\n    \"BLUEVIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM SLATE BLUE\" : makeColor(123, 104, 238),\n    \"MEDIUMSLATEBLUE\" : makeColor(123, 104, 238),\n    \"SLATE BLUE\" : makeColor(106, 90, 205),\n    \"SLATEBLUE\" : makeColor(106, 90, 205),\n    \"PURPLE\" : makeColor(160, 32, 240),\n    \"DARK SLATE BLUE\" : makeColor(72, 61, 139),\n    \"DARKSLATEBLUE\" : makeColor(72, 61, 139),\n    \"DARKVIOLET\" : makeColor(148, 0, 211),\n    \"DARK ORCHID\" : makeColor(153, 50, 204),\n    \"DARKORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUMPURPLE\" : makeColor(147, 112, 219),\n    \"CORNFLOWER BLUE\" : makeColor(68, 64, 108),\n    \"MEDIUM ORCHID\" : makeColor(186, 85, 211),\n    \"MEDIUMORCHID\" : makeColor(186, 85, 211),\n    \"MAGENTA\" : makeColor(255, 0, 255),\n    \"FUCHSIA\" : makeColor(255, 0, 255),\n    \"DARKMAGENTA\" : makeColor(139, 0, 139),\n    \"VIOLET\" : makeColor(238, 130, 238),\n    \"PLUM\" : makeColor(221, 160, 221),\n    \"LAVENDER\" : makeColor(230, 230, 250),\n    \"THISTLE\" : makeColor(216, 191, 216),\n    \"GHOSTWHITE\" : makeColor(248, 248, 255),\n    \"WHITE\" : makeColor(255, 255, 255),\n    \"WHITESMOKE\" : makeColor(245, 245, 245),\n    \"GAINSBORO\" : makeColor(220, 220, 220),\n    \"LIGHT GRAY\" : makeColor(211, 211, 211),\n    \"LIGHTGRAY\" : makeColor(211, 211, 211),\n    \"SILVER\" : makeColor(192, 192, 192),\n    \"GRAY\" : makeColor(190, 190, 190),\n    \"DARK GRAY\" : makeColor(169, 169, 169),\n    \"DARKGRAY\" : makeColor(169, 169, 169),\n    \"DIM GRAY\" : makeColor(105, 105, 105),\n    \"DIMGRAY\" : makeColor(105, 105, 105),\n    \"BLACK\" : makeColor(0, 0, 0),\n    \"TRANSPARENT\" : makeColor(0, 0, 0, 0),\n};\n\n// Integer\n// generates a random key so react stops complaining\nfunction genKey() {\n    return Math.round(Math.random() * 100000000);\n}\n\n/*\nTODO:\n  Figure out how stars, pentagons, hexagons should work (yay geometry)\n  turn rectangles and triangles into polygons?\n*/\n\n// Integer, Integer, Integer[, Integer] -> Color \nfunction makeColor (r, g, b, a = 255) {\n    if (r < 0 || r > 255 ||\n        g < 0 || g > 255 ||\n        b < 0 || b > 255 ||\n        a < 0 || a > 255 ){\n        throw new Error('r g b a values must be between 0 and 255 (inclusive)');\n    }\n\n    return {r, g, b, a};\n}\n\n// Color, Integer -> Color\nfunction changeAlpha (color, a) {\n    return makeColor(color.r, color.g, color.b, a);\n}\n\n// Integer -> Integer\n// pretty much makes sure the argument is non-negative\nfunction checkDimension(maybeDimension) {\n    if (maybeDimension < 0) {\n        throw new Error('shape dimensions must be non-negative');\n    }\n\n    return maybeDimension;\n}\n\n// (String or Color) -> Color\nfunction checkColor(maybeColor) {\n    if (typeof maybeColor === 'string') {\n        let color = colorDb[maybeColor.replace(' ', '').toUpperCase()];\n        if (color === undefined) {\n            throw new Error(`${maybeColor} is not a valid color`);\n        }\n\n        return color;\n    } \n\n    // T_ODO: check if maybeColor is actually a color object\n    // nvm, I do that in interpreter.js\n    return maybeColor;\n}\n\nfunction checkMode(maybeMode) {\n    if (maybeMode !== 'solid' && maybeMode !== 'outline') {\n        throw new Error(`${maybeMode} is not a valid mode`);\n    }\n\n    return maybeMode;\n}\n\nfunction checkXPlace(maybeXPlace) {\n    if (maybeXPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeXPlace !== 'left' && maybeXPlace !== 'right' && maybeXPlace !== 'center') {\n        throw new Error(`${maybeXPlace} is not a valid x-place`);\n    }\n\n    return maybeXPlace;\n}\n\nfunction checkYPlace(maybeYPlace) {\n    if (maybeYPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeYPlace !== 'top' && maybeYPlace !== 'bottom' && maybeYPlace !== 'center') {\n        throw new Error(`${maybeYPlace} is not a valid y-place`);\n    }\n\n    return maybeYPlace;\n}\n\n// Integer (String or Integer) Color -> Circle\nfunction makeCircle (r, mode, color) {\n    if (typeof mode === 'string') {\n        return {r: checkDimension(r), mode: checkMode(mode), color: checkColor(color), type: 'circle'};\n    } else {\n        return {r: checkDimension(r), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'circle'};\n    }\n}\n\n// Integer Integer (String or Integer) Color -> Rectangle\nfunction makeRectangle (width, height, mode, color) {\n    if (typeof mode === 'string') {\n        return {width: checkDimension(width), height: checkDimension(height), mode: checkMode(mode),  color: checkColor(color), type: 'rect'};\n    } else {\n        return {width: checkDimension(width), height: checkDimension(height), mode: 'solid',  color: changeAlpha(checkColor(color), mode), type: 'rect'};\n    }\n}\n\n// Integer Integer Integer (String or Integer) Color -> Triangle\nfunction makeTriangle (A, B, C, mode, color) {\n    if (typeof mode === 'string') {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: checkMode(mode), color: checkColor(color), type: 'triangle'};\n    } else {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'triangle'};\n    }\n}\n\n// Integer (String or Integer) Color -> Triangle\nfunction makeEquiTriangle (length, mode, color) {\n    return makeTriangle(length, length, length, mode, color);\n}\n\n// [{x: Integer, y: Integer}], (String or Integer), Color -> Polygon\nfunction makePolygon (coords, mode, color) {\n    if (typeof mode === 'string') {\n        return {coordinates: coords, mode: checkMode(mode), color: checkColor(color), type: 'polygon'};\n    } else {\n        return {coordinates: coords, mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'polygon'};\n    }\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makePentagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeHexagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeStar (length, mode, color) {\n    \n}\n\n// [Image] -> Image\nfunction makeBeside (images, yplace = 'center') {\n    return {images, yplace: checkYPlace(yplace), type: 'beside'};\n}\n\n// [Image] -> Image\nfunction makeAbove (images, xplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), type: 'above'};\n}\n\n// [Image] -> Image\nfunction makeOverlay (images, xplace = 'center', yplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), yplace: checkYPlace(yplace), type: 'overlay'};\n}\n\nfunction makePlace (image, x, y, scene) {\n    return {image, x, y, scene, type: 'place'};\n}\n\n// Integer, Integer[, (Color or String)] -> Image\nfunction emptyScene (w, h, color = 'white') {\n    return makeOverlay([makeRectangle(w, h, 'outline', 'black'), makeRectangle(w, h, 'solid', color)]);\n}\n\n// Image -> Integer\nfunction width (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.width;\n    case 'triangle':\n        return image.A;\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.x).reduce((acc, x) => Math.max(acc, x));\n    case 'beside':\n        return image.images.reduce((acc, image) => acc + width(image), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'place':\n        return width(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Image -> Integer\nfunction height (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.height;\n    case 'triangle':\n        // Heron's Formula, I went on Wikihow for this, don't judge\n        let s = (image.A + image.B + image.C) / 2;\n        let area = Math.sqrt(s * (s  - image.A) * (s - image.B) * (s - image.C));\n        return Math.round((area * 2) / image.A);\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.y).reduce((acc, y) => Math.max(acc, y));\n    case 'beside':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => acc + height(image), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'place':\n        return height(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n\n// Image, Integer, Integer -> SVG\nfunction render (image, x, y) {\n    switch (image.type) {\n    case 'circle':\n        return render_circle(image, x, y);\n    case 'rect':\n        return render_rect(image, x, y);\n    case 'triangle':\n        return render_triangle(image, x, y);\n    case 'polygon':\n        return render_polygon(image, x, y);\n    case 'beside':\n        return render_beside(image, x, y);\n    case 'above':\n        return render_above(image, x, y);\n    case 'overlay':\n        return render_overlay(image, x, y);\n    case 'place':\n        return render_place(image, x, y);\n    default:\n        throw new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Circle, Integer, Integer -> SVG\nfunction render_circle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    // for some reason alpha is the only float in rgba in css...\n    let alpha = image.color.a / 255;\n    switch (image.mode) {\n    case 'solid':\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r}\n                       fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke is pretty annoying...\n        // it draws both outside of the shape and inside it...\n        //so it's difficult to figure out where exactly it wants to draw\n\n        // this should draw the outline of a circle (approximately)\n        // not sure how it works on browsers besides firefox though\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r - .5}\n                       fill='none'\n                       stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                       strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Rectangle, Integer, Integer -> SVG\nfunction render_rect (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    switch (image.mode) {\n    case 'solid':\n        return <rect x={x}\n                     y={y}\n                     width={image.width}\n                     height={image.height}\n                     fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke has similar problems here as it does in circle\n        return <rect x={x + .5}\n                      y={y + .5}\n                      width={image.width - 1}\n                      height={image.height - 1}\n                      fill='none'\n                      stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                      strokeWidth={1}\n                 />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Triangle, Integer, Integer -> SVG\nfunction render_triangle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let D = Math.round(Math.sqrt(Math.pow(image.B, 2) - Math.pow(height(image), 2))); \n    // these are coordinates                                   //         b       \n    let a = {x: x, y: y + height(image)};                      //         .       \n    let b = {x: x + D, y: y};                                  //        /|\\      \n    let c = {x: x + width(image), y: y + height(image)};       //       / | \\     \n                                                               //   B  /  |  \\  C\n                                                               //     /   |h  \\\n                                                               //    /    |    \\\n                                                               //   ._____|_____.\n                                                               //  a   D  A      c\n    switch (image.mode) {                                       \n    case 'solid':                                               \n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Polygon, Integer, Integer -> SVG\nfunction render_polygon (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let points = image.coordinates.map((coord) => `${coord.x + x},${coord.y + y}`).reduce((acc, cur) => acc + ' ' + cur);\n    switch (image.mode) {\n    case 'solid':                                               \n        return <polygon\n                 points={points}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={points}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n\n// should I flatten [SVG]s?\n// no, not really any point. react seems to figure it out\n\n// (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer) -> ([Image], Integer, Integer) -> [SVG]\nfunction make_list_renderer (xCorrect, yCorrect, xChange, yChange) {\n    function render_list (images, x, y) {\n        if (images.length === 0) {\n            throw new Error('I need at least 1 image to render!');\n        }\n\n        let w = width(images[0]);\n        let h = height(images[0]);\n\n        let first = render(images[0], xCorrect(x, w), yCorrect(y, h));\n\n        if (images.length === 1) {\n            return [first];\n        }\n\n        let rest = render_list(images.slice(1), xChange(x, w), yChange(y, h));\n\n        // return list in reverse because the last child of an svg tag is shown on top\n        // this matters for overlay, but makes no difference in beside, above\n        return [...rest, first];\n    }\n\n    return render_list;\n}\n\n// Beside, Ingeger, Integer -> [SVG]\nfunction render_beside (image, x, y) {\n    let initY = y,\n        yCorrect = (y, h) => y;\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer((x, w) => x,\n                                         yCorrect,\n                                         (x, dx) => x + dx,\n                                         (y, dy) => y);\n    return renderoozle(image.images, x, initY);\n}\n\n// Above, Integer, Integer -> [SVG]\nfunction render_above (image, x, y) {\n    let initX = x,\n        xCorrect = (x, w) => x;\n\n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         (y, h) => y,\n                                         (x, dx) => x,\n                                         (y, dy) => y + dy);\n    return renderoozle(image.images, initX, y);\n\n}\n\n// Overlay, Integer, Integer -> [SVG]\nfunction render_overlay (image, x, y) {\n    let initX = x,\n        initY = y,\n        xCorrect = (x, w) => x,\n        yCorrect = (y, h) => y;\n    \n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         yCorrect,\n                                         (x, dx) => x,\n                                         (y, dy) => y);\n    return renderoozle(image.images, initX, initY);\n}\n\n// Place, Integer, Integer -> SVG\nfunction render_place (image, x, y) {\n    return [render(image.scene, x, y), render(image.image, x + image.x - width(image.image) / 2, y + image.y - height(image.image) / 2)];\n}\n\n// Image -> top level SVG\nfunction paint (image) {\n    let picture = render(image, 0, 0);\n    return (\n        <svg viewBox={`0 0 ${width(image)} ${height(image)}`}\n             xmlns='http://www.w3.org/2000/svg'\n             width={width(image)}\n             height={height(image)}\n             key={genKey()}\n        >\n          {picture}\n        </svg>\n    );\n}\n\nexport {makeCircle, makeRectangle, makeEquiTriangle, makeStar, makePentagon, makeHexagon,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint, width, height};\n","// for typeCheck Error messages\nimport React from 'react';\nimport {makeCircle, makeRectangle, makeEquiTriangle,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint} from './image.js';\n\n/****************\n   Interpreter\n****************/\n\nconst RVAR_T =    0;\nconst RAPP_T =    1;\nconst RFUNCT_T =  2;\nconst RNUM_T =    3;\nconst RBOOL_T =   4;\nconst RSTRING_T = 5;\nconst RLIST_T =   6;\nconst RSYM_T =    7;\nconst RIMAGE_T =  8;\nconst RCOLOR_T =  9;\nconst RIF_T =     10;\nconst RSTRUCT_T = 11;\nconst RCLOS_T =   12;\n\nconst varRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst appRE = /^\\(/;\nconst numRE = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#])/; // this one doesn't permit fractions\nconst boolRE = /^#(?:[tfTF]|true|false)(?=$|[\\s\",'`()[\\]{}|;#])/;\nconst strRE = /^\"[^\\\\\"]*\"/; // TODO: handle backslash escape\nconst quoteRE = /^'/;\nconst symRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst listRE = /^\\(/;\n\nconst protoEnv = [\n    // functions\n    {name: '+', binding: {type: RFUNCT_T,\n                          value: plus}},\n    {name: 'add1', binding: {type: RFUNCT_T,\n                          value: add1}},\n    {name: '-', binding: {type: RFUNCT_T,\n                          value: minus}},\n    {name: 'sub1', binding: {type: RFUNCT_T,\n                          value: sub1}},\n    {name: '*', binding: {type: RFUNCT_T,\n                          value: times}},\n    {name: '/', binding: {type: RFUNCT_T,\n                          value: divide}},\n    {name: 'car', binding: {type: RFUNCT_T,\n                            value: car}},\n    {name: 'first', binding: {type: RFUNCT_T,\n                              value: car}},\n    {name: 'cdr', binding: {type: RFUNCT_T,\n                            value: cdr}},\n    {name: 'rest', binding: {type: RFUNCT_T,\n                             value: cdr}},\n    {name: 'cons', binding: {type: RFUNCT_T,\n                             value: cons}},\n    {name: 'list', binding: {type: RFUNCT_T,\n                             value: list}},\n    {name: 'not', binding: {type: RFUNCT_T,\n                            value: not}},\n    {name: 'and', binding: {type: RFUNCT_T,\n                            value: and}},\n    {name: 'or', binding: {type: RFUNCT_T,\n                           value: or}},\n    {name: 'eqv?', binding: {type: RFUNCT_T,\n                             value: iseqv}},\n    {name: 'null?', binding: {type: RFUNCT_T,\n                              value: isnull}},\n    {name: 'empty?', binding: {type: RFUNCT_T,\n                               value: isnull}},\n    {name: 'cons?', binding: {type: RFUNCT_T,\n                               value: iscons}},\n    {name: '=', binding: {type: RFUNCT_T,\n                          value: equalsign}},\n    {name: '>', binding: {type: RFUNCT_T,\n                          value: gtsign}},\n    {name: '>=', binding: {type: RFUNCT_T,\n                           value: gesign}},\n    {name: '<', binding: {type: RFUNCT_T,\n                          value: ltsign}},\n    {name: '<=', binding: {type: RFUNCT_T,\n                           value: lesign}},\n    {name: 'string-length', binding: {type: RFUNCT_T,\n                           value: stringLength}},\n    {name: 'string-append', binding: {type: RFUNCT_T,\n                           value: stringAppend}},\n    {name: 'string=?', binding: {type: RFUNCT_T,\n                                 value: isstrequal}},\n    {name: 'circle', binding: {type: RFUNCT_T,\n                               value: circle}},\n    {name: 'rectangle', binding: {type: RFUNCT_T,\n                               value: rectangle}},\n    {name: 'square', binding: {type: RFUNCT_T,\n                               value: square}},\n    {name: 'triangle', binding: {type: RFUNCT_T,\n                               value: triangle}},\n    {name: 'beside', binding: {type: RFUNCT_T,\n                               value: beside}},\n    {name: 'beside/align', binding: {type: RFUNCT_T,\n                               value: besideAlign}},\n    {name: 'above', binding: {type: RFUNCT_T,\n                               value: above}},\n    {name: 'above/align', binding: {type: RFUNCT_T,\n                               value: aboveAlign}},\n    {name: 'overlay', binding: {type: RFUNCT_T,\n                               value: overlay}},\n    {name: 'overlay/align', binding: {type: RFUNCT_T,\n                               value: overlayAlign}},\n    {name: 'place-image', binding: {type: RFUNCT_T,\n                                    value: placeImage}},\n    {name: 'empty-scene', binding: {type: RFUNCT_T,\n                                    value: empty_Scene}},\n    {name: 'color', binding: {type: RFUNCT_T,\n                              value: color}},\n    // constants\n    {name: 'true', binding: {type: RBOOL_T,\n                             value: true}},\n    {name: 'false', binding: {type: RBOOL_T,\n                              value: false}},\n    {name: 'null', binding: {type: RLIST_T,\n                             value: null}},\n    {name: 'empty', binding: {type: RLIST_T,\n                              value: null}},\n];\n\n// put posn in initEnv becaouse why not\nconst initEnv = makeStruct('posn', ['x', 'y'], protoEnv);\n\n// String -> {prog: Program, rest: String}\n// parses all expressions except quoted expressions\nfunction parse(text) {\n    if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n    } else if (varRE.test(text)) {\n        let matches = text.match(varRE);\n        let name = matches[0];\n        let rest = text.slice(name.length).trim();\n        let variable = {value: name, type: RVAR_T};\n\n        return {prog: variable, rest: rest};\n\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr[1].toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (appRE.test(text)) {\n        text = text.slice(1).trim(); // remove open paren\n        let parseFunct = parse(text); // parse function\n        let funct = parseFunct.prog; // get function\n        text = parseFunct.rest; // get past function\n        let args = [];\n\n        while (text[0] !== ')') {\n            let parseArg = parse(text);\n            args = [...args, parseArg.prog];\n            text = parseArg.rest;\n        }\n\n        let app;\n        if (funct.value === 'or') {\n            if (args.length === 2) {\n                app = {value: {tst: args[0], els: args[1], thn: {value : true, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'and') {\n\n\n         if (args.length === 2) {\n                app = {value: {tst: args[0], thn: args[1], els: {value : false, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'if') {\n            if (args.length === 3) {\n                app = {value: {tst: args[0], thn: args[1], els: args[2]}, type: RIF_T};\n            }\n            else {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        } else {\n            app = {value: {funct: funct, args: args}, type: RAPP_T};\n        }\n        let rest = text.slice(1).trim(); // remove close paren\n\n        return {prog: app, rest: rest};\n\n    } else if (quoteRE.test(text)) {\n        return parseQ(text.slice(1).trim());\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> {prog: Program, rest: String}\n// parses quoted expressions\nfunction parseQ(text) {\n    if (listRE.test(text)) {\n        text = text.slice(1).trim(); // remove quote, open paren\n        let listArr = [];\n\n        while (text[0] !== ')') {\n            let cur = parseQ(text);\n            listArr = [cur.prog, ...listArr]; // listArr is constructed backwards\n            text = cur.rest;\n        }\n\n        let rest = text.slice(1).trim();\n        let prog = listArr.reduce((acc, cur) => ({value: {a: cur, d: acc}, type: RLIST_T}), {value: null, type: RLIST_T}); // turn listArr into an Rlist\n\n        return {prog: prog, rest: rest};\n\n    } else if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr.charAt(1).toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (symRE.test(text)) {\n        let matches = text.match(symRE);\n        let value = matches[0];\n        let sym = {value: value, type: RSYM_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: sym, rest: rest};\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> [PrefixProg]\nfunction parsePrefix (text) {\n    const commentRE = /;.*/g;\n    const defStructRE = /^\\(\\s*define-struct(?=$|[\\s\",'`()[\\]{}|;#])/;\n    const defineRE = /^\\(\\s*define(?=$|[\\s\",'`()[\\]{}|;#])/;\n    const nameRE = /^(?!-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#]))[^\\s\",'`()[\\]{}|;#]+/;\n\n    text = text.replace(commentRE, '');\n    text = text.trim();\n\n    let progs = [];\n\n    while(text !== '') {\n        let parsed = parsePrefixExpr(text);\n\n        text = parsed.rest;\n        progs = [...progs, parsed.prog];\n    }\n\n    return progs;\n\n    // Text -> {prog: PrefixProg, rest: String}\n    function parsePrefixExpr (text) {\n        if (defStructRE.test(text)) {\n            const openRE = /[([]/;\n\n            text = text.slice(text.match(defStructRE)[0].length).trim();\n\n            if (!nameRE.test(text)) {\n                throw new Error('Invalid Struct Name');\n            }\n\n            let superID = text.match(nameRE)[0];\n            text = text.slice(superID.length).trim();\n\n            if (!openRE.test(text)) {\n                throw new Error('Invalid Struct Definition');\n            }\n\n            let fieldOpen = text.match(openRE)[0];\n            text = text.slice(fieldOpen.length).trim();\n\n            let fieldClose;\n            if (fieldOpen === '(') {\n                fieldClose = ')';\n            } else if (fieldOpen === '[') {\n                fieldClose = ']';\n            }\n\n            let fieldIDs = [];\n            while (text[0] !== fieldClose) {\n                if (!nameRE.test(text)) {\n                    throw new Error('Invalid Field Name');\n                }\n\n                let fieldID = text.match(nameRE)[0];\n\n                text = text.slice(fieldID.length);\n                text = text.trim();\n\n                fieldIDs = [...fieldIDs, fieldID];\n            }\n\n            text = text.slice(1).trim();\n\n            if (text[0] !== ')') {\n                throw new Error('Invalid Struct Definition');\n            }\n            text = text.slice(1).trim();\n\n            return {prog: {superID, fieldIDs, type: 'struct'}, rest: text}\n        } else if (defineRE.test(text)) {\n            const closRE = /^\\(/;\n\n            text = text.slice(text.match(defineRE)[0].length).trim();\n\n            let name,\n                binding;\n            if (nameRE.test(text)) {    // not function definition\n                name = text.match(nameRE)[0];\n                text = text.slice(name.length).trim();\n\n                let parsed = parse(text);\n\n                binding = parsed.prog;\n                text = parsed.rest.trim();\n\n            } else if (closRE.test(text)) {\n                text = text.slice(text.match(closRE)[0].length).trim();\n\n                if (!nameRE.test(text)) {\n                    throw new Error(`Invalid Prefix Form: ${text}`);\n                }\n\n                name = text.match(nameRE)[0];\n                text = text.slice(name.length).trim();\n\n                let parameters = [];\n                while (text[0] !== ')') {\n                    if (!nameRE.test(text)) {\n                        throw new Error(`Invalid Prefix Form: ${text}`);\n                    }\n                    let param = text.match(nameRE)[0];\n                    text = text.slice(param.length).trim();\n                    parameters = [...parameters, param];\n                }\n\n                text = text.slice(1).trim();\n\n                let parsed = parse(text);\n\n                let body = parsed.prog;\n\n                text = parsed.rest;\n                text = text.trim();\n\n                binding = {value: {parameters, body}, type: RCLOS_T}\n            } else {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            if (text[0] !== ')') {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            text = text.slice(1).trim();\n\n            return {prog: {name, binding, type: 'define'}, rest: text};\n\n        } else {\n            throw new Error(`Invalid Prefix Form: ${text}`);\n        }\n    }\n}\n\n/***\n    Environment: [Variable]\n    Variable:    {name:    String,\n                  binding: Program}\n***/\n\n// Program, Environment -> Program\nfunction interp(prog, env) {\n    function lookup(name) {\n        let val = env.reduce((acc, variable) => {\n            if (acc !== undefined) {\n                return acc;\n            }\n\n            return variable.name === name ? variable.binding : undefined;\n        }, undefined);\n\n        if (val === undefined){\n            throw new ReferenceError(name + ' isn\\'t defined');\n        }\n\n        return val;\n    }\n\n    switch(prog.type) {\n        case RNUM_T:\n            return prog;\n        case RBOOL_T:\n            return prog;\n        case RSTRING_T:\n            return prog;\n        case RLIST_T:\n            return prog;\n        case RSYM_T:\n            return prog;\n        case RVAR_T:\n            return lookup(prog.value);\n        case RFUNCT_T:\n            return prog;\n        case RCLOS_T:\n            // put environment in there and stuff\n            return {value: {parameters: prog.value.parameters, body: prog.value.body, env: env}, type: RCLOS_T};\n        case RIF_T:\n            let tst = interp(prog.value.tst, env);\n            typeCheck(tst, [RBOOL_T]);\n\n            if (tst.value) {\n                return interp(prog.value.thn, env);\n            }\n            else {\n                return interp(prog.value.els, env);\n            }\n\n        case RAPP_T:\n            let name = 'anonymous';\n            if (isRVAR(prog.value.funct)) {\n                name = prog.value.funct.value; // that's a lot of .s\n            }\n\n            // interp operator (valof rator env)\n            let rator = interp(prog.value.funct, env);\n\n            // interpret arguments (valof rand env)\n            let rands = prog.value.args.map((arg) => interp(arg, env));\n            switch(rator.type) {\n                case RFUNCT_T:\n                    return rator.value(rands);\n                case RCLOS_T:\n                    if (rands.length !== rator.value.parameters.length) {\n                        throw new Error (`Arity Mismatch: ${name} expects ${rator.value.parameters.length} arguments but got ${rands.length}`);\n                    }\n\n                    let extedEnv = [...rator.value.env, ...rator.value.parameters.map((name, i) => ({name, binding: rands[i]}))];\n                    return interp(rator.value.body, extedEnv);\n                default:\n                    typeCheck(rator, [RFUNCT_T]);\n            }\n\n            // this break only exists to make the js syntax checker stop complaining\n            break;\n        case RIMAGE_T:\n            return prog;\n        case RCOLOR_T:\n            return prog;\n\n        default:\n            //console.log(prog);\n            throw new TypeError(\"Unknown Type \" + prog.value);\n    }\n}\n\n// [PrefixProgram], Environment -> Environment\nfunction interpPrefix (progs, env) {\n    let ext = progs.reduce((curEnv, prog) => {\n        switch (prog.type) {\n            case 'struct':\n                return makeStruct(prog.superID, prog.fieldIDs, curEnv);\n            case 'define':\n                return makeDefine(prog.name, prog.binding, curEnv);\n            default:\n                throw new Error('Invalid Prefix Prog');\n\n        }\n    }, env);\n\n    return ext;\n}\n\n// String, Program, Environment -> Environment\nfunction makeDefine (name, binding, env) {\n    switch (binding.type) {\n        case RCLOS_T: // TODO: make recursion work\n            let closVar = {name, binding: interp(binding, env)};\n            return [...env, closVar];\n        default:\n            let def = {name, binding: interp(binding, env)};\n            return [...env, def];\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_cons(prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            if (prog.value === null) {\n                return ['\\'()'];\n            } else {\n                return ['(cons ', ...unparse_cons(prog.value.a), ' ', ...unparse_cons(prog.value.d), ')'];\n            }\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_cons(prog.value.funct), ...prog.value.args.map(unparse_cons).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_cons(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            //console.log(prog);\n            return 'error or something';\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_list (prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            // special case for empty list\n            if (prog.value === null) {\n                return ['\\'()'];\n            }\n\n            let elems = [];\n            while (prog.value !== null) {\n                elems = [...elems, ' ', ...unparse_list(prog.value.a)];\n                prog = prog.value.d;\n            }\n\n            return ['(list', ...elems, ')'];\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_list(prog.value.funct), ...prog.value.args.map(unparse_list).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_list(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            return 'error or something';\n    }\n}\n\n// String -> Program\n// parses text and checks for syntax errors based on what's returned\nfunction parseCheck(text) {\n    let parsed = parse(text);\n\n    switch (parsed.rest) {\n    case '':\n        break;\n    default:\n        throw new SyntaxError('Parsing Error');\n    }\n\n    return parsed.prog;\n}\n\n// Program -> [Number] -> Error Maybe\n// checks if prog is of one of the types in types\nfunction typeCheck(prog, types) {\n    // Number -> String\n    function getType(type) {\n        switch (type) {\n        case RVAR_T:\n            return 'variable';\n        case RAPP_T:\n            return 'application';\n        case RFUNCT_T:\n            return 'function';\n        case RCLOS_T:\n            return 'closure';\n        case RNUM_T:\n            return 'number';\n        case RBOOL_T:\n            return 'boolean';\n        case RSTRING_T:\n            return 'string';\n        case RLIST_T:\n            return 'list';\n        case RSYM_T:\n            return 'symbol';\n        case RIMAGE_T:\n            return 'image';\n        case RCOLOR_T:\n            return 'color';\n        default:\n            return '???';\n        }\n    }\n\n    if (!types.includes(prog.type)) {\n        let typesString = types.map(getType).reduce((acc, type) => acc + ` or a ${type}`);\n        let e = new TypeError();\n        // shoehorn a non-string into the message field\n        // TODO: somehow make this use the approproate unparser maybe\n        e.message = <React.Fragment>{[unparse_cons(prog), \" ain't a \" + typesString]}</React.Fragment>;\n        throw e;\n    }\n}\n\n// Super-Id, [Field-Id], Environment -> Environment\n// makes a racket structure according to id and field and appends\n// a function to make an id, a function to check if something is an id\n// and n functions that each access one of the fields of an id\n// to the given environment (and returns it)\nfunction makeStruct(superID, fieldIDs, env) {\n    const numFields = fieldIDs.length;\n\n    // [Program] -> Struct\n    function construct (args) {\n        if (args.length !== numFields) {\n            throw new Error(`make-${superID}: arity mismatch, expected ${numFields} arguments but given ${args.length}`);\n        }\n\n        let fields = args.map((prog, i) => ({id: fieldIDs[i], binding: prog}));\n        return {value: {id: superID, fields}, type: RSTRUCT_T};\n    }\n\n    // [Program] -> RBOOL\n    function isID (args) {\n        if (args.length !== 1) {\n            throw new Error(`${superID}?: arity mismatch, expected 1 argument but given ${args.length}`);\n        }\n\n        let struct = args[0];\n\n        return {value: struct.type === RSTRUCT_T && struct.value.id === superID,\n                type: RBOOL_T};\n    }\n\n    let fieldExtractors = fieldIDs.map((fid) => (\n        // Struct -> Program\n        function (args) {\n            if (args.length !== 1) {\n                throw new Error(`${superID}-${fid}: arity mismatch, expected 1 argument but given ${args.length}`);\n            }\n\n            if (args[0].type !== RSTRUCT_T || args[0].value.id !== superID) {\n                throw new Error(`${superID}-${fid}: expects a ${superID}`);\n            }\n\n            let struct = args[0].value;\n\n            // hey, it's lookup again!\n            return struct.fields.reduce((acc, field) =>  {\n                if (acc !== undefined) {\n                    return acc;\n                } else if (field.id === fid) {\n                    //console.log(field);\n                    return field.binding;\n                } else {\n                    return undefined;\n                }\n            }, undefined);\n        }\n    ));\n\n    let extedEnv = [{name: `make-${superID}`, binding: {type:  RFUNCT_T,\n                                                        value: construct}},\n                    {name: `${superID}?`, binding: {type: RFUNCT_T,\n                                                    value: isID}},\n                    ...fieldExtractors.map((extract, i) => (\n                        {name: `${superID}-${fieldIDs[i]}`, binding: {type: RFUNCT_T,\n                                                                      value: extract}}\n                    ))];\n\n    return [...env, ...extedEnv];\n}\n\n/**\n * Type Checking Functions\n * so I don't have to do prog.type === RTYPE_T all the time\n */\n\nfunction isRVAR (prog) {\n    return prog.type === RVAR_T;\n}\nfunction isRAPP (prog) {\n    return prog.type === RAPP_T;\n}\nfunction isRFUNCT (prog) {\n    return prog.type === RFUNCT_T;\n}\nfunction isRNUM (prog) {\n    return prog.type === RNUM_T;\n}\nfunction isRBOOL (prog) {\n    return prog.type === RBOOL_T;\n}\nfunction isRSTRING (prog) {\n    return prog.type === RSTRING_T;\n}\nfunction isRLIST (prog) {\n    return prog.type === RLIST_T;\n}\nfunction isRSYM (prog) {\n    return prog.type === RSYM_T;\n}\nfunction isRIMAGE (prog) {\n    return prog.type === RIMAGE_T;\n}\nfunction isRCOLOR (prog) {\n    return prog.type === RCOLOR_T;\n}\nfunction isRIF (prog) {\n    return prog.type === RIF_T;\n}\nfunction isRSTRUCT (prog) {\n    return prog.type === RSTRUCT_T;\n}\n\n/************************************\n * Functions in initial Environment *\n ************************************/\n\nfunction plus(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction add1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value + 1,\n            type: RNUM_T};\n}\nfunction minus(args) {\n    if (args.length < 1) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        return {value: 0 - args[0].value,\n                type: RNUM_T};\n    }\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value - arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction sub1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value - 1,\n            type: RNUM_T};\n}\nfunction times(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value * arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction divide(args) {\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        let firstArg = args[0];\n\n        typeCheck(firstArg, [RNUM_T]);\n\n        return {value: 1 / firstArg.value,\n                type: RNUM_T};\n    } else if (args.length === 2) {\n        let firstArg = args[0];\n        let secondArg = args[1];\n\n        typeCheck(firstArg, [RNUM_T]);\n        typeCheck(secondArg, [RNUM_T]);\n\n        return {value: firstArg.value / secondArg.value,\n                type: RNUM_T};\n    }\n\n    return {value: false, type: RBOOL_T};\n}\nfunction car(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    return firstArg.value.a;\n}\nfunction cdr(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    return firstArg.value.d;\n}\nfunction cons(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    // because BSL\n    typeCheck(secondArg, [RLIST_T]);\n\n    return {value: {a: firstArg, d: secondArg},\n            type: RLIST_T};\n}\nfunction list(args) {\n    // this indentation is pretty jank\n    return args.reverse().reduce((acc, arg) => (\n        {value: {a: arg, d: acc},\n         type: RLIST_T}),\n                                 {value: null,\n                                  type: RLIST_T});\n}\nfunction not(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === false,\n            type: RBOOL_T};\n}\nfunction iseqv(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    return {value: firstArg.value === secondArg.value,\n            type: RBOOL_T};\n}\nfunction and(args) {\n    return args.reduce((acc, cur) => {\n        return acc.value !== false ? cur : {value: false, type: RBOOL_T};\n    }, {value: true, type: RBOOL_T});\n\n} function or(args) {return args.reduce((acc, cur) => {\n        return acc.value !== false ? acc : cur;\n    }, {value: true, type: RBOOL_T});\n\n}\nfunction isnull(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction iscons(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value !== null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction equalsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value===cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gtsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value > cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value >= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction ltsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value < cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction lesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value <= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction isstrequal(args) {\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    let value = args.map((arg) => arg.value).reduce((acc, val) => {\n\n        if (acc === false) {\n            return false;\n        }\n\n        return acc === val ? acc : false;\n    });\n\n    if (value !== false) {\n        return {value: true, type: RBOOL_T};\n    } else {\n        return {value, type: RBOOL_T};\n    }\n}\nfunction stringLength(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RSTRING_T]);\n\n    return {value: firstArg.value.length,\n            type: RNUM_T};\n}\nfunction stringAppend(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RSTRING_T}\n    ));\n}\nfunction circle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeCircle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction rectangle(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(fourthArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction square(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction triangle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeEquiTriangle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction beside(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction besideAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction above(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction aboveAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlay(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlayAlign(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let restArgs = args.slice(2);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    typeCheck(secondArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(restArgs.map((arg) => arg.value), firstArg.value, secondArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction placeImage(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let img = args[0];\n    let x = args[1];\n    let y = args[2];\n    let scene = args[3];\n\n    typeCheck(img, [RIMAGE_T]);\n    typeCheck(x, [RNUM_T]);\n    typeCheck(y, [RNUM_T]);\n    typeCheck(scene, [RIMAGE_T]);\n\n    let value = makePlace(img.value, x.value, y.value, scene.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction empty_Scene(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n\n    let value;\n    if (thirdArg !== undefined) {\n        typeCheck(thirdArg, [RCOLOR_T, RSTRING_T, RSYM_T]);\n        value = emptyScene(firstArg.value, secondArg.value, thirdArg.value);\n    } else {\n        value = emptyScene(firstArg.value, secondArg.value);\n    }\n\n    return {value, type: RIMAGE_T};\n}\nfunction color(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T]);\n\n    let value;\n    if (fourthArg !== undefined) {\n        typeCheck(fourthArg, [RNUM_T]);\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n    } else {\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value);\n    }\n\n    return {value, type: RCOLOR_T};\n}\n\nexport {interp, parseCheck, initEnv, parsePrefix, interpPrefix,\n        isRVAR, isRAPP, isRFUNCT, isRNUM, isRBOOL, isRSTRING, isRLIST, isRSYM, isRIMAGE, isRCOLOR, isRIF, isRSTRUCT,\n        RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T, RIMAGE_T, RCOLOR_T, RIF_T,\n        unparse_cons, unparse_list};\n","import {isRBOOL} from './interpreter.js';\n\n/************\n    Colors\n************/\n\n// value to put in child formulas that don't have an output for that row\nexport const gray = {gray: 'gray'};\n// value to put in child formulas that have an error output for that row (non-boolean and non-gray)\nexport const pink = {pink: 'pink'};\n// value that indicates an uninitialized input\nexport const yellow = {yellow: 'yellow'};\n\n/*********************\n   Functions I Want\n*********************/\n// [Program] -> Boolean\n// returns true if progs has at least one member and all of its members are boooleans\n//    otherwise returns false\nexport function allBools(progs){\n    if (progs.length === 0 || progs.every((prog) => prog === gray)) {\n        return false;\n    }\n\n    return progs.every((prog) => prog === gray || isRBOOL(prog));\n}\n\nexport function isBooleanFormula(formula) {\n    return allBools(formula.outputs) || formula.thenChildren !== undefined;\n}\n\n","import {yellow, isBooleanFormula} from './header.js';\nimport {RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T} from './interpreter.js';\n\n/*********************\n    Pretty Printer\n*********************/\n\n/***\n    Data Definitions\n\n    a DOC is one of\n    - NIL\n    - TEXT\n    - LINE\n\n    A NIL is\n    () => {type: 'NIL'}\n\n    A TEXT is\n    () => {type: 'TEXT',\n    text: String,\n    rest: DOC}\n\n    A LINE is\n    () => {type: 'LINE',\n    indent: Integer,\n    rest: DOC}\n\n    A Doc is one of\n    - Nil\n    - Concat\n    - Nest\n    - Text\n    - Line\n    - Union\n\n    A Nil is\n    {type: 'nil'}\n    A Nest is\n    {type:   'nest',\n    indent: Integer,\n    rest:   Doc}\n\n    A Text is\n    {type: 'text',\n    text: String}\n\n    A Line is\n    {type: 'line'}\n\n    A Concat is\n    {type: 'concat',\n    left: Doc,\n    right: () => Doc}\n\n    A Union is\n    {type:  'union',\n    left:  Doc,\n    right: () => Doc}\n\n    A Pair is\n    {doc:    Doc,\n    indent: Integer}\n***/\n\n// DOC\nconst NIL = () => ({type: 'NIL'});\n\n// Doc\nconst nil = {type: 'nil'};\n\n// String -> Doc\nfunction text (string) {\n    if (string === '') {\n        return nil;\n    } else {\n        return {type: 'text', text: String(string)};\n    }\n}\n\n// Doc\nconst line = {type: 'line'};\n\n// Doc, () => Doc -> Doc\nfunction union (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    return {type: 'union', left: docL, right: docR};\n}\n\n// Doc, () => Doc -> Doc\nfunction concat (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    // switch(docR.type) {\n    // case 'union':\n    //     return union(concat(docL, docR.left), concat(docL, docR.right));\n    // default:\n    //     break;\n    // }\n    switch (docL.type) {\n        case 'nil':\n            return docR();\n        case 'concat':\n            return {type: 'concat', left: docL.left, right: () => concat(docL.right(), docR)};\n        case 'union':\n            return union(concat(docL.left, docR), () => concat(docL.right(), docR));\n        default:\n            return {type: 'concat', left: docL, right: docR};\n    }\n}\n\n// Integer -> Doc\nfunction nest (i, doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(nest(i, doc.left), () => nest(i, doc.right()));\n        case 'nest':\n            return {type: 'nest', indent: doc.indent + i, rest: doc.rest};\n        case 'text':\n            return doc;\n        case 'line':\n            return {type: 'nest', indent: i, rest: doc};\n        case 'union':\n            return union(nest(i, doc.left), () => nest(i, doc.right()));\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// DOC -> String\nfunction layout (thunk) {\n\n    let doc = thunk();\n\n    switch (doc.type) {\n        case 'NIL':\n            return '';\n        case 'TEXT':\n            return doc.text + layout(doc.rest);\n        case 'LINE':\n            return '\\n' + ' '.repeat(doc.indent) + layout(doc.rest);\n        default:\n            throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n    }\n}\n\n// Doc -> Doc\nfunction group (doc) {\n    return union(flatten(doc), () => doc);\n}\n\n// Doc -> Doc\nfunction flatten (doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(flatten(doc.left), () => flatten(doc.right()));\n        case 'nest':\n            return flatten(doc.rest);\n        case 'text':\n            return doc;\n        case 'line':\n            return text(' ');\n        case 'union':\n            return flatten(doc.left);\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// Integer, Integer -> (Doc -> String)\nfunction makePretty (width, ribbon) {\n\n    // Integer, Integer, Doc -> DOC\n    function best (thisRibbon, current, doc) {\n        return be(thisRibbon, current, [{indent: 0, doc: doc}]);\n    }\n\n    // DOC -> DOC\n    function memoize(thunk) {\n        let seen = false;\n        let value;\n\n        return () => {\n            if (seen) {\n                return value;\n            } else {\n                seen = true;\n                value = thunk();\n                return value;\n            }\n        };\n    }\n\n    // Integer, Integer, [Pair] -> DOC\n    function be (r, k, pairs) {\n        if (pairs.length === 0) {\n            return NIL;\n        }\n\n        let doc = pairs[0].doc;\n        let indent = pairs[0].indent;\n        let rest = pairs.slice(1);\n\n        switch (doc.type) {\n            case 'nil':\n                return be(r, k, rest);\n            case 'concat':\n                return be(r, k, [{indent, doc: doc.left}, {indent, doc: doc.right()}, ...rest]);\n            case 'nest':\n                return be(r, k, [{indent: indent + doc.indent, doc: doc.rest}, ...rest]);\n            case 'text':\n                if (doc.text === '') {\n                    return NIL;\n                } else {\n                    return memoize(() => ({type: 'TEXT', text: doc.text, rest: memoize(() => (be(r, k + doc.text.length, rest)()))}));\n                }\n            case 'line':\n                return memoize(() => ({type: 'LINE', indent: indent, rest: memoize(() => (be(r + indent, indent, rest)()))}));\n            case 'union':\n                return better(r, k, be(r, k, [{indent, doc: doc.left}, ...rest]),\n                                    memoize(() => (be(r, k, [{indent, doc: doc.right()}, ...rest])())));\n            default:\n                console.log(doc());\n                throw Error(`unnexpected document type: ${doc.type}`);\n        }\n    }\n\n    // Integer, Integer, Integer, DOC, DOC -> DOC\n    function better (thisRibbon, current, docL, docR) {\n        if (fits(width - current, thisRibbon - current, docL)) {\n            return docL;\n        } else {\n            return docR;\n        }\n    }\n\n    // Integer, Integer, DOC -> Boolean\n    function fits(diffWidth, diffRibbon, thunk) {\n        if (diffWidth < 0 || diffRibbon < 0) {\n            return false;\n        }\n\n        let doc = thunk();\n\n        switch (doc.type) {\n            case 'NIL':\n                return true;\n            case 'TEXT':\n                return fits(diffWidth - doc.text.length, diffRibbon - doc.text.length, doc.rest);\n            case 'LINE':\n                return true;\n            default:\n                throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n        }\n    }\n\n    function pretty (doc) {\n        return layout(best(ribbon, 0, doc));\n    }\n\n    return pretty;\n}\n\n/***\n    Utility Functions\n***/\n\n// Doc, Doc -> Doc\nfunction putSpace (docL, docR) {\n    return concat(docL, () => concat(text(' '), () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction putLine (docL, docR) {\n    return concat(docL, () => concat(line, () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction compose (docL, docR) {\n    return concat(docL, () => docR);\n}\n\n// (Doc -> Doc -> Doc), [Doc] -> Doc\nfunction folddoc (f, docs) {\n    if (docs.length === 0) {\n        return nil;\n    } else if (docs.length === 1) {\n        return docs[0];\n    } else {\n        return f(docs[0], folddoc(f, docs.slice(1)));\n    }\n}\n\n// [Doc] -> Doc\n// puts a space between docs\nfunction spread (docs) {\n    return folddoc(putSpace, docs);\n}\n\n// [Doc] -> Doc\n// puts a line between docs\nfunction stack (docs) {\n    return folddoc(putLine, docs);\n}\n\n// [Doc] -> Doc\n// puts docs right next to eachother\nfunction level (docs) {\n    return folddoc(compose, docs);\n}\n\n// String -> Doc -> String -> Doc\n// puts the given document between left and right\nfunction bracket (left, doc, right) {\n    return level([text(left), doc, text(right)]);\n}\n\n/**************************************\n    Thing that Turns Tables Into BSL\n**************************************/\n\n// Program -> Doc\nfunction progToDoc_cons (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_cons(program.value.funct), ...program.value.args.map(progToDoc_cons)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T: // this just does cons, not list\n            if (program.value === null) {\n                return text(\"'()\");\n            } else {\n                return nest(1, bracket('(', group(stack([text('cons'), progToDoc_cons(program.value.a), progToDoc_cons(program.value.d)])), ')'));\n            }\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// Program -> Doc\nfunction progToDoc_list (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_list(program.value.funct), ...program.value.args.map(progToDoc_list)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T:\n            if (program.value === null) {\n                return text(\"'()\");\n            }\n\n            let list = program.value.d,\n                elems = progToDoc_list(program.value.a);\n            while (list.value !== null) {\n                elems = stack([elems, progToDoc_list(list.value.a)]);\n                list = list.value.d;\n            }\n\n            return bracket('(', spread([text('list'), group(elems)]), ')');\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// [Table] -> String\nfunction toBSL(tables, listOrCons, width, ribbon) {\n    // TODO make me work better somehow\n    let progToDoc;\n    if (listOrCons === 'cons') {\n        progToDoc = progToDoc_cons;\n    } else {\n        progToDoc = progToDoc_list;\n    }\n\n    let pretty = makePretty(width, ribbon);\n    let tableBSLs = tables.map((table) => tableToString(table)).join('\\n\\n');\n    return tableBSLs;\n\n    // Table -> Doc\n    function tableToString(table) {\n        let name = fieldToDoc(table.name);\n        let sig = fieldToDoc(table.signature);\n        let purp = fieldToDoc(table.purpose);\n        let params = spread(table.params.map((param) => fieldToDoc(param.name)));\n\n        let checkExpects = table.examples.map((example) => {\n            let inputs = stack(example.inputs.map((input) => fieldToDoc(input.prog)));\n            let want = fieldToDoc(example.want);\n\n            return pretty(nest(1, bracket('(', group(stack([text('check-expect'), bracket('(', nest(1, stack([name, inputs])), ')'), want])), ')')));\n        }).join('\\n');\n\n        let body = formulasToDoc(table.formulas);\n\n        let signature = pretty(spread([text(';;'), name, text(':'), sig]));\n        let purpose = pretty(spread([text(';;'), purp]));\n        let funct = pretty(nest(2, bracket('(', spread([text('define'), stack([bracket('(', spread([name, params]), ')'), body])]), ')')));\n\n        return [signature, purpose, funct, '', checkExpects].join('\\n');\n    }\n\n    // [Formula] -> Doc\n    function formulasToDoc(formulas) {\n        // [Formula] -> {bools: [Formula], nonbools: [Formula]}\n        function splitFormulas(formulas) {\n            let bools = formulas.filter(isBooleanFormula);\n            let nonbools = formulas.filter((formula) => !isBooleanFormula(formula));\n            return {bools, nonbools};\n        }\n\n        let splitForms = splitFormulas(formulas);\n\n        // this one's a doc\n        let nonbools = stack(splitForms.nonbools.map((form) => fieldToDoc(form.prog))),\n            bools;\n\n        if (splitForms.bools.length !== 0) {\n            // this is an array of documents\n            let condRows = splitForms.bools.map((form) => (\n                nest(1, bracket('[', stack([fieldToDoc(form.prog), formulasToDoc(form.thenChildren)]),']'))\n            ));\n            // this one is just a doc\n            bools = nest(2, bracket('(', stack([text('cond'), ...condRows]),')'));\n        }\n\n        if (splitForms.bools.length !== 0 && splitForms.nonbools.length !== 0) {\n            return stack([bools, nonbools]);\n        } else if (splitForms.bools.length !== 0) {\n            return bools;\n        } else if (splitForms.nonbools.length !== 0) {\n            return nonbools;\n        } else {\n            return nil;\n        }\n    }\n\n    // Field (yellow or string or program) -> Doc\n    function fieldToDoc(input) {\n        if (input === yellow) {                 // empty\n            return text('...');\n        } else if (typeof input === 'string') { // name\n            return text(input);\n        } else {                                // program\n            return progToDoc(input);\n        }\n    }\n}\n\n/****************\n    Unparsers\n****************/\nconst widePretty = makePretty(Infinity, Infinity);\n\nexport let unparse_cons = (prog) => widePretty(progToDoc_cons(prog));\nexport let unparse_list = (prog) => widePretty(progToDoc_list(prog));\n\nexport default toBSL;\n","function sessionURL(sessionID) {\n    return (\"http://107.170.76.216:8000/log/session\" + sessionID);\n}\n\nclass Sendifier {\n    constructor(delay, sessionID) {\n        this.delay = delay;\n        this.url = sessionURL(sessionID);\n        this.item = false;\n        this.sendItem = this.sendItem.bind(this);\n        this.sendItem();\n    }\n\n    sendItem() {\n        this.clear();\n        if (this.item) {\n            const sent = this.item;\n            fetch(this.url, {\n                method: 'POST', // or 'PUT'\n                body: JSON.stringify(sent), // data can be `string` or {object}!\n                mode: 'no-cors',\n                headers: { 'Content-Type': 'application/json' }})\n            .then(() => {\n                      this.timerID = setTimeout(this.sendItem, this.delay);\n                  },\n                  () => {\n                      if (!this.item) this.item = sent;\n                      this.timerID = setTimeout(this.sendItem, this.delay);\n                  });\n            this.item = false;\n        } else {\n            this.timerID = setTimeout(this.sendItem, this.delay);\n        }\n    }\n\n    setItem(news) {\n        this.item = news;\n    }\n\n    clear() {\n        if (this.timerID) {\n            clearTimeout(this.timerID);\n            delete this.timerID;\n        }\n    }\n}\n\nexport { sessionURL, Sendifier };\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport TimeAgo from 'react-timeago';\nimport {Link} from 'react-router-dom';\nimport {interp, parseCheck, parsePrefix, interpPrefix, unparse_cons, unparse_list, initEnv, isRAPP, RFUNCT_T, isRLIST, isRIMAGE, isRBOOL, isRSTRUCT} from './interpreter.js';\nimport {gray, pink, yellow, allBools, isBooleanFormula} from './header.js';\nimport {paint, width, height, makeRectangle, makeOverlay} from './image.js';\nimport toBSL from './prettyprint.js';\nimport {sessionURL, Sendifier} from './sendifier.js';\nimport Octicon, {Trashcan, Alert, Check} from '@primer/octicons-react';\nimport './App.css';\n\n/*****************************\n  Universal Constants I Want\n*****************************/\n// value to indicate a dry run, i.e. don't actually change the underlying structure, just say\n// if the given value exists or not\nconst dryRun = {yo: 'don\\'t actually change anything'};\n// this one's different because it has a $ at the end so it tests\n// the string until the end\nconst nameRE = /^(?!-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#]))[^\\s\",'`()[\\]{}|;#]+$/;\n\n\n/*********************\n    Key Management\n*********************/\n// variable used by takeKey and peekKey to generate keys\nlet keyCount = 0;\n\n// Number\n// returns a unique key\nfunction takeKey() {\n    return keyCount++;\n}\n\n// [Number] -> Number (the brackets here mean optional, not array)\n// returns current key without changing it\n// shoud be used to look at current state of key without actually taking it\n// optionally takes a number as an argument, in which case it returns the key that number\n// of steps ahead of the current key\nfunction peekKey(lookahead = 0) {\n    return keyCount + lookahead;\n}\n\n/**************\n    Globals\n**************/\n// TODO: maybe get rid of these?\nlet unparse = unparse_cons;\nlet listOrCons = 'cons';\n\nfunction unparse_to_string(prog) {\n    if (prog.yellow === 'yellow') {\n        return '';\n    }\n    return unparse(prog).join('');\n}\n\n/*****************\n    Deep Equals\n*****************/\n// Program -> Program -> Boolean\n// checks if two programs are equivalent, recurs on lists and applications\n// may not quite work on functions because I use js functions, not data represented closures or something\n//    thus 2 functions are only equal if they're a reference to the same object\n// maybe move this to interpreter.js?\nfunction deepEquals(proga, progb) {\n    if (proga.type !== progb.type) {\n        return false;\n    }\n\n    if (isRLIST(proga)) {\n        if (proga.value === null || progb.value === null) {\n            return proga.value === progb.value;\n        }\n        return deepEquals(proga.value.a, progb.value.a) && deepEquals(proga.value.d, progb.value.d);\n    }\n\n    // this case will prolly never even happen...\n    if (isRAPP(proga)) {\n        if (proga.value.args.length !== progb.value.args.length) {\n            return false;\n        }\n        let functCheck = deepEquals(proga.value.funct, progb.value.funct);\n        let argCheck = proga.value.args.map((arga, i) => deepEquals(arga, progb.value.args[i])).every((elem) => elem);\n        return functCheck && argCheck;\n    }\n\n    if (isRSTRUCT(proga)) {\n        let structa = proga.value;\n        let structb = progb.value;\n\n        let idSame = structa.id === structb.id;\n\n        let fieldsSame;\n        if (structa.fields.length === structb.fields.length) {\n            fieldsSame = structa.fields.every((fielda, i) => deepEquals(fielda.binding, structb.fields[i].binding));\n        } else {\n            fieldsSame = false;\n        }\n\n        return idSame && fieldsSame;\n    }\n\n    if (isRIMAGE(proga)) {\n        // Image -> Uint8ClampedArray\n        // takes an image and returns an array containing RGBA values of all pixels in the image\n        // a lot of this was taken from https://stackoverflow.com/questions/3768565/drawing-an-svg-file-on-a-html5-canvas\n        // sometimes this doesn't work...\n        //   - when it is first used in a certain instance of the table method, it returns an array containing only zeros,\n        //     however, after this I'm pretty sure it returns the array it should be returning\n        //   - maybe something hasn't been properly initialized by the first time around?\n        function toRGBAArray (image) {\n            let can = document.createElement('canvas');\n            can.width = width(image);\n            can.height = height(image);\n            let ctx = can.getContext('2d');\n            let svg = paint(image);\n\n            // pretty much just turns the jsx into a string\n            let xml = ReactDOMServer.renderToString(svg);\n\n            // make the xml base 64 for some reason (I dunno why)\n\n\n            let svg64 = btoa(xml);\n            // header that does stuff I guess\n            let b64Start = 'data:image/svg+xml;base64,';\n\n            // prepend a the header to the xml data\n            let image64 = b64Start + svg64;\n\n            // make image that contains the xml data so we can draw it\n            let img = document.createElement('img');\n            //console.log(img);\n            img.src = image64;\n\n            // draw the image onto the canvas\n            ctx.drawImage(img, 0, 0);\n\n            return ctx.getImageData(0, 0, width(image), height(image)).data;\n        }\n\n        let imgA = proga.value;\n        let imgB = progb.value\n\n        let dataA_red = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'red')]));\n        let dataA_green = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'green')]));\n\n        let dataB_red = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'red')]));\n        let dataB_green = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'green')]));\n\n        if (width(imgA) !== width(imgB) || height(imgA) !== height(imgB)) { // images have different dimensions\n            return false;\n        }\n\n        let redSame = dataA_red.every((datumA_red, i) => datumA_red === dataB_red[i]);\n        let greenSame = dataA_green.every((datumA_green, i) => datumA_green === dataB_green[i]);\n\n        return redSame && greenSame;\n    }\n\n    return proga.value === progb.value;\n}\n\n/*********************\n   React Components\n*********************/\n\n// it's a picture of a colon\nfunction Colon (props) {\n    return (\n        <div className='colon'>:</div>\n    );\n}\n\n// It's an error message (oh no!)\nfunction ErrorMessage (props) {\n    return (\n        <div>\n          {props.error.message}\n          <div title={\"Oh no! You got an error!\"} className=\"alert\">\n            <Octicon\n              icon={Alert} size=\"small\" verticalAlign=\"middle\"\n              ariaLabel='Error!'/>\n          </div>\n        </div>\n    );\n}\n\n/*** Buttons ***/\n// Button that probably removes something\nfunction RemButton(props){\n    return (\n        <div className='remove'\n             onClick={props.onClick}\n             title={props.title}>\n          <Octicon\n            icon={Trashcan} size=\"small\" verticalAlign=\"middle\"\n            ariaLabel='Remove'/>\n        </div>\n    );\n}\n\n/*** Inputs ***/\nclass ValidatedInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        if (this.props.text === undefined) {\n            const text = e.target.value;\n            this.setState({text});\n            if (this.props.isValid(text)) {\n                this.props.onValid(text);\n            } else if (text === '' && !this.props.dummy) {\n                this.props.onEmpty();\n            }\n        }\n    }\n\n    render() {\n        const text = this.props.text === undefined ? this.state.text\n                   : this.props.text.yellow === 'yellow' ? ''\n                   : this.props.text;\n        let className;\n        if (this.props.dummy && text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(text)) { // valid\n            className = 'valid_input';\n        } else if (text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n        \n        let size;\n        if (text.length === 0)\n            size = this.props.placeholder.length;\n        else\n            size = Math.max(text.length + 2, 4);\n\n        return (\n            <input\n              type={'text'}\n              className={className}\n              size={size}\n              placeholder={this.props.placeholder}\n              onChange={this.textChange}\n              value={text}\n            />\n        );\n    }\n}\n\nclass ValidatedArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        if (this.props.text === undefined) {\n            const text = e.target.value;\n            this.setState({text});\n            if (this.props.isValid(text)) {\n                this.props.onValid(text);\n            } else if (text === '' && !this.props.dummy) {\n                this.props.onEmpty();\n            }\n        }\n    }\n\n    render() {\n        const text = this.props.text === undefined ? this.state.text\n                   : this.props.text.yellow === 'yellow' ? ''\n                   : this.props.text;\n        let className;\n        if (this.props.dummy && text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(text)) { // valid\n            className = 'valid_input';\n        } else if (text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n\n        let rows,\n            newlines = text.match(/\\n/g);\n        if (newlines === null) {\n            rows = 1;\n        } else {\n            rows = newlines.length + 1;\n        }\n\n        let cols;\n        if (text.length === 0)\n            cols = this.props.placeholder.length;\n        else\n            cols = Math.max(...text.split('\\n').map((line) => line.length + 1), 4);\n\n        return (\n            <textarea\n              className={className + ' validated_area'}\n              rows={rows}\n              cols={cols}\n              placeholder={this.props.placeholder}\n              onChange={this.textChange}\n              spellCheck={false}\n              value={text}\n            />\n        );\n    }\n}\n\n/*** Table Sections ***/\n// let's put everything in one table woo\nfunction Succinct(props) {\n\n    function tableChange(newTab, oldTab) {\n        const exists = props.tables.indexOf(oldTab) !== -1;\n\n        let alteredTabs;\n        if (exists) {\n            alteredTabs = props.tables.map((table) => table === oldTab ? newTab : table);\n        } else {\n            alteredTabs = [...props.tables, newTab];\n        }\n\n        props.programChange(alteredTabs);\n    }\n\n    function remTable(deadTab) {\n        let aliveTabs = props.tables.filter((table) => table !== deadTab);\n        props.programChange(aliveTabs);\n    }\n\n    // String -> Boolean\n    function validName(text, modTab) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        let tableVars = props.tables.filter((table) => table !== modTab).map((otherTab) => ({name: otherTab.name, binding: null}));\n        let paramVars = modTab.params.map((param) => ({name: param, binding: null}));\n        let env = [...props.globalEnv, ...tableVars, ...paramVars];\n\n        return nameRE.test(text) && !inEnv(text, env);\n    }\n\n    // TODO make more sophisticated parser that can handle functions as parameters in signature\n    function validSignature(text, modTab) {\n        let sides = text.split(/\\s+->\\s+/g);\n\n        if (sides.length !== 2) {\n            return false;\n        }\n\n        let paramTypes = sides[0].match(/[a-zA-Z]+/g);\n        let outType = sides[1].match(/[a-zA-Z]+/g);\n\n        let noNull = paramTypes !== null && outType !== null;\n\n        return noNull && paramTypes.length === modTab.params.length && outType.length === 1;\n    }\n\n    const reals = props.tables.map((table) => (\n        <div key={table.key} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Table Name'\n                text={props.disabled ? table.name : undefined}\n                isValid={(text) => validName(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                name: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            name: yellow},\n                                           table)}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Signature'\n                text={props.disabled ? table.signature : undefined}\n                isValid={(text) => validSignature(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                signature: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            signature: yellow},\n                                           table)}\n              />\n              <RemButton\n                onClick={props.disabled ? undefined : (() => remTable(table))}\n                title='Remove this table'\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Purpose'\n                text={props.disabled ? table.purpose : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({...table,\n                                                purpose: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            purpose: yellow},\n                                           table)}\n              />\n            </div>\n            <SuccinctTab\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              table={table}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, table)}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    ));\n\n    const dummy = (\n        <div key={peekKey()} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Table Name'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => validName(text, {params: []})}\n                onValid={(text) => tableChange({name: text,\n                                                signature: yellow,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Signature'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: text,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Purpose'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: yellow,\n                                                purpose: text,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <SuccinctTab\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              table={{name: yellow,\n                      signature: yellow,\n                      purpose: yellow,\n                      examples: [],\n                      formulas: [],\n                      params: [],\n                      key: peekKey()}}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, {})}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    );\n\n    return (\n        <div>\n          {[...reals, dummy]}\n        </div>\n    );\n}\n\nfunction SuccinctTab(props) {\n    function paramsExamplesChange(params, examples) {\n        props.tableChange({...props.table, params, examples});\n    }\n\n    function formulasChange(formulas) {\n        props.tableChange({...props.table, formulas});\n    }\n\n    function examplesFormulasChange(examples, formulas) {\n        props.tableChange({...props.table, examples, formulas});\n    }\n\n    return (\n        <table className={'grow'}>\n          <SuccinctHead\n            disabled={props.disabled}\n            globalEnv={props.globalEnv}\n            params={props.table.params}\n            examples={props.table.examples}\n            tableNames={props.tableNames}\n            paramsExamplesChange={paramsExamplesChange}\n\n            formulas={props.table.formulas}\n            formulasChange={formulasChange}\n          />\n          <SuccinctBody\n            disabled={props.disabled}\n            globalEnv={props.globalEnv}\n            examples={props.table.examples}\n            formulas={props.table.formulas}\n            paramNames={props.table.params.map((param) => param.name)}\n            examplesFormulasChange={examplesFormulasChange}\n            formulasChange={formulasChange}\n          />\n        </table>\n    );\n}\n\nfunction SuccinctHead(props) {\n    // String -> Boolean\n    // checks if the given string is a valid program\n    function validProg(text) {\n        let isgood = true;\n\n        try {\n            parseCheck(text);\n        } catch(e) {\n            if (e instanceof SyntaxError) {\n                isgood = false;\n            } else { // this should never happen\n                throw e;\n            }\n        }\n\n        return isgood;\n    }\n\n    // Formula -> Side Effect\n    // removes a given formula from the tree\n    function remFormula(deadForm) {\n        const aliveForms = props.formulas.filter((formula) => formula !== deadForm);\n        props.formulasChange(aliveForms);\n    }\n\n    // Formula -> Formula -> Side Effect\n    // replaces one formula with another one\n    function formulaChange(newForm, oldForm) {\n\n        let alteredForms;\n        if (props.formulas.indexOf(oldForm) === -1) {\n            alteredForms = [...props.formulas, newForm];\n        } else {\n            alteredForms = props.formulas.map((form) => form === oldForm ? newForm : form);\n        }\n        props.formulasChange(alteredForms);\n    }\n\n    // Formula -> Number -> Number\n    // gives the maximum depth of a Formula, second parameter is an accumulator\n    function maxDepth(formula, curMax) {\n        if (!isBooleanFormula(formula)) {\n            return curMax;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => Math.max(acc, maxDepth(child, curMax + 1)), curMax + 1);\n        }\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    // Number -> [Number]\n    // takes a number, returns an array that counts from 1 to that number, input of 0 gives empty array\n    // e.g. countUp(5) -> [1, 2, 3, 4, 5]\n    function countUp(num) {\n        // special case: want an empty array for 0\n        if (num === 0) {\n            return [];\n        } else if (num === 1)\n            return [1];\n        else\n            return [...countUp(num - 1), num];\n    }\n\n    const abyss = props.formulas.reduce((acc, formula) => Math.max(acc, maxDepth(formula, 0)), 0);\n    const numParams = props.params.length;\n\n    const reals = props.formulas.map((formula) => (\n        <th key={formula.key} colSpan={countWidth(formula)} >\n          <div className='flex_horiz'>\n            <ValidatedArea\n              placeholder={'Formula'}\n              dummy={false}\n              text={props.disabled ? unparse_to_string(formula.prog) : undefined}\n              isValid={validProg}\n              onValid={(text) => formulaChange({...formula,\n                                                prog: parseCheck(text)},\n                                               formula)}\n              onEmpty={() => formulaChange({...formula,\n                                            prog: yellow},\n                                           formula)}\n            />\n            <RemButton\n              title={'Remove this formula'}\n              onClick={props.disabled ? undefined : (() => remFormula(formula))}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()} colSpan={1}>\n          <div className='flex_horiz'>\n            <ValidatedArea\n              dummy={true}\n              placeholder='Formula'\n              text={props.disabled ? '' : undefined}\n              isValid={validProg}\n              onValid={(text) => formulaChange({prog: parseCheck(text),\n                                                outputs: props.examples.map((_) => yellow),\n                                                key: takeKey()},\n                                               {})}\n            />\n          </div>\n        </th>\n    );\n\n    const children = countUp(abyss).map((depth) => (\n        <tr key={depth}>\n          <th colSpan={numParams + 2}>{/* empty cell to align with example RemButton and Parameters */}</th>\n          {props.formulas.map((formula) => (\n              <DepictFormula\n                disabled={props.disabled}\n                key={formula.key}\n                formula={formula}\n                depth={depth}\n                numExamples={props.examples.length}\n                formulaChange={(newForm) => formulaChange(newForm, formula)}\n              />\n          ))}\n          {Array(depth).map((_, i) => (<th key={i}>{/* empty cell under some parent dummy formula */}</th>))}\n          <th>{/* empty cell above wants */}</th>\n        </tr>\n    ));\n\n    return (\n        <thead>\n          <tr>\n            <Parameters\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              params={props.params}\n              examples={props.examples}\n              tableNames={props.tableNames}\n              paramsExamplesChange={props.paramsExamplesChange}\n            />\n            {/* top level formulas */}\n            {[...reals, dummy, <th key={peekKey(1)}>{/* empty cell above wants */}</th>]}\n          </tr>\n          {/* rest of formulas */}\n          {children}\n        </thead>\n    );\n}\n\nfunction Parameters(props) {\n    function validParam(text, modParam) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        // These are not technically Variables, see note above\n        let paramVars = props.params.filter((param) => param !== modParam).map((param) => ({name: param.name, binding: null}));\n        let tableVars = props.tableNames.map((name) => ({name: name, binding: null}));\n        let env = [...props.globalEnv, ...tableVars, ...paramVars];\n\n        return nameRE.test(text) && !inEnv(text, env);\n    }\n\n    function remParam(deadParam) {\n        const deadIndex = props.params.indexOf(deadParam);\n        const aliveParams = props.params.filter((param) => param !== deadParam);\n\n        // need to maintain #inputs = #params\n        const modExamples = props.examples.map((example => ({...example,\n                                                             inputs: example.inputs.filter((_, i) => i !== deadIndex)})));\n\n        props.paramsExamplesChange(aliveParams, modExamples);\n    }\n\n    // String, Number -> Side Effect\n    // changes the name of the given parameter\n    // if that parameter doesn't exist yet, it makes it\n    function paramChange(newParam, modParam) {\n\n        let alteredParams, alteredExamples;\n        if (props.params.indexOf(modParam) === -1) {\n            alteredParams = [...props.params, newParam];\n            // need to maintain #inputs = #params\n            alteredExamples = props.examples.map((example) => ({...example,\n                                                                inputs: [...example.inputs, {prog: yellow, key: takeKey()}]}));\n        } else {\n            alteredParams = props.params.map((param) => param === modParam ? newParam : param);\n            // examples don't actually change\n            alteredExamples = props.examples;\n        }\n\n        props.paramsExamplesChange(alteredParams, alteredExamples);\n    }\n\n    const reals = props.params.map((param) => (\n        <th key={param.key} >\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={false}\n              placeholder='Parameter'\n              text={props.disabled ? param.name : undefined}\n              isValid={(text) => validParam(text, param)}\n              onValid={(text) => paramChange({...param,\n                                              name: text},\n                                             param)}\n              onEmpty={() => paramChange({...param,\n                                          name: yellow},\n                                         param)}\n            />\n            <RemButton\n              title='Remove this parameter'\n              onClick={props.disabled ? undefined : (() => remParam(param))}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()}>\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={true}\n              placeholder='Parameter'\n              text={props.disabled ? '' : undefined}\n              isValid={(text) => validParam(text, {})}\n              onValid={(text) => paramChange({name: text,\n                                              key: takeKey()},\n                                             {})}\n            />\n          </div>\n        </th>\n    );\n\n    return (\n        <React.Fragment>\n          <th>{/* empty cell to align with example RemButtons */}</th>\n          <React.Fragment>\n            {[...reals, dummy]}\n          </React.Fragment>\n        </React.Fragment>\n    );\n}\n\n/*\n  props: formula, depth, kill, formulaChange\n*/\nfunction DepictFormula(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // this is pretty macabre...\n    function remChild(deadChild) {\n        const aliveChildren = props.formula.thenChildren.filter((child) => child !== deadChild);\n        props.formulaChange({...props.formula, thenChildren: aliveChildren});\n    }\n\n    function childChange(newChild, modChild) {\n        let children;\n        if (props.formula.thenChildren.indexOf(modChild) === -1) {\n            children = [...props.formula.thenChildren, newChild];\n        } else {\n            children = props.formula.thenChildren.map((child) => child === modChild ? newChild : child);\n        }\n        props.formulaChange({...props.formula, thenChildren: children});\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.depth > 1) {\n        return (\n            <React.Fragment>\n              <th>{/* empty cell to align with parent input */}</th>\n              {isBooleanFormula(props.formula) ?\n               <React.Fragment>\n                 {props.formula.thenChildren.map((child) => (\n                     <DepictFormula\n                       disabled={props.disabled}\n                       key={child.key}\n                       formula={child}\n                       depth={props.depth - 1}\n                       numExamples={props.numExamples}\n                       formulaChange={(formula) => childChange(formula, child)}\n                     />))}\n                 <th>{/* empty cell to align with child input */}</th>\n               </React.Fragment>\n               : <script/> }\n            </React.Fragment>\n        );\n    } else {\n        if (isBooleanFormula(props.formula)) {\n            const reals = props.formula.thenChildren.map((child) => (\n                <th key={child.key} colSpan={countWidth(child)} >\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={false}\n                      placeholder={'Formula'}\n                      text={props.disabled ? unparse_to_string(child.prog) : undefined}\n                      isValid={validProg}\n                      onValid={(text) => childChange({...child,\n                                                      prog: parseCheck(text)},\n                                                     child)}\n                      onEmpty={() => childChange({...child,\n                                                  prog: yellow},\n                                                 child)}\n                    />\n                    <RemButton\n                      title={'Remove this formula'}\n                      onClick={props.disabled ? undefined : (() => remChild(child))}\n                    />\n                  </div>\n                </th>\n            ));\n\n            const dummy = (\n                <th key={peekKey()} colSpan={1}>\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={true}\n                      placeholder='Formula'\n                      text={props.disabled ? '' : undefined}\n                      isValid={validProg}\n                      onValid={(text) => childChange({prog: parseCheck(text),\n                                                      outputs: Array(props.numExamples).fill(yellow),\n                                                      key: takeKey()},\n                                                     {})}\n                    />\n                  </div>\n                </th>\n            );\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                   <React.Fragment>\n                     {[...reals, dummy]}\n                   </React.Fragment>\n                </React.Fragment>\n            );\n        } else {\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction SuccinctBody(props) {\n    function remExample(deadExample) {\n        const deadIndex = props.examples.indexOf(deadExample);\n        // Formula -> Formula\n        // removes the output at deadIndex from the given formula and all of its children (if it has any) so stuff works\n        function removeOutputFromFormula(formula) {\n            let outputs = formula.outputs.filter((_, i) => i !== deadIndex);\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(removeOutputFromFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n\n        const aliveExamples = props.examples.filter((example) => example !== deadExample);\n        const alteredForms = props.formulas.map(removeOutputFromFormula);\n        props.examplesFormulasChange(aliveExamples, alteredForms);\n    }\n\n    function exampleChange(newExample, oldExample) {\n        const exists = props.examples.indexOf(oldExample) !== -1;\n\n        if (newExample === dryRun) {\n            return exists;\n        }\n\n        // Formula -> Formula\n        // adds an init output to the given formula and all of its children (if it has any) so stuff works\n        function addAnotherOutputToFormula(formula) {\n            let outputs = [...formula.outputs, yellow];\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(addAnotherOutputToFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n        let alteredExamples, alteredForms;\n        if (exists) {\n            alteredExamples = props.examples.map((example) => example === oldExample ? newExample : example);\n            alteredForms = props.formulas;\n        } else {\n            alteredExamples = [...props.examples, newExample];\n            alteredForms = props.formulas.map(addAnotherOutputToFormula);\n        }\n\n        props.examplesFormulasChange(alteredExamples, alteredForms);\n        return true; // this doesn't actually do anything\n    }\n\n    const reals = props.examples.map((example, i) => (\n          <tr key={example.key}>\n            <td>\n              <RemButton\n                onClick={props.disabled ? undefined : (() => remExample(example))}\n                title={'Remove this example'}\n              />\n            </td>\n            <Inputs\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={false}\n              inputs={example.inputs}\n              inputsChange={(inputs) => exampleChange({...example, inputs},\n                                                      example)}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              globalEnv={props.globalEnv}\n              dummy={false}\n              formulas={props.formulas}\n              want={example.want}\n              row={i}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={false}\n              want={example.want}\n              wantChange={(want) => exampleChange({...example, want},\n                                                  example)}\n            />\n          </tr>\n    ));\n    \n    const dummy = (\n          <tr key={peekKey(props.paramNames.length)}>\n            <td>{/* empty cell to offset rembutton */}</td>\n            <Inputs\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={true}\n              inputs={props.paramNames.map((_, i) => ({key: peekKey(i)}))}\n              inputsChange={(inputs) => exampleChange({inputs,\n                                                       want: yellow,\n                                                       key: takeKey()},\n                                                      {})}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              globalEnv={props.globalEnv}\n              dummy={true}\n              formulas={props.formulas}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={true}\n              wantChange={(want) => exampleChange({want,\n                                                   inputs: props.paramNames.map((_) => ({prog: yellow, key: takeKey()})),\n                                                   key: takeKey()},\n                                                  {})}\n            />\n          </tr>\n    );\n\n    return (\n        <tbody>\n          {[...reals, dummy]}\n        </tbody>\n    );\n}\n\nfunction Inputs(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    function inputChange(newInput, oldInput) {\n        let alteredInputs;\n        if (props.dummy) {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? {...newInput, key: takeKey()} : {prog: yellow, key: takeKey()});\n        } else {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? newInput : input);\n        }\n        props.inputsChange(alteredInputs);\n    }\n\n    // this looks awful...\n    let inputFields = props.inputs.map((input, i) => {\n        let error = <div/>;\n        if (props.dummy) {\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        text={props.disabled ? '' : undefined}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({prog: parseCheck(text)},\n                                                       input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        } else {\n            if (input.prog.yellow !== 'yellow') {\n                try {\n                    interp(input.prog, props.globalEnv);\n                } catch (e) {\n                    error = <ErrorMessage error={e}/>\n                }\n            }\n\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        text={props.disabled ? unparse_to_string(input.prog) : undefined}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({...input,\n                                                        prog: parseCheck(text)},\n                                                       input)}\n                        onEmpty={() => inputChange({...input,\n                                                    prog: yellow},\n                                                   input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        }\n    });\n\n    return (\n        <React.Fragment>\n          {inputFields}\n        </React.Fragment>\n    );\n}\n\nfunction Outputs(props) {\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.dummy) {\n        return (\n            <React.Fragment>\n            {props.formulas.map((formula) => (\n                <td key={formula.key} colSpan={countWidth(formula)}>{/* empty cell */}</td>\n            ))}\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n              {props.formulas.map((formula) => (\n                  <React.Fragment key={formula.key}>\n                    <TestCell\n                      globalEnv={props.globalEnv}\n                      output={formula.outputs[props.row]}\n                      want={props.want}\n                    />\n                    {isBooleanFormula(formula) ?\n                     <React.Fragment>\n                       <Outputs\n                         globalEnv={props.globalEnv}\n                         formulas={formula.thenChildren}\n                         want={props.want}\n                         row={props.row}\n                       />\n                       <DummyCell\n                         parentOutput={formula.outputs[props.row]}\n                       />\n                     </React.Fragment>\n                     : <script/> }\n                  </React.Fragment>\n              ))}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction TestCell(props) {\n    let output = props.output;\n\n    if (output === gray) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    }\n\n    if (output === pink) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    }\n\n    if (output.yellow === 'yellow') {\n        return (\n            <td className={'yellow'}>\n            </td>\n        );\n    }\n\n    if (output instanceof Error) {\n        return <td><ErrorMessage error={output}/></td>\n    }\n\n    let want;\n    try {\n        want = interp(props.want, props.globalEnv);\n    } catch (e) {\n        want = yellow;\n    }\n\n    if (want.yellow !== 'yellow' && deepEquals(output, want)) {\n        return (\n            <td className='output'>\n              {unparse(output)}\n              <div title={\"Yay! It's right!\"} className=\"check\">\n                <Octicon\n                  icon={Check} size=\"small\" verticalAlign=\"middle\"\n                  ariaLabel='Yay!'/>\n              </div>\n            </td>\n        )\n    } else {\n        return (\n            <td className='output'>\n              {unparse(output)}\n            </td>\n        );\n    }\n}\n\nfunction DummyCell (props) {\n    if (props.parentOutput === gray || props.parentOutput.value === false) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    } else if (props.parentOutput === pink || !isRBOOL(props.parentOutput)) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    } else {\n        return <td></td>;\n    }\n}\n\nfunction Want(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    let valueCell;\n    if (props.dummy || props.want.yellow === 'yellow') {\n        valueCell = <script/>;\n    } else {\n        try {\n            let evalWant = interp(props.want, props.globalEnv);\n            if (deepEquals(evalWant, props.want)) {\n                valueCell = <script/>;\n            } else {\n                valueCell = <td className='output'>{unparse(evalWant)}</td>;\n            }\n        } catch (e) {\n            valueCell = <td><ErrorMessage error={e}/></td>\n        }\n    }\n\n    return (\n        <React.Fragment>\n          <td>\n            <div className='flex_horiz'>\n              <ValidatedArea\n                dummy={props.dummy}\n                placeholder={'Want'}\n                text={props.disabled ? props.dummy ? '' : unparse_to_string(props.want)\n                                     : undefined}\n                isValid={validProg}\n                onValid={(text) => props.wantChange(parseCheck(text))}\n                onEmpty={() => props.wantChange(yellow)}\n              />\n            </div>\n          </td>\n          {valueCell}\n        </React.Fragment>\n    );\n}\n\nclass DefinitionsArea extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {error: false};\n        this.prefixChange = this.prefixChange.bind(this);\n    }\n\n    validPrefix (text) {\n        try {\n            parsePrefix(text);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    prefixChange (text) {\n        this.setState({error: this.props.prefixChange(text)});\n    }\n\n    render () {\n        const e = this.props.error === undefined\n                  ? this.state.error\n                  : this.props.error;\n        return (\n            <div className='flex_horiz'>\n              <div className='flex_vert no_grow'>\n                <ValidatedArea\n                  dummy={false}\n                  placeholder='Definitions Area'\n                  text={this.props.text}\n                  isValid={this.validPrefix}\n                  onValid={this.prefixChange}\n                />\n                {e ? <ErrorMessage error={e}/> : []}\n              </div>\n              <div className='grow'>{/* div to prevent this stuff from growing across the screen */}</div>\n            </div>\n        );\n    }\n}\n\nclass BSLArea extends React.Component {\n    constructor (props) {\n        super(props);\n\n        let showBSL = false;\n        this.state = {showBSL};\n\n        this.toggleDisplay = this.toggleDisplay.bind(this);\n    }\n\n    toggleDisplay (e) {\n        this.setState((state) => ({showBSL: !state.showBSL}));\n    }\n\n    render () {\n\n        let bslArea;\n        if (this.state.showBSL) {\n            bslArea = (\n                <textarea\n                  className='bsl_field'\n                  rows={20}\n                  cols={70}\n                  readOnly={true}\n                  value={toBSL(this.props.tables, listOrCons, 70, 70)}\n                />\n            );\n        } else {\n            bslArea = <div/>;\n        }\n\n        return (\n            <div className='bsl_io'>\n              <div className='bsl_checkbox'>\n                <input\n                  type='checkbox'\n                  id='bsl_toggle'\n                  name='bsl_output'\n                  onChange={this.toggleDisplay}\n                />\n                <label htmlFor='bsl_toggle'>Show Combined Program</label>\n              </div>\n              {bslArea}\n            </div>\n        );\n\n    }\n}\n\n/*\n  notes:\n  #inputs === #params\n  #outputs === #examples\n  ---------------------\n  |#inputs !== #outputs| (well it can but not always)\n  ---------------------\n*/\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let prefix = '';\n        let prefixError = false;\n        let globalEnv = initEnv;\n        let tables = [{examples: [{inputs: [{prog: yellow, key: takeKey()}], want: yellow, key: takeKey()}],\n                       formulas: [{prog: yellow, outputs: [yellow], key: takeKey()}],\n                       params: [{name: yellow, key: takeKey()}],\n                       name: yellow,\n                       signature: yellow,\n                       purpose: yellow,\n                       key: takeKey()}];\n        if (props.snapshots && props.snapshots.length > 0) {\n            prefix = props.snapshots[0].prefix;\n            try {\n                globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n            } catch (e) {\n                prefixError = e;\n            }\n            tables = this.calculate(globalEnv, props.snapshots[0].tables);\n        }\n        this.state = {\n            prefix, prefixError, globalEnv, tables,\n            playbackTime: (props.snapshots ? 0 : undefined),\n            snapshots: (props.snapshots ? undefined : [{prefix, tables}])\n        };\n\n        this.prefixChange = this.prefixChange.bind(this);\n        this.programChange = this.programChange.bind(this);\n        this.playbackTimeChange = this.playbackTimeChange.bind(this);\n        this.render = this.render.bind(this);\n\n        // The following line mitigates the problem that sometimes toRGBAArray returns\n        // all-zeros.  Probably it doesn't completely fix #12.\n        document.createElement('img');\n    }\n\n    componentDidMount() {\n        /****************************************\n         * Thing That Sends Stuff Out To Server *\n         ****************************************/\n        this.sendifier = new Sendifier(3000, Math.floor(Math.random() * 1000000000));\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.snapshots &&\n            this.props.snapshots !== prevProps.snapshots &&\n            this.props.snapshots.length > 0) {\n            let prefix = this.props.snapshots[0].prefix;\n            let prefixError = false;\n            let globalEnv = initEnv;\n            try {\n                globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n            } catch (e) {\n                prefixError = e;\n            }\n            let tables = this.calculate(globalEnv, this.props.snapshots[0].tables);\n            this.setState({\n                prefix, prefixError, globalEnv, tables,\n                playbackTime: 0, snapshots: undefined\n            });\n        }\n        if (this.sendifier && !this.props.snapshots) {\n            this.sendifier.setItem(this.state.snapshots);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.sendifier) {\n            this.sendifier.clear();\n            delete this.sendifier;\n        }\n    }\n\n    calculate(env, program) {\n        function makeLookup(table) {\n            function lookup(args) {\n                if (args.length !== table.params.length) {\n                    throw new Error('Arity Mismatch, expected ' + table.params.length + ' argument' + (table.params.length === 1 ? '' : 's'));\n                }\n                let expr = table.examples.reduce((acc, example) => {\n\n                    if (acc !== undefined) {\n                        return acc;\n                    }\n\n                    // I have no idea what should happen if this is called on a table with no params\n                    if (example.inputs.every((input, i) => {\n                        if (input.prog.yellow === 'yellow') {\n                            return false;\n                        }\n                        let bool;\n                        try {\n                            bool = deepEquals(interp(input.prog, env), args[i]);\n                        } catch (e) {\n                            bool = false;\n                        }\n                        return bool;\n                    })) {\n                        if (example.want.yellow === 'yellow') {\n                            let e = new ReferenceError();\n                            // shoehorn a non-string into the message field\n                            e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) doesn't have a want</React.Fragment>;\n                            throw e;\n                        } else {\n                            // Note: don't need to catch exception here because it will be caught in calcFormula\n                            return interp(example.want, env);\n                        }\n                    }\n\n                    return undefined;\n                }, undefined);\n\n                if (expr === undefined) {\n                    // it's like a reference error in the super meta table language\n                    let e = new ReferenceError();\n                    // shoehorn a non-string into the message field\n                    e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) is not an example</React.Fragment>;\n                    throw e;\n                }\n\n                return expr;\n            }\n\n            return lookup;\n        }\n\n        let lookups = program.map((table) => ({name: table.name, binding: {value: makeLookup(table), type: RFUNCT_T}}));\n        let tableEnv = [...env, ...lookups];\n\n        function calcTable(table) {\n            function calcFormula(formula, examples) {\n                let outputs = examples.map((example) => {\n\n                    if (example === gray) {\n                        return gray;\n                    } if (example === pink) {\n                        return pink;\n                    } else if (!example.inputs.every((input) => input.prog.yellow !== 'yellow') || formula.prog.yellow === 'yellow') {\n                        // if any of the inputs or the formula isn't initialized, return yellow\n                        return yellow;\n                    }\n\n                    let error = false;\n                    try {\n                        example.inputs.map((input) => interp(input.prog, tableEnv));\n                    } catch (e) {\n                        error = true;\n                    }\n\n                    if (example === pink || error) {\n                        return pink;\n                    }\n\n                    let localEnv = table.params.map((param, i) => ({name: param.name, binding: interp(example.inputs[i].prog, tableEnv)}));\n                    let env = [...tableEnv, ...localEnv];\n\n                    let output;\n                    try {\n                        output = interp(formula.prog, env);\n                    } catch (e) {\n                        output = e;\n                    }\n\n                    return output;\n                });\n\n                if (allBools(outputs) || (formula.thenChildren !== undefined && formula.thenChildren.length !== 0)) {\n                    function maybeSpecial(example, output) {\n                        if (example === gray || output.value === false)\n                            return gray;\n                        else if (typeof output.value !== 'boolean')\n                            return pink;\n                        else\n                            return example;\n                    }\n\n                    if (formula.thenChildren === undefined) {\n                        var thenChildren = [];\n                    } else {\n                        let subExamples = examples.map((example, i) => maybeSpecial(example, outputs[i]));\n                        thenChildren = formula.thenChildren.map((formula) => calcFormula(formula, subExamples));\n                    }\n\n                    return {...formula,\n                            outputs,\n                            thenChildren};\n                } else {\n                    let newFormula = {...formula,\n                                      outputs};\n                    delete newFormula.thenChildren;\n                    return newFormula;\n                }\n            }\n\n            if (table.name.yellow === 'yellow' || !table.params.every((param) => param.name.yellow !== 'yellow')) {\n                // if the table or any of the table's parameters don't have a name yet, freeze outputs\n                return {...table}; \n            } else {\n                let formulas = table.formulas.map((formula) => calcFormula(formula, table.examples));\n                return {...table,\n                        formulas};\n            }\n        }\n\n        return program.map(calcTable);\n    }\n\n    prefixChange(prefix) {\n        let tables = this.state.tables;\n        let globalEnv;\n        try {\n            globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n        } catch (prefixError) {\n            this.setState(state => ({\n                prefix, prefixError,\n                snapshots: !this.props.snapshots && state.snapshots\n                           ? [...state.snapshots, {prefix, tables}]\n                           : state.snapshots}));\n            return prefixError;\n        }\n        tables = this.calculate(globalEnv, tables);\n        this.setState((state) => ({\n            prefix, prefixError: false, globalEnv, tables,\n            snapshots: !this.props.snapshots && state.snapshots\n                       ? [...state.snapshots, {prefix, tables}]\n                       : state.snapshots}));\n        return false;\n    }\n\n    programChange(newProg) {\n        this.setState(state => {\n            let prefix = state.prefix;\n            let tables = this.calculate(state.globalEnv, newProg);\n            return {\n                tables,\n                snapshots: !this.props.snapshots && state.snapshots\n                           ? [...state.snapshots, {prefix, tables}]\n                           : state.snapshots\n            }\n        });\n    }\n\n    playbackTimeChange(event) {\n        const snapshots = this.props.snapshots;\n        if (snapshots) {\n            const playbackTime = Math.max(0,\n                                 Math.min(snapshots.length-1,\n                                 Math.floor(event.target.value)));\n            const prefix = snapshots[playbackTime].prefix;\n            let globalEnv, prefixError = false;\n            for (let t = playbackTime; t >= 0; t--) {\n                try {\n                    globalEnv = interpPrefix(parsePrefix(snapshots[t].prefix), initEnv);\n                    break;\n                } catch (e) {\n                    globalEnv = initEnv;\n                    if (!prefixError) {\n                        prefixError = e;\n                    }\n                }\n            }\n            const tables = this.calculate(globalEnv, snapshots[playbackTime].tables);\n            this.setState({playbackTime, prefix, prefixError, globalEnv, tables});\n        }\n    }\n\n    render(){\n        const disabled = !!this.props.snapshots;\n        return (\n            <div>\n              {this.state.snapshots\n                  ? <p>Sessions may be recorded to ensure quality service.</p>\n                  : []}\n              <DefinitionsArea\n                text={disabled ? this.state.prefix : undefined}\n                error={disabled ? this.state.prefixError : undefined}\n                prefixChange={this.prefixChange}\n              />\n              <Succinct\n                disabled={disabled}\n                globalEnv={this.state.globalEnv}\n                tables={this.state.tables}\n                programChange={this.programChange}\n              />\n              <div className='language_select'>\n                <select\n                  defaultValue='cons'\n                  onChange={(e) => {\n                      if (e.target.value === 'cons'){\n                          listOrCons = 'cons';\n                          unparse = unparse_cons;\n                      } else {\n                          listOrCons = 'list';\n                          unparse = unparse_list;\n                      }\n                      // this just rerenders everything, the state remains unchanged\n                      this.setState((state) => state);\n                  }}\n                >\n                  <option value='cons'>Beginning Student</option>\n                  <option value='list'>Beginning Student with List Abbreviations</option>\n                </select>\n              </div>\n              <BSLArea\n                tables={this.state.tables}\n              />\n              <div className='flex_horiz'>\n                {this.props.snapshots ?\n                 <input\n                   className='grow'\n                   type='range'\n                   min='0'\n                   max={this.props.snapshots.length-1}\n                   value={this.state.playbackTime}\n                   onChange={this.playbackTimeChange}/>\n                 : []}\n              </div>\n            </div>\n        );\n    }\n}\n\nclass ListRecordings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {recordings: false};\n    }\n\n    componentDidMount() {\n        fetch('http://107.170.76.216:8000/list')\n        .then(response => response.json())\n        .then(o => { this.setState({ recordings:\n            Object.entries(o).flatMap(([name, info]) =>\n            name.startsWith('session') ? [{id: name.slice(7), ...info}] : []) }) });\n        // TODO: indicate request and error by yellow and pink\n    }\n\n    render() {\n        const alignRight = {'text-align': 'right'};\n        const columns = [{\n            Cell: props => <Link to={\"session\"+props.value}>{props.value}</Link>,\n            Header: 'Session ID',\n            accessor: 'id',\n            maxWidth: 150\n        }, {\n            Cell: props => {\n                const date = new Date(1000*props.value);\n                const abs = date.toLocaleString(undefined, {dateStyle: 'medium', timeStyle: 'medium'});\n                return <div className=\"date\">\n                    <span>{abs}</span>\n                    <TimeAgo date={date}/>\n                </div>;\n            },\n            defaultSortDesc: true,\n            Header: 'Last recording time',\n            accessor: 'time',\n            maxWidth: 350\n        }, {\n            defaultSortDesc: true,\n            Header: 'Size (bytes)',\n            accessor: 'size',\n            headerStyle: alignRight,\n            style: alignRight,\n            maxWidth: 150\n        }];\n\n        return (this.state.recordings\n                ? <ReactTable\n                    data={this.state.recordings}\n                    columns={columns}\n                    defaultSorted={[{id: 'time', desc: true}]}\n                  />\n                : <p>Loading list of recordings</p>);\n    }\n}\n\nclass FetchRecordings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {snapshots: false};\n    }\n\n    componentDidMount() {\n        this.playbackSessionIDChange();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id)\n            this.playbackSessionIDChange();\n    }\n\n    playbackSessionIDChange() {\n        const playbackSessionID = this.props.match.params.id;\n        this.setState({snapshots: false});\n        if (playbackSessionID.length > 0) {\n            const url = sessionURL(playbackSessionID);\n            fetch(url)\n            .then(response => response.json())\n            .then(snapshots => {\n                      if (snapshots.every(snapshot => !('prefix' in snapshot) &&\n                                                      !('tables' in snapshot))) {\n                          // Try to upgrade old snapshot\n                          snapshots = snapshots.map(tables => ({prefix:'', tables}));\n                      }\n                      this.setState({snapshots});\n                  }); // TODO: indicate request and error by yellow and pink\n        }\n    }\n\n    render() {\n        return (this.state.snapshots\n            ? <App snapshots={this.state.snapshots}/>\n            : <p>\n                Loading session {this.props.match.params.id} for playback\n              </p>);\n    }\n}\n\nexport { App, FetchRecordings, ListRecordings };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport { App, FetchRecordings, ListRecordings } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path=\"/(Beginning-Student-Tables)?/\" exact={true} component={App}/>\n        <Route path=\"/(Beginning-Student-Tables)?/list\" exact={true} component={ListRecordings}/>\n        <Route path=\"/(Beginning-Student-Tables)?/session:id\" component={FetchRecordings}/>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}