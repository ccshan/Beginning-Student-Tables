{"version":3,"sources":["image.js","interpreter.js","header.js","prettyprint.js","sendifier.js","App.js","serviceWorker.js","index.js"],"names":["colorDb","DARK-RED","makeColor","FIRE-BRICK","DEEP-PINK","INDIAN-RED","MEDIUM-VIOLET-RED","VIOLET-RED","LIGHT-CORAL","HOT-PINK","PALE-VIOLET-RED","LIGHT-PINK","ROSY-BROWN","LAVENDER-BLUSH","SADDLE-BROWN","DARK-ORANGE","DARK-GOLDENRON","SANDY-BROWN","LIGHT-SALMON","DARK-SALMON","NAVAJO-WHITE","PEACH-PUFF","DARK-KHAKI","PALE-GOLDENROD","BLANCHE-DIAMOND","MEDIUM-GOLDENROD","PAPAYA-WHIP","MISTY-ROSE","LEMON-CHIFFON","ANTIQUE-WHITE","CORN-SILK","LIGHT-GOLDENRON-YELLOW","OLD-LACE","LIGHT-YELLOW","FLORAL-WHITE","LAWN-GREEN","GREEN-YELLOW","YELLOW-GREEN","OLIVE-DRAB","MEDIUM-FOREST-GREEN","DARK-OLIVE-GREEN","DARK-SEA-GREEN","DARK-GREEN","LIME-GREEN","FOREST-GREEN","SPRING-GREEN","MEDIUM-SPRING-GREEN","SEA-GREEN","MEDIUM-SEA-GREEN","LIGHT-GREEN","PALE-GREEN","MEDIUM-AQUAMARINE","LIGHT-SEA-GREEN","MEDIUM-TURQUOISE","MINT-CREAM","ROYAL-BLUE","DODGER-BLUE","DEEP-SKY-BLUE","CORNFLOWER-BLUE","STEEL-BLUE","LIGHT-SKY-BLUE","DARK-TURQUOISE","DARKTURQUOISE","SKY-BLUE","SKYBLUE","CADET-BLUE","DARK-SLATE-GRAY","LIGHT-STEEL-BLUE","LIGHT-BLUE","POWDER-BLUE","PALE-TURQUOISE","LIGHT-CYAN","ALICE-BLUE","MEDIUM-BLUE","DARK-BLUE","MIDNIGHT-BLUE","BLUE-VIOLET","MEDIUM-SLATE-BLUE","SLATE-BLUE","DARK-SLATE-BLUE","DARK-VIOLET","DARK-ORCHID","MEDIUM-PURPLE","MEDIUM-ORCHID","DARK-MAGENTA","GHOST-WHITE","WHITE-SMOKE","LIGHT-GRAY","DARK-GRAY","DIM-GRAY","ORANGE","ORANGERED","TOMATO","DARKRED","RED","FIREBRICK","CRIMSON","DEEPPINK","MAROON","INDIAN RED","INDIANRED","MEDIUM VIOLET RED","MEDIUMVIOLETRED","VIOLET RED","VIOLETRED","LIGHTCORAL","HOTPINK","PALEVIOLETRED","LIGHTPINK","ROSYBROWN","PINK","ORCHID","LAVENDERBLUSH","SNOW","CHOCOLATE","SADDLEBROWN","BROWN","DARKORANGE","CORAL","SIENNA","SALMON","PERU","DARKGOLDENROD","GOLDENROD","SANDYBROWN","LIGHTSALMON","DARKSALMON","GOLD","YELLOW","OLIVE","BURLYWOOD","TAN","NAVAJOWHITE","PEACHPUFF","KHAKI","DARKKHAKI","MOCCASIN","WHEAT","BISQUE","PALEGOLDENROD","BLANCHEDALMOND","MEDIUM GOLDENROD","MEDIUMGOLDENROD","PAPAYAWHIP","MISTYROSE","LEMONCHIFFON","ANTIQUEWHITE","CORNSILK","LIGHTGOLDENRODYELLOW","OLDLACE","LINEN","LIGHTYELLOW","SEASHELL","BEIGE","FLORALWHITE","IVORY","GREEN","LAWNGREEN","CHARTREUSE","GREEN YELLOW","GREENYELLOW","YELLOW GREEN","YELLOWGREEN","MEDIUM FOREST GREEN","OLIVEDRAB","MEDIUMFORESTGREEN","DARK OLIVE GREEN","DARKOLIVEGREEN","DARKSEAGREEN","LIME","DARK GREEN","DARKGREEN","LIME GREEN","LIMEGREEN","FOREST GREEN","FORESTGREEN","SPRING GREEN","SPRINGGREEN","MEDIUM SPRING GREEN","MEDIUMSPRINGGREEN","SEA GREEN","SEAGREEN","MEDIUM SEA GREEN","MEDIUMSEAGREEN","AQUAMARINE","LIGHTGREEN","PALE GREEN","PALEGREEN","MEDIUM AQUAMARINE","MEDIUMAQUAMARINE","TURQUOISE","LIGHTSEAGREEN","MEDIUM TURQUOISE","MEDIUMTURQUOISE","HONEYDEW","MINTCREAM","ROYALBLUE","DODGERBLUE","DEEPSKYBLUE","CORNFLOWERBLUE","STEEL BLUE","STEELBLUE","LIGHTSKYBLUE","DARK TURQUOISE","CYAN","AQUA","DARKCYAN","TEAL","SKY BLUE","CADET BLUE","CADETBLUE","DARK SLATE GRAY","DARKSLATEGRAY","LIGHTSLATEGRAY","SLATEGRAY","LIGHT STEEL BLUE","LIGHTSTEELBLUE","LIGHT BLUE","LIGHTBLUE","POWDERBLUE","PALETURQUOISE","LIGHTCYAN","ALICEBLUE","AZURE","MEDIUM BLUE","MEDIUMBLUE","DARKBLUE","MIDNIGHT BLUE","MIDNIGHTBLUE","NAVY","BLUE","INDIGO","BLUE VIOLET","BLUEVIOLET","MEDIUM SLATE BLUE","MEDIUMSLATEBLUE","SLATE BLUE","SLATEBLUE","PURPLE","DARK SLATE BLUE","DARKSLATEBLUE","DARKVIOLET","DARK ORCHID","DARKORCHID","MEDIUMPURPLE","CORNFLOWER BLUE","MEDIUM ORCHID","MEDIUMORCHID","MAGENTA","FUCHSIA","DARKMAGENTA","VIOLET","PLUM","LAVENDER","THISTLE","GHOSTWHITE","WHITE","WHITESMOKE","GAINSBORO","LIGHT GRAY","LIGHTGRAY","SILVER","GRAY","DARK GRAY","DARKGRAY","DIM GRAY","DIMGRAY","BLACK","TRANSPARENT","r","g","b","a","arguments","length","undefined","Error","changeAlpha","color","checkDimension","maybeDimension","checkColor","maybeColor","replace","toUpperCase","concat","checkMode","maybeMode","checkXPlace","maybeXPlace","checkYPlace","maybeYPlace","makeRectangle","width","height","mode","type","makeEquiTriangle","A","B","C","makeTriangle","makeBeside","images","yplace","makeAbove","xplace","makeOverlay","makePlace","image","x","y","scene","emptyScene","w","h","coordinates","map","coord","reduce","acc","Math","max","s","area","sqrt","round","render","red","green","blue","alpha","react_default","createElement","cx","cy","fill","stroke","strokeWidth","render_circle","render_rect","D","pow","c","points","render_triangle","cur","render_polygon","initY","yCorrect","make_list_renderer","dx","dy","renderoozle","render_beside","initX","xCorrect","render_above","render_overlay","render_place","xChange","yChange","render_list","first","rest","slice","Object","toConsumableArray","paint","picture","viewBox","xmlns","key","random","RVAR_T","RAPP_T","RFUNCT_T","RNUM_T","RBOOL_T","RSTRING_T","RLIST_T","RSYM_T","RIMAGE_T","RCOLOR_T","RIF_T","RSTRUCT_T","RCLOS_T","varRE","appRE","numRE","boolRE","strRE","quoteRE","symRE","listRE","initEnv","makeStruct","name","binding","value","args","forEach","arg","typeCheck","firstArg","secondArg","car","cdr","d","reverse","isnull","val","thirdArg","fourthArg","restArgs","img","parse","text","test","numStr","match","trim","prog","boolStr","toLowerCase","matches","substring","parseFunct","funct","app","parseArg","SyntaxError","tst","els","thn","parseQ","listArr","num","bool","charAt","str","sym","parsePrefix","defStructRE","defineRE","nameRE","progs","parsed","parsePrefixExpr","superID","fieldClose","fieldOpen","fieldIDs","fieldID","parameters","param","body","interp","env","variable","ReferenceError","lookup","isRVAR","rator","rands","extedEnv","i","TypeError","interpPrefix","curEnv","closVar","def","makeDefine","unparse_cons","arr","id","fields","field","unparse_list","elems","parseCheck","types","includes","typesString","e","message","Fragment","numFields","fieldExtractors","fid","struct","extract","isRBOOL","gray","pink","yellow","allBools","every","isBooleanFormula","formula","outputs","thenChildren","NIL","nil","string","String","line","union","docL","docR","left","right","nest","doc","indent","group","flatten","makePretty","ribbon","best","thisRibbon","current","be","k","pairs","memoize","fits","diffWidth","diffRibbon","thunk","console","log","seen","layout","repeat","putSpace","putLine","compose","folddoc","f","docs","spread","stack","bracket","progToDoc_cons","program","progToDoc_list","list","Infinity","toBSL","tables","listOrCons","progToDoc","pretty","table","fieldToDoc","sig","signature","purp","purpose","params","checkExpects","examples","example","inputs","input","want","join","formulasToDoc","formulas","bools","splitForms","filter","nonbools","splitFormulas","form","condRows","tableToString","makeSendifier","delay","sessionID","url","item","sendItem","sent","fetch","method","headers","Content-Type","then","setTimeout","news","dryRun","yo","keyCount","takeKey","peekKey","lookahead","unparse","globalEnv","deepEquals","proga","progb","isRAPP","functCheck","argCheck","arga","elem","isRSTRUCT","fieldsSame","structa","structb","idSame","fielda","isRIMAGE","toRGBAArray","can","document","ctx","getContext","svg","xml","ReactDOMServer","renderToString","image64","btoa","src","drawImage","getImageData","data","imgA","imgB","dataA_red","dataA_green","dataB_red","dataB_green","redSame","datumA_red","greenSame","datumA_green","tellBigBrother","floor","Colon","props","className","ErrorMessage","error","title","index_esm","icon","Alert","size","verticalAlign","ariaLabel","RemButton","onClick","Trashcan","ValidatedInput","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textChange","bind","assertThisInitialized","target","setState","isValid","onValid","dummy","onEmpty","placeholder","onChange","React","Component","ValidatedArea","_this2","rows","cols","newlines","apply","split","spellCheck","Succinct","tableChange","newTab","oldTab","alteredTabs","indexOf","programChange","validName","modTab","tableVars","otherTab","paramVars","inEnv","reals","App_ValidatedInput","objectSpread","sides","paramTypes","outType","validSignature","deadTab","aliveTabs","remTable","SuccinctTab","tableNames","formulasChange","SuccinctHead","paramsExamplesChange","SuccinctBody","paramNames","examplesFormulasChange","validProg","isgood","formulaChange","newForm","oldForm","alteredForms","countWidth","child","abyss","maxDepth","curMax","numParams","colSpan","App_ValidatedArea","deadForm","aliveForms","remFormula","_","children","countUp","depth","DepictFormula","numExamples","Array","Parameters","validParam","modParam","paramChange","newParam","alteredParams","alteredExamples","deadParam","deadIndex","aliveParams","modExamples","remParam","childChange","newChild","modChild","deadChild","aliveChildren","remChild","exampleChange","newExample","oldExample","exists","addAnotherOutputToFormula","deadExample","aliveExamples","removeOutputFromFormula","remExample","Inputs","inputsChange","Outputs","row","Want","wantChange","inputChange","newInput","oldInput","alteredInputs","inputFields","TestCell","output","DummyCell","parentOutput","Check","valueCell","evalWant","DefinitionsArea","_this3","prefixChange","validPrefix","BSLArea","_this4","showBSL","toggleDisplay","bslArea","readOnly","htmlFor","App","_this5","snapshots","makeLookup","expr","flatMap","lookups","tableEnv","calcFormula","localEnv","subExamples","maybeSpecial","newFormula","nextState","JSON","stringify","newProg","calkedProg","calculate","_this6","App_DefinitionsArea","defaultValue","App_BSLArea","Boolean","window","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77497b40.chunk.js","sourcesContent":["/*******************************************\n    This here is the image library in js\n*******************************************/\n\n\n/***\n    Data Definitions:\nAn Image is one of \n      - Circle\n      - Rectangle\n      - Triangle\n      - Polygon\n      - Beside\n      - Above\n      - Overlay\n      - Place\n\n    A Circle is\n      {r:     Integer,\n       color: Color,\n       mode:  String,\n       type:  'circle'}\n     \n    A Rectangle is\n      {width:  Integer,\n       height: Integer,\n       color:  Color,\n       mode:   String,\n       type:   'rect'}\n       \n    A Triangle is                   \n      {A:      Integer,             /\\\n       B:      Integer,            /  \\\n       C:      Integer,        B  /    \\  C\n       color:  Color,            /      \\\n       mode:   String,          /________\\\n       type:   'triangle'}          A      \n       \n    A Polygon is\n      {coordinates: [{x: Integer, y: Integer}],\n       color:       Color,\n       mode:        String,\n       type:        'polygon'}\n       \n    note: only acute triangles are handled\n       \n    A Beside is\n      {type:   'beside',\n       yplace:  String,\n       images: [Image]} note: images must be non-empty\n       \n    An Above is\n      {type:   'above',\n       xplace:  String,\n       images: [Image]} note: images must be non-empty\n\n    An Overlay is\n      {type:   'overlay',\n       yplace: String\n       xplace: String,\n       images: [Image]} note: images must be non-empty\n       \n   A Place is\n     {type: place,\n      x:     Integer,\n      y:     Integer,\n      image: Image,\n      scene: Image}\n       \n    A Color is\n      {r: Integer,\n       g: Integer,\n       b: Integer,\n       a: Integer}\n***/\n\nimport React from 'react';\n\n// these colors taken from https://github.com/brownplt/code.pyret.org/blob/horizon/src/web/js/trove/image-lib.js\nconst colorDb = {\n    \"DARK-RED\" : makeColor(139, 0, 0),\n    \"FIRE-BRICK\" : makeColor(178, 34, 34),\n    \"DEEP-PINK\" : makeColor(255, 20, 147),\n    \"INDIAN-RED\" : makeColor(205, 92, 92),\n    \"MEDIUM-VIOLET-RED\" : makeColor(199, 21, 133),\n    \"VIOLET-RED\" : makeColor(208, 32, 144),\n    \"LIGHT-CORAL\" : makeColor(240, 128, 128),\n    \"HOT-PINK\" : makeColor(255, 105, 180),\n    \"PALE-VIOLET-RED\" : makeColor(219, 112, 147),\n    \"LIGHT-PINK\" : makeColor(255, 182, 193),\n    \"ROSY-BROWN\" : makeColor(188, 143, 143),\n    \"LAVENDER-BLUSH\" : makeColor(255, 240, 245),\n    \"SADDLE-BROWN\" : makeColor(139, 69, 19),\n    \"DARK-ORANGE\" : makeColor(255, 140, 0),\n    \"DARK-GOLDENRON\" : makeColor(184, 134, 11),\n    \"SANDY-BROWN\" : makeColor(244, 164, 96),\n    \"LIGHT-SALMON\" : makeColor(255, 160, 122),\n    \"DARK-SALMON\" : makeColor(233, 150, 122),\n    \"NAVAJO-WHITE\" : makeColor(255, 222, 173),\n    \"PEACH-PUFF\" : makeColor(255, 218, 185),\n    \"DARK-KHAKI\" : makeColor(189, 183, 107),\n    \"PALE-GOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHE-DIAMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM-GOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYA-WHIP\" : makeColor(255, 239, 213),\n    \"MISTY-ROSE\" : makeColor(255, 228, 225),\n    \"LEMON-CHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUE-WHITE\" : makeColor(250, 235, 215),\n    \"CORN-SILK\" : makeColor(255, 248, 220),\n    \"LIGHT-GOLDENRON-YELLOW\" : makeColor(250, 250, 210),\n    \"OLD-LACE\" : makeColor(253, 245, 230),\n    \"LIGHT-YELLOW\" : makeColor(255, 255, 224),\n    \"FLORAL-WHITE\" : makeColor(255, 250, 240),\n    \"LAWN-GREEN\" : makeColor(124, 252, 0),\n    \"GREEN-YELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW-GREEN\" : makeColor(154, 205, 50),\n    \"OLIVE-DRAB\" : makeColor(107, 142, 35),\n    \"MEDIUM-FOREST-GREEN\" : makeColor(107, 142, 35),\n    \"DARK-OLIVE-GREEN\" : makeColor(85, 107, 47),\n    \"DARK-SEA-GREEN\" : makeColor(143, 188, 139),\n    \"DARK-GREEN\" : makeColor(0, 100, 0),\n    \"LIME-GREEN\" : makeColor(50, 205, 50),\n    \"FOREST-GREEN\" : makeColor(34, 139, 34),\n    \"SPRING-GREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM-SPRING-GREEN\" : makeColor(0, 250, 154),\n    \"SEA-GREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM-SEA-GREEN\" : makeColor(60, 179, 113),\n    \"LIGHT-GREEN\" : makeColor(144, 238, 144),\n    \"PALE-GREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM-AQUAMARINE\" : makeColor(102, 205, 170),\n    \"LIGHT-SEA-GREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM-TURQUOISE\" : makeColor(72, 209, 204),\n    \"MINT-CREAM\" : makeColor(245, 255, 250),\n    \"ROYAL-BLUE\" : makeColor(65, 105, 225),\n    \"DODGER-BLUE\" : makeColor(30, 144, 255),\n    \"DEEP-SKY-BLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWER-BLUE\" : makeColor(100, 149, 237),\n    \"STEEL-BLUE\" : makeColor(70, 130, 180),\n    \"LIGHT-SKY-BLUE\" : makeColor(135, 206, 250),\n    \"DARK-TURQUOISE\" : makeColor(0, 206, 209),\n    \"DARKTURQUOISE\" : makeColor(0, 206, 209),\n    \"SKY-BLUE\" : makeColor(135, 206, 235),\n    \"SKYBLUE\" : makeColor(135, 206, 235),\n    \"CADET-BLUE\" : makeColor(96, 160, 160),\n    \"DARK-SLATE-GRAY\" : makeColor(47, 79, 79),\n    \"LIGHT-STEEL-BLUE\" : makeColor(176, 196, 222),\n    \"LIGHT-BLUE\" : makeColor(173, 216, 230),\n    \"POWDER-BLUE\" : makeColor(176, 224, 230),\n    \"PALE-TURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHT-CYAN\" : makeColor(224, 255, 255),\n    \"ALICE-BLUE\" : makeColor(240, 248, 255),\n    \"MEDIUM-BLUE\" : makeColor(0, 0, 205),\n    \"DARK-BLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT-BLUE\" : makeColor(25, 25, 112),\n    \"BLUE-VIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM-SLATE-BLUE\" : makeColor(123, 104, 238),\n    \"SLATE-BLUE\" : makeColor(106, 90, 205),\n    \"DARK-SLATE-BLUE\" : makeColor(72, 61, 139),\n    \"DARK-VIOLET\" : makeColor(148, 0, 211),\n    \"DARK-ORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUM-PURPLE\" : makeColor(147, 112, 219),\n    \"MEDIUM-ORCHID\" : makeColor(186, 85, 211),\n    \"DARK-MAGENTA\" : makeColor(139, 0, 139),\n    \"GHOST-WHITE\" : makeColor(248, 248, 255),\n    \"WHITE-SMOKE\" : makeColor(245, 245, 245),\n    \"LIGHT-GRAY\" : makeColor(211, 211, 211),\n    \"DARK-GRAY\" : makeColor(169, 169, 169),\n    \"DIM-GRAY\" : makeColor(105, 105, 105),\n\n    \"ORANGE\" : makeColor(255, 165, 0),\n    \"ORANGERED\" : makeColor(255, 69, 0),\n    \"TOMATO\" : makeColor(255, 99, 71),\n    \"DARKRED\" : makeColor(139, 0, 0),\n    \"RED\" : makeColor(255, 0, 0),\n    \"FIREBRICK\" : makeColor(178, 34, 34),\n    \"CRIMSON\" : makeColor(220, 20, 60),\n    \"DEEPPINK\" : makeColor(255, 20, 147),\n    \"MAROON\" : makeColor(176, 48, 96),\n    \"INDIAN RED\" : makeColor(205, 92, 92),\n    \"INDIANRED\" : makeColor(205, 92, 92),\n    \"MEDIUM VIOLET RED\" : makeColor(199, 21, 133),\n    \"MEDIUMVIOLETRED\" : makeColor(199, 21, 133),\n    \"VIOLET RED\" : makeColor(208, 32, 144),\n    \"VIOLETRED\" : makeColor(208, 32, 144),\n    \"LIGHTCORAL\" : makeColor(240, 128, 128),\n    \"HOTPINK\" : makeColor(255, 105, 180),\n    \"PALEVIOLETRED\" : makeColor(219, 112, 147),\n    \"LIGHTPINK\" : makeColor(255, 182, 193),\n    \"ROSYBROWN\" : makeColor(188, 143, 143),\n    \"PINK\" : makeColor(255, 192, 203),\n    \"ORCHID\" : makeColor(218, 112, 214),\n    \"LAVENDERBLUSH\" : makeColor(255, 240, 245),\n    \"SNOW\" : makeColor(255, 250, 250),\n    \"CHOCOLATE\" : makeColor(210, 105, 30),\n    \"SADDLEBROWN\" : makeColor(139, 69, 19),\n    \"BROWN\" : makeColor(132, 60, 36),\n    \"DARKORANGE\" : makeColor(255, 140, 0),\n    \"CORAL\" : makeColor(255, 127, 80),\n    \"SIENNA\" : makeColor(160, 82, 45),\n    \"SALMON\" : makeColor(250, 128, 114),\n    \"PERU\" : makeColor(205, 133, 63),\n    \"DARKGOLDENROD\" : makeColor(184, 134, 11),\n    \"GOLDENROD\" : makeColor(218, 165, 32),\n    \"SANDYBROWN\" : makeColor(244, 164, 96),\n    \"LIGHTSALMON\" : makeColor(255, 160, 122),\n    \"DARKSALMON\" : makeColor(233, 150, 122),\n    \"GOLD\" : makeColor(255, 215, 0),\n    \"YELLOW\" : makeColor(255, 255, 0),\n    \"OLIVE\" : makeColor(128, 128, 0),\n    \"BURLYWOOD\" : makeColor(222, 184, 135),\n    \"TAN\" : makeColor(210, 180, 140),\n    \"NAVAJOWHITE\" : makeColor(255, 222, 173),\n    \"PEACHPUFF\" : makeColor(255, 218, 185),\n    \"KHAKI\" : makeColor(240, 230, 140),\n    \"DARKKHAKI\" : makeColor(189, 183, 107),\n    \"MOCCASIN\" : makeColor(255, 228, 181),\n    \"WHEAT\" : makeColor(245, 222, 179),\n    \"BISQUE\" : makeColor(255, 228, 196),\n    \"PALEGOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHEDALMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM GOLDENROD\" : makeColor(234, 234, 173),\n    \"MEDIUMGOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYAWHIP\" : makeColor(255, 239, 213),\n    \"MISTYROSE\" : makeColor(255, 228, 225),\n    \"LEMONCHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUEWHITE\" : makeColor(250, 235, 215),\n    \"CORNSILK\" : makeColor(255, 248, 220),\n    \"LIGHTGOLDENRODYELLOW\" : makeColor(250, 250, 210),\n    \"OLDLACE\" : makeColor(253, 245, 230),\n    \"LINEN\" : makeColor(250, 240, 230),\n    \"LIGHTYELLOW\" : makeColor(255, 255, 224),\n    \"SEASHELL\" : makeColor(255, 245, 238),\n    \"BEIGE\" : makeColor(245, 245, 220),\n    \"FLORALWHITE\" : makeColor(255, 250, 240),\n    \"IVORY\" : makeColor(255, 255, 240),\n    \"GREEN\" : makeColor(0, 255, 0),\n    \"LAWNGREEN\" : makeColor(124, 252, 0),\n    \"CHARTREUSE\" : makeColor(127, 255, 0),\n    \"GREEN YELLOW\" : makeColor(173, 255, 47),\n    \"GREENYELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW GREEN\" : makeColor(154, 205, 50),\n    \"YELLOWGREEN\" : makeColor(154, 205, 50),\n    \"MEDIUM FOREST GREEN\" : makeColor(107, 142, 35),\n    \"OLIVEDRAB\" : makeColor(107, 142, 35),\n    \"MEDIUMFORESTGREEN\" : makeColor(107, 142, 35),\n    \"DARK OLIVE GREEN\" : makeColor(85, 107, 47),\n    \"DARKOLIVEGREEN\" : makeColor(85, 107, 47),\n    \"DARKSEAGREEN\" : makeColor(143, 188, 139),\n    \"LIME\" : makeColor(0, 255, 0),\n    \"DARK GREEN\" : makeColor(0, 100, 0),\n    \"DARKGREEN\" : makeColor(0, 100, 0),\n    \"LIME GREEN\" : makeColor(50, 205, 50),\n    \"LIMEGREEN\" : makeColor(50, 205, 50),\n    \"FOREST GREEN\" : makeColor(34, 139, 34),\n    \"FORESTGREEN\" : makeColor(34, 139, 34),\n    \"SPRING GREEN\" : makeColor(0, 255, 127),\n    \"SPRINGGREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM SPRING GREEN\" : makeColor(0, 250, 154),\n    \"MEDIUMSPRINGGREEN\" : makeColor(0, 250, 154),\n    \"SEA GREEN\" : makeColor(46, 139, 87),\n    \"SEAGREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM SEA GREEN\" : makeColor(60, 179, 113),\n    \"MEDIUMSEAGREEN\" : makeColor(60, 179, 113),\n    \"AQUAMARINE\" : makeColor(112, 216, 144),\n    \"LIGHTGREEN\" : makeColor(144, 238, 144),\n    \"PALE GREEN\" : makeColor(152, 251, 152),\n    \"PALEGREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM AQUAMARINE\" : makeColor(102, 205, 170),\n    \"MEDIUMAQUAMARINE\" : makeColor(102, 205, 170),\n    \"TURQUOISE\" : makeColor(64, 224, 208),\n    \"LIGHTSEAGREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM TURQUOISE\" : makeColor(72, 209, 204),\n    \"MEDIUMTURQUOISE\" : makeColor(72, 209, 204),\n    \"HONEYDEW\" : makeColor(240, 255, 240),\n    \"MINTCREAM\" : makeColor(245, 255, 250),\n    \"ROYALBLUE\" : makeColor(65, 105, 225),\n    \"DODGERBLUE\" : makeColor(30, 144, 255),\n    \"DEEPSKYBLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWERBLUE\" : makeColor(100, 149, 237),\n    \"STEEL BLUE\" : makeColor(70, 130, 180),\n    \"STEELBLUE\" : makeColor(70, 130, 180),\n    \"LIGHTSKYBLUE\" : makeColor(135, 206, 250),\n    \"DARK TURQUOISE\" : makeColor(0, 206, 209),\n    \"CYAN\" : makeColor(0, 255, 255),\n    \"AQUA\" : makeColor(0, 255, 255),\n    \"DARKCYAN\" : makeColor(0, 139, 139),\n    \"TEAL\" : makeColor(0, 128, 128),\n    \"SKY BLUE\" : makeColor(135, 206, 235),\n    \"CADET BLUE\" : makeColor(96, 160, 160),\n    \"CADETBLUE\" : makeColor(95, 158, 160),\n    \"DARK SLATE GRAY\" : makeColor(47, 79, 79),\n    \"DARKSLATEGRAY\" : makeColor(47, 79, 79),\n    \"LIGHTSLATEGRAY\" : makeColor(119, 136, 153),\n    \"SLATEGRAY\" : makeColor(112, 128, 144),\n    \"LIGHT STEEL BLUE\" : makeColor(176, 196, 222),\n    \"LIGHTSTEELBLUE\" : makeColor(176, 196, 222),\n    \"LIGHT BLUE\" : makeColor(173, 216, 230),\n    \"LIGHTBLUE\" : makeColor(173, 216, 230),\n    \"POWDERBLUE\" : makeColor(176, 224, 230),\n    \"PALETURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHTCYAN\" : makeColor(224, 255, 255),\n    \"ALICEBLUE\" : makeColor(240, 248, 255),\n    \"AZURE\" : makeColor(240, 255, 255),\n    \"MEDIUM BLUE\" : makeColor(0, 0, 205),\n    \"MEDIUMBLUE\" : makeColor(0, 0, 205),\n    \"DARKBLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT BLUE\" : makeColor(25, 25, 112),\n    \"MIDNIGHTBLUE\" : makeColor(25, 25, 112),\n    \"NAVY\" : makeColor(36, 36, 140),\n    \"BLUE\" : makeColor(0, 0, 255),\n    \"INDIGO\" : makeColor(75, 0, 130),\n    \"BLUE VIOLET\" : makeColor(138, 43, 226),\n    \"BLUEVIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM SLATE BLUE\" : makeColor(123, 104, 238),\n    \"MEDIUMSLATEBLUE\" : makeColor(123, 104, 238),\n    \"SLATE BLUE\" : makeColor(106, 90, 205),\n    \"SLATEBLUE\" : makeColor(106, 90, 205),\n    \"PURPLE\" : makeColor(160, 32, 240),\n    \"DARK SLATE BLUE\" : makeColor(72, 61, 139),\n    \"DARKSLATEBLUE\" : makeColor(72, 61, 139),\n    \"DARKVIOLET\" : makeColor(148, 0, 211),\n    \"DARK ORCHID\" : makeColor(153, 50, 204),\n    \"DARKORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUMPURPLE\" : makeColor(147, 112, 219),\n    \"CORNFLOWER BLUE\" : makeColor(68, 64, 108),\n    \"MEDIUM ORCHID\" : makeColor(186, 85, 211),\n    \"MEDIUMORCHID\" : makeColor(186, 85, 211),\n    \"MAGENTA\" : makeColor(255, 0, 255),\n    \"FUCHSIA\" : makeColor(255, 0, 255),\n    \"DARKMAGENTA\" : makeColor(139, 0, 139),\n    \"VIOLET\" : makeColor(238, 130, 238),\n    \"PLUM\" : makeColor(221, 160, 221),\n    \"LAVENDER\" : makeColor(230, 230, 250),\n    \"THISTLE\" : makeColor(216, 191, 216),\n    \"GHOSTWHITE\" : makeColor(248, 248, 255),\n    \"WHITE\" : makeColor(255, 255, 255),\n    \"WHITESMOKE\" : makeColor(245, 245, 245),\n    \"GAINSBORO\" : makeColor(220, 220, 220),\n    \"LIGHT GRAY\" : makeColor(211, 211, 211),\n    \"LIGHTGRAY\" : makeColor(211, 211, 211),\n    \"SILVER\" : makeColor(192, 192, 192),\n    \"GRAY\" : makeColor(190, 190, 190),\n    \"DARK GRAY\" : makeColor(169, 169, 169),\n    \"DARKGRAY\" : makeColor(169, 169, 169),\n    \"DIM GRAY\" : makeColor(105, 105, 105),\n    \"DIMGRAY\" : makeColor(105, 105, 105),\n    \"BLACK\" : makeColor(0, 0, 0),\n    \"TRANSPARENT\" : makeColor(0, 0, 0, 0),\n};\n\n// Integer\n// generates a random key so react stops complaining\nfunction genKey() {\n    return Math.round(Math.random() * 100000000);\n}\n\n/*\nTODO:\n  Figure out how stars, pentagons, hexagons should work (yay geometry)\n  turn rectangles and triangles into polygons?\n*/\n\n// Integer, Integer, Integer[, Integer] -> Color \nfunction makeColor (r, g, b, a = 255) {\n    if (r < 0 || r > 255 ||\n        g < 0 || g > 255 ||\n        b < 0 || b > 255 ||\n        a < 0 || a > 255 ){\n        throw new Error('r g b a values must be between 0 and 255 (inclusive)');\n    }\n\n    return {r, g, b, a};\n}\n\n// Color, Integer -> Color\nfunction changeAlpha (color, a) {\n    return makeColor(color.r, color.g, color.b, a);\n}\n\n// Integer -> Integer\n// pretty much makes sure the argument is non-negative\nfunction checkDimension(maybeDimension) {\n    if (maybeDimension < 0) {\n        throw new Error('shape dimensions must be non-negative');\n    }\n\n    return maybeDimension;\n}\n\n// (String or Color) -> Color\nfunction checkColor(maybeColor) {\n    if (typeof maybeColor === 'string') {\n        let color = colorDb[maybeColor.replace(' ', '').toUpperCase()];\n        if (color === undefined) {\n            throw new Error(`${maybeColor} is not a valid color`);\n        }\n\n        return color;\n    } \n\n    // T_ODO: check if maybeColor is actually a color object\n    // nvm, I do that in interpreter.js\n    return maybeColor;\n}\n\nfunction checkMode(maybeMode) {\n    if (maybeMode !== 'solid' && maybeMode !== 'outline') {\n        throw new Error(`${maybeMode} is not a valid mode`);\n    }\n\n    return maybeMode;\n}\n\nfunction checkXPlace(maybeXPlace) {\n    if (maybeXPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeXPlace !== 'left' && maybeXPlace !== 'right' && maybeXPlace !== 'center') {\n        throw new Error(`${maybeXPlace} is not a valid x-place`);\n    }\n\n    return maybeXPlace;\n}\n\nfunction checkYPlace(maybeYPlace) {\n    if (maybeYPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeYPlace !== 'top' && maybeYPlace !== 'bottom' && maybeYPlace !== 'center') {\n        throw new Error(`${maybeYPlace} is not a valid y-place`);\n    }\n\n    return maybeYPlace;\n}\n\n// Integer (String or Integer) Color -> Circle\nfunction makeCircle (r, mode, color) {\n    if (typeof mode === 'string') {\n        return {r: checkDimension(r), mode: checkMode(mode), color: checkColor(color), type: 'circle'};\n    } else {\n        return {r: checkDimension(r), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'circle'};\n    }\n}\n\n// Integer Integer (String or Integer) Color -> Rectangle\nfunction makeRectangle (width, height, mode, color) {\n    if (typeof mode === 'string') {\n        return {width: checkDimension(width), height: checkDimension(height), mode: checkMode(mode),  color: checkColor(color), type: 'rect'};\n    } else {\n        return {width: checkDimension(width), height: checkDimension(height), mode: 'solid',  color: changeAlpha(checkColor(color), mode), type: 'rect'};\n    }\n}\n\n// Integer Integer Integer (String or Integer) Color -> Triangle\nfunction makeTriangle (A, B, C, mode, color) {\n    if (typeof mode === 'string') {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: checkMode(mode), color: checkColor(color), type: 'triangle'};\n    } else {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'triangle'};\n    }\n}\n\n// Integer (String or Integer) Color -> Triangle\nfunction makeEquiTriangle (length, mode, color) {\n    return makeTriangle(length, length, length, mode, color);\n}\n\n// [{x: Integer, y: Integer}], (String or Integer), Color -> Polygon\nfunction makePolygon (coords, mode, color) {\n    if (typeof mode === 'string') {\n        return {coordinates: coords, mode: checkMode(mode), color: checkColor(color), type: 'polygon'};\n    } else {\n        return {coordinates: coords, mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'polygon'};\n    }\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makePentagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeHexagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeStar (length, mode, color) {\n    \n}\n\n// [Image] -> Image\nfunction makeBeside (images, yplace = 'center') {\n    return {images, yplace: checkYPlace(yplace), type: 'beside'};\n}\n\n// [Image] -> Image\nfunction makeAbove (images, xplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), type: 'above'};\n}\n\n// [Image] -> Image\nfunction makeOverlay (images, xplace = 'center', yplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), yplace: checkYPlace(yplace), type: 'overlay'};\n}\n\nfunction makePlace (image, x, y, scene) {\n    return {image, x, y, scene, type: 'place'};\n}\n\n// Integer, Integer[, (Color or String)] -> Image\nfunction emptyScene (w, h, color = 'white') {\n    return makeOverlay([makeRectangle(w, h, 'outline', 'black'), makeRectangle(w, h, 'solid', color)]);\n}\n\n// Image -> Integer\nfunction width (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.width;\n    case 'triangle':\n        return image.A;\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.x).reduce((acc, x) => Math.max(acc, x));\n    case 'beside':\n        return image.images.reduce((acc, image) => acc + width(image), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'place':\n        return width(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Image -> Integer\nfunction height (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.height;\n    case 'triangle':\n        // Heron's Formula, I went on Wikihow for this, don't judge\n        let s = (image.A + image.B + image.C) / 2;\n        let area = Math.sqrt(s * (s  - image.A) * (s - image.B) * (s - image.C));\n        return Math.round((area * 2) / image.A);\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.y).reduce((acc, y) => Math.max(acc, y));\n    case 'beside':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => acc + height(image), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'place':\n        return height(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n\n// Image, Integer, Integer -> SVG\nfunction render (image, x, y) {\n    switch (image.type) {\n    case 'circle':\n        return render_circle(image, x, y);\n    case 'rect':\n        return render_rect(image, x, y);\n    case 'triangle':\n        return render_triangle(image, x, y);\n    case 'polygon':\n        return render_polygon(image, x, y);\n    case 'beside':\n        return render_beside(image, x, y);\n    case 'above':\n        return render_above(image, x, y);\n    case 'overlay':\n        return render_overlay(image, x, y);\n    case 'place':\n        return render_place(image, x, y);\n    default:\n        throw new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Circle, Integer, Integer -> SVG\nfunction render_circle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    // for some reason alpha is the only float in rgba in css...\n    let alpha = image.color.a / 255;\n    switch (image.mode) {\n    case 'solid':\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r}\n                       fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke is pretty annoying...\n        // it draws both outside of the shape and inside it...\n        //so it's difficult to figure out where exactly it wants to draw\n\n        // this should draw the outline of a circle (approximately)\n        // not sure how it works on browsers besides firefox though\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r - .5}\n                       fill='none'\n                       stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                       strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Rectangle, Integer, Integer -> SVG\nfunction render_rect (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    switch (image.mode) {\n    case 'solid':\n        return <rect x={x}\n                     y={y}\n                     width={image.width}\n                     height={image.height}\n                     fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke has similar problems here as it does in circle\n        return <rect x={x + .5}\n                      y={y + .5}\n                      width={image.width - 1}\n                      height={image.height - 1}\n                      fill='none'\n                      stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                      strokeWidth={1}\n                 />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Triangle, Integer, Integer -> SVG\nfunction render_triangle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let D = Math.round(Math.sqrt(Math.pow(image.B, 2) - Math.pow(height(image), 2))); \n    // these are coordinates                                   //         b       \n    let a = {x: x, y: y + height(image)};                      //         .       \n    let b = {x: x + D, y: y};                                  //        /|\\      \n    let c = {x: x + width(image), y: y + height(image)};       //       / | \\     \n                                                               //   B  /  |  \\  C\n                                                               //     /   |h  \\\n                                                               //    /    |    \\\n                                                               //   ._____|_____.\n                                                               //  a   D  A      c\n    switch (image.mode) {                                       \n    case 'solid':                                               \n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Polygon, Integer, Integer -> SVG\nfunction render_polygon (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let points = image.coordinates.map((coord) => `${coord.x + x},${coord.y + y}`).reduce((acc, cur) => acc + ' ' + cur);\n    switch (image.mode) {\n    case 'solid':                                               \n        return <polygon\n                 points={points}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={points}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n\n// should I flatten [SVG]s?\n// no, not really any point. react seems to figure it out\n\n// (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer) -> ([Image], Integer, Integer) -> [SVG]\nfunction make_list_renderer (xCorrect, yCorrect, xChange, yChange) {\n    function render_list (images, x, y) {\n        if (images.length === 0) {\n            throw new Error('I need at least 1 image to render!');\n        }\n\n        let w = width(images[0]);\n        let h = height(images[0]);\n\n        let first = render(images[0], xCorrect(x, w), yCorrect(y, h));\n\n        if (images.length === 1) {\n            return [first];\n        }\n\n        let rest = render_list(images.slice(1), xChange(x, w), yChange(y, h));\n\n        // return list in reverse because the last child of an svg tag is shown on top\n        // this matters for overlay, but makes no difference in beside, above\n        return [...rest, first];\n    }\n\n    return render_list;\n}\n\n// Beside, Ingeger, Integer -> [SVG]\nfunction render_beside (image, x, y) {\n    let initY = y,\n        yCorrect = (y, h) => y;\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer((x, w) => x,\n                                         yCorrect,\n                                         (x, dx) => x + dx,\n                                         (y, dy) => y);\n    return renderoozle(image.images, x, initY);\n}\n\n// Above, Integer, Integer -> [SVG]\nfunction render_above (image, x, y) {\n    let initX = x,\n        xCorrect = (x, w) => x;\n\n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         (y, h) => y,\n                                         (x, dx) => x,\n                                         (y, dy) => y + dy);\n    return renderoozle(image.images, initX, y);\n\n}\n\n// Overlay, Integer, Integer -> [SVG]\nfunction render_overlay (image, x, y) {\n    let initX = x,\n        initY = y,\n        xCorrect = (x, w) => x,\n        yCorrect = (y, h) => y;\n    \n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         yCorrect,\n                                         (x, dx) => x,\n                                         (y, dy) => y);\n    return renderoozle(image.images, initX, initY);\n}\n\n// Place, Integer, Integer -> SVG\nfunction render_place (image, x, y) {\n    return [render(image.scene, x, y), render(image.image, x + image.x - width(image.image) / 2, y + image.y - height(image.image) / 2)];\n}\n\n// Image -> top level SVG\nfunction paint (image) {\n    let picture = render(image, 0, 0);\n    return (\n        <svg viewBox={`0 0 ${width(image)} ${height(image)}`}\n             xmlns='http://www.w3.org/2000/svg'\n             width={width(image)}\n             height={height(image)}\n             key={genKey()}\n        >\n          {picture}\n        </svg>\n    );\n}\n\nexport {makeCircle, makeRectangle, makeEquiTriangle, makeStar, makePentagon, makeHexagon,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint, width, height};\n","// for typeCheck Error messages\nimport React from 'react';\nimport {makeCircle, makeRectangle, makeEquiTriangle,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint} from './image.js';\n\n/****************\n   Interpreter\n****************/\n\nconst RVAR_T =    0;\nconst RAPP_T =    1;\nconst RFUNCT_T =  2;\nconst RNUM_T =    3;\nconst RBOOL_T =   4;\nconst RSTRING_T = 5;\nconst RLIST_T =   6;\nconst RSYM_T =    7;\nconst RIMAGE_T =  8;\nconst RCOLOR_T =  9;\nconst RIF_T =     10;\nconst RSTRUCT_T = 11;\nconst RCLOS_T =   12;\n\nconst varRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst appRE = /^\\(/;\nconst numRE = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#])/; // this one doesn't permit fractions\nconst boolRE = /^#(?:[tfTF]|true|false)(?=$|[\\s\",'`()[\\]{}|;#])/;\nconst strRE = /^\"[^\\\\\"]*\"/; // TODO: handle backslash escape\nconst quoteRE = /^'/;\nconst symRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst listRE = /^\\(/;\n\nconst protoEnv = [\n    // functions\n    {name: '+', binding: {type: RFUNCT_T,\n                          value: plus}},\n    {name: 'add1', binding: {type: RFUNCT_T,\n                          value: add1}},\n    {name: '-', binding: {type: RFUNCT_T,\n                          value: minus}},\n    {name: 'sub1', binding: {type: RFUNCT_T,\n                          value: sub1}},\n    {name: '*', binding: {type: RFUNCT_T,\n                          value: times}},\n    {name: '/', binding: {type: RFUNCT_T,\n                          value: divide}},\n    {name: 'car', binding: {type: RFUNCT_T,\n                            value: car}},\n    {name: 'first', binding: {type: RFUNCT_T,\n                              value: car}},\n    {name: 'cdr', binding: {type: RFUNCT_T,\n                            value: cdr}},\n    {name: 'rest', binding: {type: RFUNCT_T,\n                             value: cdr}},\n    {name: 'cons', binding: {type: RFUNCT_T,\n                             value: cons}},\n    {name: 'list', binding: {type: RFUNCT_T,\n                             value: list}},\n    {name: 'not', binding: {type: RFUNCT_T,\n                            value: not}},\n    {name: 'and', binding: {type: RFUNCT_T,\n                            value: and}},\n    {name: 'or', binding: {type: RFUNCT_T,\n                           value: or}},\n    {name: 'eqv?', binding: {type: RFUNCT_T,\n                             value: iseqv}},\n    {name: 'null?', binding: {type: RFUNCT_T,\n                              value: isnull}},\n    {name: 'empty?', binding: {type: RFUNCT_T,\n                               value: isnull}},\n    {name: 'cons?', binding: {type: RFUNCT_T,\n                               value: iscons}},\n    {name: '=', binding: {type: RFUNCT_T,\n                          value: equalsign}},\n    {name: '>', binding: {type: RFUNCT_T,\n                          value: gtsign}},\n    {name: '>=', binding: {type: RFUNCT_T,\n                           value: gesign}},\n    {name: '<', binding: {type: RFUNCT_T,\n                          value: ltsign}},\n    {name: '<=', binding: {type: RFUNCT_T,\n                           value: lesign}},\n    {name: 'string-length', binding: {type: RFUNCT_T,\n                           value: stringLength}},\n    {name: 'string-append', binding: {type: RFUNCT_T,\n                           value: stringAppend}},\n    {name: 'string=?', binding: {type: RFUNCT_T,\n                                 value: isstrequal}},\n    {name: 'circle', binding: {type: RFUNCT_T,\n                               value: circle}},\n    {name: 'rectangle', binding: {type: RFUNCT_T,\n                               value: rectangle}},\n    {name: 'square', binding: {type: RFUNCT_T,\n                               value: square}},\n    {name: 'triangle', binding: {type: RFUNCT_T,\n                               value: triangle}},\n    {name: 'beside', binding: {type: RFUNCT_T,\n                               value: beside}},\n    {name: 'beside/align', binding: {type: RFUNCT_T,\n                               value: besideAlign}},\n    {name: 'above', binding: {type: RFUNCT_T,\n                               value: above}},\n    {name: 'above/align', binding: {type: RFUNCT_T,\n                               value: aboveAlign}},\n    {name: 'overlay', binding: {type: RFUNCT_T,\n                               value: overlay}},\n    {name: 'overlay/align', binding: {type: RFUNCT_T,\n                               value: overlayAlign}},\n    {name: 'place-image', binding: {type: RFUNCT_T,\n                                    value: placeImage}},\n    {name: 'empty-scene', binding: {type: RFUNCT_T,\n                                    value: empty_Scene}},\n    {name: 'color', binding: {type: RFUNCT_T,\n                              value: color}},\n    // constants\n    {name: 'true', binding: {type: RBOOL_T,\n                             value: true}},\n    {name: 'false', binding: {type: RBOOL_T,\n                              value: false}},\n    {name: 'null', binding: {type: RLIST_T,\n                             value: null}},\n    {name: 'empty', binding: {type: RLIST_T,\n                              value: null}},\n];\n\n// put posn in initEnv becaouse why not\nconst initEnv = makeStruct('posn', ['x', 'y'], protoEnv);\n\n// String -> {prog: Program, rest: String}\n// parses all expressions except quoted expressions\nfunction parse(text) {\n    if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n    } else if (varRE.test(text)) {\n        let matches = text.match(varRE);\n        let name = matches[0];\n        let rest = text.slice(name.length).trim();\n        let variable = {value: name, type: RVAR_T};\n\n        return {prog: variable, rest: rest};\n\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr[1].toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (appRE.test(text)) {\n        text = text.slice(1).trim(); // remove open paren\n        let parseFunct = parse(text); // parse function\n        let funct = parseFunct.prog; // get function\n        text = parseFunct.rest; // get past function\n        let args = [];\n\n        while (text[0] !== ')') {\n            let parseArg = parse(text);\n            args = [...args, parseArg.prog];\n            text = parseArg.rest;\n        }\n\n        let app;\n        if (funct.value === 'or') {\n            if (args.length === 2) {\n                app = {value: {tst: args[0], els: args[1], thn: {value : true, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'and') {\n\n\n         if (args.length === 2) {\n                app = {value: {tst: args[0], thn: args[1], els: {value : false, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'if') {\n            if (args.length === 3) {\n                app = {value: {tst: args[0], thn: args[1], els: args[2]}, type: RIF_T};\n            }\n            else {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        } else {\n            app = {value: {funct: funct, args: args}, type: RAPP_T};\n        }\n        let rest = text.slice(1).trim(); // remove close paren\n\n        return {prog: app, rest: rest};\n\n    } else if (quoteRE.test(text)) {\n        return parseQ(text.slice(1).trim());\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> {prog: Program, rest: String}\n// parses quoted expressions\nfunction parseQ(text) {\n    if (listRE.test(text)) {\n        text = text.slice(1).trim(); // remove quote, open paren\n        let listArr = [];\n\n        while (text[0] !== ')') {\n            let cur = parseQ(text);\n            listArr = [cur.prog, ...listArr]; // listArr is constructed backwards\n            text = cur.rest;\n        }\n\n        let rest = text.slice(1).trim();\n        let prog = listArr.reduce((acc, cur) => ({value: {a: cur, d: acc}, type: RLIST_T}), {value: null, type: RLIST_T}); // turn listArr into an Rlist\n\n        return {prog: prog, rest: rest};\n\n    } else if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr.charAt(1).toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (symRE.test(text)) {\n        let matches = text.match(symRE);\n        let value = matches[0];\n        let sym = {value: value, type: RSYM_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: sym, rest: rest};\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> [PrefixProg]\nfunction parsePrefix (text) {\n    const commentRE = /;.*/g;\n    const defStructRE = /^\\(define-struct/;\n    const defineRE = /^\\(define/;\n    const nameRE = /^[^\\s,'`()[\\]{}|;#\\d]+/;\n\n    text = text.replace(commentRE, '');\n    text = text.trim();\n\n    let progs = [];\n\n    while(text !== '') {\n        let parsed = parsePrefixExpr(text);\n\n        text = parsed.rest;\n        progs = [...progs, parsed.prog];\n    }\n\n    return progs;\n\n    // Text -> {prog: PrefixProg, rest: String}\n    function parsePrefixExpr (text) {\n        if (defStructRE.test(text)) {\n            const openRE = /[([]/;\n\n            text = text.slice('(define-struct'.length);\n            text = text.trim();\n\n            if (!nameRE.test(text)) {\n                throw new Error('Invalid Struct Name');\n            }\n\n            let superID = text.match(nameRE)[0];\n            text = text.slice(superID.length)\n            text = text.trim();\n\n            if (!openRE.test(text)) {\n                throw new Error('Invalid Struct Definition');\n            }\n\n            let fieldOpen = text[0];\n            text = text.slice('('.length);\n            text = text.trim();\n\n            let fieldClose;\n            if (fieldOpen === '(') {\n                fieldClose = ')';\n            } else if (fieldOpen === '[') {\n                fieldClose = ']';\n            }\n\n            let fieldIDs = [];\n            while (text[0] !== fieldClose) {\n                if (!nameRE.test(text)) {\n                    throw new Error('Invalid Field Name');\n                }\n\n                let fieldID = text.match(nameRE)[0];\n\n                text = text.slice(fieldID.length);\n                text = text.trim();\n\n                fieldIDs = [...fieldIDs, fieldID];\n            }\n\n            text = text.slice(')'.length);\n            text = text.trim();\n\n            if (text[0] !== ')') {\n                throw new Error('Invalid Struct Definition');\n            }\n            text = text.slice(')'.length);\n            text = text.trim();\n\n            return {prog: {superID, fieldIDs, type: 'struct'}, rest: text}\n        } else if (defineRE.test(text)) {\n            const closRE = /^\\(/;\n\n            text = text.slice('(define'.length);\n            text = text.trim();\n\n\n            let name,\n                binding;\n            if (nameRE.test(text)) {    // not function definition\n                name = text.match(nameRE)[0];\n\n                text = text.slice(name.length);\n                text = text.trim();\n\n                let parsed = parse(text);\n\n                binding = parsed.prog;\n                text = parsed.rest.trim();\n\n            } else if (closRE.test(text)) {\n                text = text.slice('('.length);\n                text = text.trim();\n\n                if (!nameRE.test(text)) {\n                    throw new Error(`Invalid Prefix Form: ${text}`);\n                }\n\n                name = text.match(nameRE)[0];\n\n                text = text.slice(name.length);\n                text = text.trim();\n\n                let parameters = [];\n                while (text[0] !== ')') {\n                    if (!nameRE.test(text)) {\n                        throw new Error(`Invalid Prefix Form: ${text}`);\n                    }\n\n                    let param = text.match(nameRE)[0];\n\n                    text = text.slice(param.length);\n                    text = text.trim();\n\n                    parameters = [...parameters, param];\n                }\n\n                text = text.slice(')'.length);\n                text = text.trim();\n\n                let parsed = parse(text);\n\n                let body = parsed.prog;\n\n                text = parsed.rest;\n                text = text.trim();\n\n                binding = {value: {parameters, body}, type: RCLOS_T}\n            } else {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            if (text[0] !== ')') {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            text = text.slice(')'.length);\n            text = text.trim();\n\n            return {prog: {name, binding, type: 'define'}, rest: text};\n\n        } else {\n            throw new Error(`Invalid Prefix Form: ${text}`);\n        }\n    }\n}\n\n/***\n    Environment: [Variable]\n    Variable:    {name:    String,\n                  binding: Program}\n***/\n\n// Program, Environment -> Program\nfunction interp(prog, env) {\n    function lookup(name) {\n        let val = env.reduce((acc, variable) => {\n            if (acc !== undefined) {\n                return acc;\n            }\n\n            return variable.name === name ? variable.binding : undefined;\n        }, undefined);\n\n        if (val === undefined){\n            throw new ReferenceError(name + ' isn\\'t defined');\n        }\n\n        return val;\n    }\n\n    switch(prog.type) {\n        case RNUM_T:\n            return prog;\n        case RBOOL_T:\n            return prog;\n        case RSTRING_T:\n            return prog;\n        case RLIST_T:\n            return prog;\n        case RSYM_T:\n            return prog;\n        case RVAR_T:\n            return lookup(prog.value);\n        case RFUNCT_T:\n            return prog;\n        case RCLOS_T:\n            // put environment in there and stuff\n            return {value: {parameters: prog.value.parameters, body: prog.value.body, env: env}, type: RCLOS_T};\n        case RIF_T:\n            let tst = interp(prog.value.tst, env);\n            typeCheck(tst, [RBOOL_T]);\n\n            if (tst.value) {\n                return interp(prog.value.thn, env);\n            }\n            else {\n                return interp(prog.value.els, env);\n            }\n\n        case RAPP_T:\n            let name = 'anonymous';\n            if (isRVAR(prog.value.funct)) {\n                name = prog.value.funct.value; // that's a lot of .s\n            }\n\n            // interp operator (valof rator env)\n            let rator = interp(prog.value.funct, env);\n\n            // interpret arguments (valof rand env)\n            let rands = prog.value.args.map((arg) => interp(arg, env));\n            switch(rator.type) {\n                case RFUNCT_T:\n                    return rator.value(rands);\n                case RCLOS_T:\n                    if (rands.length !== rator.value.parameters.length) {\n                        throw new Error (`Arity Mismatch: ${name} expects ${rator.value.parameters.length} arguments but got ${rands.length}`);\n                    }\n\n                    let extedEnv = [...rator.value.env, ...rator.value.parameters.map((name, i) => ({name, binding: rands[i]}))];\n                    return interp(rator.value.body, extedEnv);\n                default:\n                    typeCheck(rator, [RFUNCT_T]);\n            }\n\n            // this break only exists to make the js syntax checker stop complaining\n            break;\n        case RIMAGE_T:\n            return prog;\n        case RCOLOR_T:\n            return prog;\n\n        default:\n            //console.log(prog);\n            throw new TypeError(\"Unknown Type \" + prog.value);\n    }\n}\n\n// [PrefixProgram], Environment -> Environment\nfunction interpPrefix (progs, env) {\n    let ext = progs.reduce((curEnv, prog) => {\n        switch (prog.type) {\n            case 'struct':\n                return makeStruct(prog.superID, prog.fieldIDs, curEnv);\n            case 'define':\n                return makeDefine(prog.name, prog.binding, curEnv);\n            default:\n                throw new Error('Invalid Prefix Prog');\n\n        }\n    }, env);\n\n    return ext;\n}\n\n// String, Program, Environment -> Environment\nfunction makeDefine (name, binding, env) {\n    switch (binding.type) {\n        case RCLOS_T: // TODO: make recursion work\n            let closVar = {name, binding: interp(binding, env)};\n            return [...env, closVar];\n        default:\n            let def = {name, binding: interp(binding, env)};\n            return [...env, def];\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_cons(prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            if (prog.value === null) {\n                return ['\\'()'];\n            } else {\n                return ['(cons ', ...unparse_cons(prog.value.a), ' ', ...unparse_cons(prog.value.d), ')'];\n            }\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_cons(prog.value.funct), ...prog.value.args.map(unparse_cons).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_cons(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            //console.log(prog);\n            return 'error or something';\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_list (prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            // special case for empty list\n            if (prog.value === null) {\n                return ['\\'()'];\n            }\n\n            let elems = [];\n            while (prog.value !== null) {\n                elems = [...elems, ' ', ...unparse_list(prog.value.a)];\n                prog = prog.value.d;\n            }\n\n            return ['(list', ...elems, ')'];\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_list(prog.value.funct), ...prog.value.args.map(unparse_list).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_list(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            return 'error or something';\n    }\n}\n\n// String -> Program\n// parses text and checks for syntax errors based on what's returned\nfunction parseCheck(text) {\n    let parsed = parse(text);\n\n    switch (parsed.rest) {\n    case '':\n        break;\n    default:\n        throw new SyntaxError('Parsing Error');\n    }\n\n    return parsed.prog;\n}\n\n// Program -> [Number] -> Error Maybe\n// checks if prog is of one of the types in types\nfunction typeCheck(prog, types) {\n    // Number -> String\n    function getType(type) {\n        switch (type) {\n        case RVAR_T:\n            return 'variable';\n        case RAPP_T:\n            return 'application';\n        case RFUNCT_T:\n            return 'function';\n        case RCLOS_T:\n            return 'closure';\n        case RNUM_T:\n            return 'number';\n        case RBOOL_T:\n            return 'boolean';\n        case RSTRING_T:\n            return 'string';\n        case RLIST_T:\n            return 'list';\n        case RSYM_T:\n            return 'symbol';\n        case RIMAGE_T:\n            return 'image';\n        case RCOLOR_T:\n            return 'color';\n        default:\n            return '???';\n        }\n    }\n\n    if (!types.includes(prog.type)) {\n        let typesString = types.map(getType).reduce((acc, type) => acc + ` or a ${type}`);\n        let e = new TypeError();\n        // shoehorn a non-string into the message field\n        // TODO: somehow make this use the approproate unparser maybe\n        e.message = <React.Fragment>{[unparse_cons(prog), \" ain't a \" + typesString]}</React.Fragment>;\n        throw e;\n    }\n}\n\n// Super-Id, [Field-Id], Environment -> Environment\n// makes a racket structure according to id and field and appends\n// a function to make an id, a function to check if something is an id\n// and n functions that each access one of the fields of an id\n// to the given environment (and returns it)\nfunction makeStruct(superID, fieldIDs, env) {\n    const numFields = fieldIDs.length;\n\n    // [Program] -> Struct\n    function construct (args) {\n        if (args.length !== numFields) {\n            throw new Error(`make-${superID}: arity mismatch, expected ${numFields} arguments but given ${args.length}`);\n        }\n\n        let fields = args.map((prog, i) => ({id: fieldIDs[i], binding: prog}));\n        return {value: {id: superID, fields}, type: RSTRUCT_T};\n    }\n\n    // [Program] -> RBOOL\n    function isID (args) {\n        if (args.length !== 1) {\n            throw new Error(`${superID}?: arity mismatch, expected 1 argument but given ${args.length}`);\n        }\n\n        let struct = args[0];\n\n        return {value: struct.type === RSTRUCT_T && struct.value.id === superID,\n                type: RBOOL_T};\n    }\n\n    let fieldExtractors = fieldIDs.map((fid) => (\n        // Struct -> Program\n        function (args) {\n            if (args.length !== 1) {\n                throw new Error(`${superID}-${fid}: arity mismatch, expected 1 argument but given ${args.length}`);\n            }\n\n            if (args[0].type !== RSTRUCT_T || args[0].value.id !== superID) {\n                throw new Error(`${superID}-${fid}: expects a ${superID}`);\n            }\n\n            let struct = args[0].value;\n\n            // hey, it's lookup again!\n            return struct.fields.reduce((acc, field) =>  {\n                if (acc !== undefined) {\n                    return acc;\n                } else if (field.id === fid) {\n                    //console.log(field);\n                    return field.binding;\n                } else {\n                    return undefined;\n                }\n            }, undefined);\n        }\n    ));\n\n    let extedEnv = [{name: `make-${superID}`, binding: {type:  RFUNCT_T,\n                                                        value: construct}},\n                    {name: `${superID}?`, binding: {type: RFUNCT_T,\n                                                    value: isID}},\n                    ...fieldExtractors.map((extract, i) => (\n                        {name: `${superID}-${fieldIDs[i]}`, binding: {type: RFUNCT_T,\n                                                                      value: extract}}\n                    ))];\n\n    return [...env, ...extedEnv];\n}\n\n/**\n * Type Checking Functions\n * so I don't have to do prog.type === RTYPE_T all the time\n */\n\nfunction isRVAR (prog) {\n    return prog.type === RVAR_T;\n}\nfunction isRAPP (prog) {\n    return prog.type === RAPP_T;\n}\nfunction isRFUNCT (prog) {\n    return prog.type === RFUNCT_T;\n}\nfunction isRNUM (prog) {\n    return prog.type === RNUM_T;\n}\nfunction isRBOOL (prog) {\n    return prog.type === RBOOL_T;\n}\nfunction isRSTRING (prog) {\n    return prog.type === RSTRING_T;\n}\nfunction isRLIST (prog) {\n    return prog.type === RLIST_T;\n}\nfunction isRSYM (prog) {\n    return prog.type === RSYM_T;\n}\nfunction isRIMAGE (prog) {\n    return prog.type === RIMAGE_T;\n}\nfunction isRCOLOR (prog) {\n    return prog.type === RCOLOR_T;\n}\nfunction isRIF (prog) {\n    return prog.type === RIF_T;\n}\nfunction isRSTRUCT (prog) {\n    return prog.type === RSTRUCT_T;\n}\n\n/************************************\n * Functions in initial Environment *\n ************************************/\n\nfunction plus(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction add1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value + 1,\n            type: RNUM_T};\n}\nfunction minus(args) {\n    if (args.length < 1) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        return {value: 0 - args[0].value,\n                type: RNUM_T};\n    }\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value - arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction sub1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value - 1,\n            type: RNUM_T};\n}\nfunction times(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value * arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction divide(args) {\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        let firstArg = args[0];\n\n        typeCheck(firstArg, [RNUM_T]);\n\n        return {value: 1 / firstArg.value,\n                type: RNUM_T};\n    } else if (args.length === 2) {\n        let firstArg = args[0];\n        let secondArg = args[1];\n\n        typeCheck(firstArg, [RNUM_T]);\n        typeCheck(secondArg, [RNUM_T]);\n\n        return {value: firstArg.value / secondArg.value,\n                type: RNUM_T};\n    }\n\n    return {value: false, type: RBOOL_T};\n}\nfunction car(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    return firstArg.value.a;\n}\nfunction cdr(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    return firstArg.value.d;\n}\nfunction cons(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    // because BSL\n    typeCheck(secondArg, [RLIST_T]);\n\n    return {value: {a: firstArg, d: secondArg},\n            type: RLIST_T};\n}\nfunction list(args) {\n    // this indentation is pretty jank\n    return args.reverse().reduce((acc, arg) => (\n        {value: {a: arg, d: acc},\n         type: RLIST_T}),\n                                 {value: null,\n                                  type: RLIST_T});\n}\nfunction not(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === false,\n            type: RBOOL_T};\n}\nfunction iseqv(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    return {value: firstArg.value === secondArg.value,\n            type: RBOOL_T};\n}\nfunction and(args) {\n    return args.reduce((acc, cur) => {\n        return acc.value !== false ? cur : {value: false, type: RBOOL_T};\n    }, {value: true, type: RBOOL_T});\n\n} function or(args) {return args.reduce((acc, cur) => {\n        return acc.value !== false ? acc : cur;\n    }, {value: true, type: RBOOL_T});\n\n}\nfunction isnull(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction iscons(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value !== null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction equalsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value===cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gtsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value > cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value >= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction ltsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value < cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction lesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value <= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction isstrequal(args) {\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    let value = args.map((arg) => arg.value).reduce((acc, val) => {\n\n        if (acc === false) {\n            return false;\n        }\n\n        return acc === val ? acc : false;\n    });\n\n    if (value !== false) {\n        return {value: true, type: RBOOL_T};\n    } else {\n        return {value, type: RBOOL_T};\n    }\n}\nfunction stringLength(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RSTRING_T]);\n\n    return {value: firstArg.value.length,\n            type: RNUM_T};\n}\nfunction stringAppend(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RSTRING_T}\n    ));\n}\nfunction circle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeCircle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction rectangle(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(fourthArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction square(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction triangle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeEquiTriangle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction beside(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction besideAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction above(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction aboveAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlay(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlayAlign(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let restArgs = args.slice(2);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    typeCheck(secondArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(restArgs.map((arg) => arg.value), firstArg.value, secondArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction placeImage(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let img = args[0];\n    let x = args[1];\n    let y = args[2];\n    let scene = args[3];\n\n    typeCheck(img, [RIMAGE_T]);\n    typeCheck(x, [RNUM_T]);\n    typeCheck(y, [RNUM_T]);\n    typeCheck(scene, [RIMAGE_T]);\n\n    let value = makePlace(img.value, x.value, y.value, scene.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction empty_Scene(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n\n    let value;\n    if (thirdArg !== undefined) {\n        typeCheck(thirdArg, [RCOLOR_T, RSTRING_T, RSYM_T]);\n        value = emptyScene(firstArg.value, secondArg.value, thirdArg.value);\n    } else {\n        value = emptyScene(firstArg.value, secondArg.value);\n    }\n\n    return {value, type: RIMAGE_T};\n}\nfunction color(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T]);\n\n    let value;\n    if (fourthArg !== undefined) {\n        typeCheck(fourthArg, [RNUM_T]);\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n    } else {\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value);\n    }\n\n    return {value, type: RCOLOR_T};\n}\n\nexport {interp, parseCheck, initEnv, parsePrefix, interpPrefix,\n        isRVAR, isRAPP, isRFUNCT, isRNUM, isRBOOL, isRSTRING, isRLIST, isRSYM, isRIMAGE, isRCOLOR, isRIF, isRSTRUCT,\n        RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T, RIMAGE_T, RCOLOR_T, RIF_T,\n        unparse_cons, unparse_list,\n        varRE};\n","import {isRBOOL} from './interpreter.js';\n\n/************\n    Colors\n************/\n\n// value to put in child formulas that don't have an output for that row\nexport const gray = {gray: 'gray'};\n// value to put in child formulas that have an error output for that row (non-boolean and non-gray)\nexport const pink = {pink: 'pink'};\n// value that indicates an uninitialized input\nexport const yellow = {yellow: 'yellow'};\n\n/*********************\n   Functions I Want\n*********************/\n// [Program] -> Boolean\n// returns true if progs has at least one member and all of its members are boooleans\n//    otherwise returns false\nexport function allBools(progs){\n    if (progs.length === 0 || progs.every((prog) => prog === gray)) {\n        return false;\n    }\n\n    return progs.every((prog) => prog === gray || isRBOOL(prog));\n}\n\nexport function isBooleanFormula(formula) {\n    return allBools(formula.outputs) || formula.thenChildren !== undefined;\n}\n\n","import {yellow, isBooleanFormula} from './header.js';\nimport {RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T} from './interpreter.js';\n\n/*********************\n    Pretty Printer\n*********************/\n\n/***\n    Data Definitions\n\n    a DOC is one of\n    - NIL\n    - TEXT\n    - LINE\n\n    A NIL is\n    () => {type: 'NIL'}\n\n    A TEXT is\n    () => {type: 'TEXT',\n    text: String,\n    rest: DOC}\n\n    A LINE is\n    () => {type: 'LINE',\n    indent: Integer,\n    rest: DOC}\n\n    A Doc is one of\n    - Nil\n    - Concat\n    - Nest\n    - Text\n    - Line\n    - Union\n\n    A Nil is\n    {type: 'nil'}\n    A Nest is\n    {type:   'nest',\n    indent: Integer,\n    rest:   Doc}\n\n    A Text is\n    {type: 'text',\n    text: String}\n\n    A Line is\n    {type: 'line'}\n\n    A Concat is\n    {type: 'concat',\n    left: Doc,\n    right: () => Doc}\n\n    A Union is\n    {type:  'union',\n    left:  Doc,\n    right: () => Doc}\n\n    A Pair is\n    {doc:    Doc,\n    indent: Integer}\n***/\n\n// DOC\nconst NIL = () => ({type: 'NIL'});\n\n// Doc\nconst nil = {type: 'nil'};\n\n// String -> Doc\nfunction text (string) {\n    if (string === '') {\n        return nil;\n    } else {\n        return {type: 'text', text: String(string)};\n    }\n}\n\n// Doc\nconst line = {type: 'line'};\n\n// Doc, () => Doc -> Doc\nfunction union (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    return {type: 'union', left: docL, right: docR};\n}\n\n// Doc, () => Doc -> Doc\nfunction concat (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    // switch(docR.type) {\n    // case 'union':\n    //     return union(concat(docL, docR.left), concat(docL, docR.right));\n    // default:\n    //     break;\n    // }\n    switch (docL.type) {\n        case 'nil':\n            return docR();\n        case 'concat':\n            return {type: 'concat', left: docL.left, right: () => concat(docL.right(), docR)};\n        case 'union':\n            return union(concat(docL.left, docR), () => concat(docL.right(), docR));\n        default:\n            return {type: 'concat', left: docL, right: docR};\n    }\n}\n\n// Integer -> Doc\nfunction nest (i, doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(nest(i, doc.left), () => nest(i, doc.right()));\n        case 'nest':\n            return {type: 'nest', indent: doc.indent + i, rest: doc.rest};\n        case 'text':\n            return doc;\n        case 'line':\n            return {type: 'nest', indent: i, rest: doc};\n        case 'union':\n            return union(nest(i, doc.left), () => nest(i, doc.right()));\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// DOC -> String\nfunction layout (thunk) {\n\n    let doc = thunk();\n\n    switch (doc.type) {\n        case 'NIL':\n            return '';\n        case 'TEXT':\n            return doc.text + layout(doc.rest);\n        case 'LINE':\n            return '\\n' + ' '.repeat(doc.indent) + layout(doc.rest);\n        default:\n            throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n    }\n}\n\n// Doc -> Doc\nfunction group (doc) {\n    return union(flatten(doc), () => doc);\n}\n\n// Doc -> Doc\nfunction flatten (doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(flatten(doc.left), () => flatten(doc.right()));\n        case 'nest':\n            return flatten(doc.rest);\n        case 'text':\n            return doc;\n        case 'line':\n            return text(' ');\n        case 'union':\n            return flatten(doc.left);\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// Integer, Integer -> (Doc -> String)\nfunction makePretty (width, ribbon) {\n\n    // Integer, Integer, Doc -> DOC\n    function best (thisRibbon, current, doc) {\n        return be(thisRibbon, current, [{indent: 0, doc: doc}]);\n    }\n\n    // DOC -> DOC\n    function memoize(thunk) {\n        let seen = false;\n        let value;\n\n        return () => {\n            if (seen) {\n                return value;\n            } else {\n                seen = true;\n                value = thunk();\n                return value;\n            }\n        };\n    }\n\n    // Integer, Integer, [Pair] -> DOC\n    function be (r, k, pairs) {\n        if (pairs.length === 0) {\n            return NIL;\n        }\n\n        let doc = pairs[0].doc;\n        let indent = pairs[0].indent;\n        let rest = pairs.slice(1);\n\n        switch (doc.type) {\n            case 'nil':\n                return be(r, k, rest);\n            case 'concat':\n                return be(r, k, [{indent, doc: doc.left}, {indent, doc: doc.right()}, ...rest]);\n            case 'nest':\n                return be(r, k, [{indent: indent + doc.indent, doc: doc.rest}, ...rest]);\n            case 'text':\n                if (doc.text === '') {\n                    return NIL;\n                } else {\n                    return memoize(() => ({type: 'TEXT', text: doc.text, rest: memoize(() => (be(r, k + doc.text.length, rest)()))}));\n                }\n            case 'line':\n                return memoize(() => ({type: 'LINE', indent: indent, rest: memoize(() => (be(r + indent, indent, rest)()))}));\n            case 'union':\n                return better(r, k, be(r, k, [{indent, doc: doc.left}, ...rest]),\n                                    memoize(() => (be(r, k, [{indent, doc: doc.right()}, ...rest])())));\n            default:\n                console.log(doc());\n                throw Error(`unnexpected document type: ${doc.type}`);\n        }\n    }\n\n    // Integer, Integer, Integer, DOC, DOC -> DOC\n    function better (thisRibbon, current, docL, docR) {\n        if (fits(width - current, thisRibbon - current, docL)) {\n            return docL;\n        } else {\n            return docR;\n        }\n    }\n\n    // Integer, Integer, DOC -> Boolean\n    function fits(diffWidth, diffRibbon, thunk) {\n        if (diffWidth < 0 || diffRibbon < 0) {\n            return false;\n        }\n\n        let doc = thunk();\n\n        switch (doc.type) {\n            case 'NIL':\n                return true;\n            case 'TEXT':\n                return fits(diffWidth - doc.text.length, diffRibbon - doc.text.length, doc.rest);\n            case 'LINE':\n                return true;\n            default:\n                throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n        }\n    }\n\n    function pretty (doc) {\n        return layout(best(ribbon, 0, doc));\n    }\n\n    return pretty;\n}\n\n/***\n    Utility Functions\n***/\n\n// Doc, Doc -> Doc\nfunction putSpace (docL, docR) {\n    return concat(docL, () => concat(text(' '), () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction putLine (docL, docR) {\n    return concat(docL, () => concat(line, () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction compose (docL, docR) {\n    return concat(docL, () => docR);\n}\n\n// (Doc -> Doc -> Doc), [Doc] -> Doc\nfunction folddoc (f, docs) {\n    if (docs.length === 0) {\n        return nil;\n    } else if (docs.length === 1) {\n        return docs[0];\n    } else {\n        return f(docs[0], folddoc(f, docs.slice(1)));\n    }\n}\n\n// [Doc] -> Doc\n// puts a space between docs\nfunction spread (docs) {\n    return folddoc(putSpace, docs);\n}\n\n// [Doc] -> Doc\n// puts a line between docs\nfunction stack (docs) {\n    return folddoc(putLine, docs);\n}\n\n// [Doc] -> Doc\n// puts docs right next to eachother\nfunction level (docs) {\n    return folddoc(compose, docs);\n}\n\n// String -> Doc -> String -> Doc\n// puts the given document between left and right\nfunction bracket (left, doc, right) {\n    return level([text(left), doc, text(right)]);\n}\n\n/**************************************\n    Thing that Turns Tables Into BSL\n**************************************/\n\n// Program -> Doc\nfunction progToDoc_cons (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_cons(program.value.funct), ...program.value.args.map(progToDoc_cons)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T: // this just does cons, not list\n            if (program.value === null) {\n                return text(\"'()\");\n            } else {\n                return nest(1, bracket('(', group(stack([text('cons'), progToDoc_cons(program.value.a), progToDoc_cons(program.value.d)])), ')'));\n            }\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// Program -> Doc\nfunction progToDoc_list (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_list(program.value.funct), ...program.value.args.map(progToDoc_list)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T:\n            if (program.value === null) {\n                return text(\"'()\");\n            }\n\n            let list = program.value.d,\n                elems = progToDoc_list(program.value.a);\n            while (list.value !== null) {\n                elems = stack([elems, progToDoc_list(list.value.a)]);\n                list = list.value.d;\n            }\n\n            return bracket('(', spread([text('list'), group(elems)]), ')');\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// [Table] -> String\nfunction toBSL(tables, listOrCons, width, ribbon) {\n    // TODO make me work better somehow\n    let progToDoc;\n    if (listOrCons === 'cons') {\n        progToDoc = progToDoc_cons;\n    } else {\n        progToDoc = progToDoc_list;\n    }\n\n    let pretty = makePretty(width, ribbon);\n    let tableBSLs = tables.map((table) => tableToString(table)).join('\\n\\n');\n    return tableBSLs;\n\n    // Table -> Doc\n    function tableToString(table) {\n        let name = fieldToDoc(table.name);\n        let sig = fieldToDoc(table.signature);\n        let purp = fieldToDoc(table.purpose);\n        let params = spread(table.params.map((param) => fieldToDoc(param.name)));\n\n        let checkExpects = table.examples.map((example) => {\n            let inputs = stack(example.inputs.map((input) => fieldToDoc(input.prog)));\n            let want = fieldToDoc(example.want);\n\n            return pretty(nest(1, bracket('(', group(stack([text('check-expect'), bracket('(', nest(1, stack([name, inputs])), ')'), want])), ')')));\n        }).join('\\n');\n\n        let body = formulasToDoc(table.formulas);\n\n        let signature = pretty(spread([text(';;'), name, text(':'), sig]));\n        let purpose = pretty(spread([text(';;'), purp]));\n        let funct = pretty(nest(2, bracket('(', spread([text('define'), stack([bracket('(', spread([name, params]), ')'), body])]), ')')));\n\n        return [signature, purpose, funct, '', checkExpects].join('\\n');\n    }\n\n    // [Formula] -> Doc\n    function formulasToDoc(formulas) {\n        // [Formula] -> {bools: [Formula], nonbools: [Formula]}\n        function splitFormulas(formulas) {\n            let bools = formulas.filter(isBooleanFormula);\n            let nonbools = formulas.filter((formula) => !isBooleanFormula(formula));\n            return {bools, nonbools};\n        }\n\n        let splitForms = splitFormulas(formulas);\n\n        // this one's a doc\n        let nonbools = stack(splitForms.nonbools.map((form) => fieldToDoc(form.prog))),\n            bools;\n\n        if (splitForms.bools.length !== 0) {\n            // this is an array of documents\n            let condRows = splitForms.bools.map((form) => (\n                nest(1, bracket('[', stack([fieldToDoc(form.prog), formulasToDoc(form.thenChildren)]),']'))\n            ));\n            // this one is just a doc\n            bools = nest(2, bracket('(', stack([text('cond'), ...condRows]),')'));\n        }\n\n        if (splitForms.bools.length !== 0 && splitForms.nonbools.length !== 0) {\n            return stack([bools, nonbools]);\n        } else if (splitForms.bools.length !== 0) {\n            return bools;\n        } else if (splitForms.nonbools.length !== 0) {\n            return nonbools;\n        } else {\n            return nil;\n        }\n    }\n\n    // Field (yellow or string or program) -> Doc\n    function fieldToDoc(input) {\n        if (input === yellow) {                 // empty\n            return text('...');\n        } else if (typeof input === 'string') { // name\n            return text(input);\n        } else {                                // program\n            return progToDoc(input);\n        }\n    }\n}\n\n/****************\n    Unparsers\n****************/\nconst widePretty = makePretty(Infinity, Infinity);\n\nexport let unparse_cons = (prog) => widePretty(progToDoc_cons(prog));\nexport let unparse_list = (prog) => widePretty(progToDoc_list(prog));\n\nexport default toBSL;\n","// Number String -> (String -> Side Effect)\nfunction makeSendifier (delay, sessionID) {\n    const url = \"http://107.170.76.216:8000/log/session\" + sessionID;\n    let item = false;\n\n    function setItem (news) {\n        item = news;\n    }\n\n    function sendItem () {\n        if (item) {\n            const sent = item;\n            fetch(url, { method: 'POST', // or 'PUT'\n                         body: sent, // data can be `string` or {object}!\n                         mode: 'no-cors',\n                         headers: { 'Content-Type': 'application/json' } })\n            .then(function () {\n                      setTimeout(sendItem, delay);\n                  },\n                  function () {\n                      if (!item) item = sent;\n                      setTimeout(sendItem, delay);\n                  });\n            item = false;\n        } else {\n            setTimeout(sendItem, delay);\n        }\n    }\n\n    sendItem();\n\n    return setItem;\n}\n\nexport default makeSendifier;\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport {interp, parseCheck, parsePrefix, interpPrefix, unparse_cons, unparse_list, initEnv, isRAPP, RFUNCT_T, isRLIST, isRIMAGE, isRBOOL, isRSTRUCT} from './interpreter.js';\nimport {gray, pink, yellow, allBools, isBooleanFormula} from './header.js';\nimport {paint, width, height, makeRectangle, makeOverlay} from './image.js';\nimport toBSL from './prettyprint.js';\nimport makeSendifier from './sendifier.js';\nimport Octicon, {Trashcan, Alert, Check} from '@primer/octicons-react';\nimport './App.css';\n\n/*****************************\n  Universal Constants I Want\n*****************************/\n// value to indicate a dry run, i.e. don't actually change the underlying structure, just say\n// if the given value exists or not\nconst dryRun = {yo: 'don\\'t actually change anything'};\n// this one's different because it has a $ at the end so it tests\n// the string until the end\nconst varRE = /^[^\\s\",'`()[\\]{}|;#]+$/; // except numbers\n\n\n/*********************\n    Key Management\n*********************/\n// variable used by takeKey and peekKey to generate keys\nlet keyCount = 0;\n\n// Number\n// returns a unique key\nfunction takeKey() {\n    return keyCount++;\n}\n\n// [Number] -> Number (the brackets here mean optional, not array)\n// returns current key without changing it\n// shoud be used to look at current state of key without actually taking it\n// optionally takes a number as an argument, in which case it returns the key that number\n// of steps ahead of the current key\nfunction peekKey(lookahead = 0) {\n    return keyCount + lookahead;\n}\n\n/**************\n    Globals\n**************/\n// TODO: maybe get rid of these?\nlet unparse = unparse_cons;\nlet listOrCons = 'cons';\nlet globalEnv = initEnv;\n\n/*****************\n    Deep Equals\n*****************/\n// Program -> Program -> Boolean\n// checks if two programs are equivalent, recurs on lists and applications\n// may not quite work on functions because I use js functions, not data represented closures or something\n//    thus 2 functions are only equal if they're a reference to the same object\n// maybe move this to interpreter.js?\nfunction deepEquals(proga, progb) {\n    if (proga.type !== progb.type) {\n        return false;\n    }\n\n    if (isRLIST(proga)) {\n        if (proga.value === null || progb.value === null) {\n            return proga.value === progb.value;\n        }\n        return deepEquals(proga.value.a, progb.value.a) && deepEquals(proga.value.d, progb.value.d);\n    }\n\n    // this case will prolly never even happen...\n    if (isRAPP(proga)) {\n        if (proga.value.args.length !== progb.value.args.length) {\n            return false;\n        }\n        let functCheck = deepEquals(proga.value.funct, progb.value.funct);\n        let argCheck = proga.value.args.map((arga, i) => deepEquals(arga, progb.value.args[i])).every((elem) => elem);\n        return functCheck && argCheck;\n    }\n\n    if (isRSTRUCT(proga)) {\n        let structa = proga.value;\n        let structb = progb.value;\n\n        let idSame = structa.id === structb.id;\n\n        let fieldsSame;\n        if (structa.fields.length === structb.fields.length) {\n            fieldsSame = structa.fields.every((fielda, i) => deepEquals(fielda.binding, structb.fields[i].binding));\n        } else {\n            fieldsSame = false;\n        }\n\n        return idSame && fieldsSame;\n    }\n\n    if (isRIMAGE(proga)) {\n        // Image -> Uint8ClampedArray\n        // takes an image and returns an array containing RGBA values of all pixels in the image\n        // a lot of this was taken from https://stackoverflow.com/questions/3768565/drawing-an-svg-file-on-a-html5-canvas\n        // sometimes this doesn't work...\n        //   - when it is first used in a certain instance of the table method, it returns an array containing only zeros,\n        //     however, after this I'm pretty sure it returns the array it should be returning\n        //   - maybe something hasn't been properly initialized by the first time around?\n        function toRGBAArray (image) {\n            let can = document.createElement('canvas');\n            can.width = width(image);\n            can.height = height(image);\n            let ctx = can.getContext('2d');\n            let svg = paint(image);\n\n            // pretty much just turns the jsx into a string\n            let xml = ReactDOMServer.renderToString(svg);\n\n            // make the xml base 64 for some reason (I dunno why)\n\n\n            let svg64 = btoa(xml);\n            // header that does stuff I guess\n            let b64Start = 'data:image/svg+xml;base64,';\n\n            // prepend a the header to the xml data\n            let image64 = b64Start + svg64;\n\n            // make image that contains the xml data so we can draw it\n            let img = document.createElement('img');\n            //console.log(img);\n            img.src = image64;\n\n            // draw the image onto the canvas\n            ctx.drawImage(img, 0, 0);\n\n            return ctx.getImageData(0, 0, width(image), height(image)).data;\n        }\n\n        let imgA = proga.value;\n        let imgB = progb.value\n\n        let dataA_red = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'red')]));\n        let dataA_green = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'green')]));\n\n        let dataB_red = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'red')]));\n        let dataB_green = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'green')]));\n\n        if (width(imgA) !== width(imgB) || height(imgA) !== height(imgB)) { // images have different dimensions\n            return false;\n        }\n\n        let redSame = dataA_red.every((datumA_red, i) => datumA_red === dataB_red[i]);\n        let greenSame = dataA_green.every((datumA_green, i) => datumA_green === dataB_green[i]);\n\n        return redSame && greenSame;\n    }\n\n    return proga.value === progb.value;\n}\n\n/****************************************\n * Thing That Sends Stuff Out To Server *\n ****************************************/\n\n// this isn't in document.onload or something but hopefully it works anyways\n// if a window.onload function is defined in this file, it doesn't seem to\n// get excecuted\nconst sessionID = Math.floor(Math.random() * 1000000000);\nlet tellBigBrother = makeSendifier(3000, sessionID);\n\n/*********************\n   React Components\n*********************/\n\n// it's a picture of a colon\nfunction Colon (props) {\n    return (\n        <div className='colon'>:</div>\n    );\n}\n\n// It's an error message (oh no!)\nfunction ErrorMessage (props) {\n    return (\n        <div>\n          {props.error.message}\n          <div title={\"Oh no! You got an error!\"} className=\"alert\">\n            <Octicon\n              icon={Alert} size=\"small\" verticalAlign=\"middle\"\n              ariaLabel='Error!'/>\n          </div>\n        </div>\n    );\n}\n\n/*** Buttons ***/\n// Button that probably removes something\nfunction RemButton(props){\n    return (\n        <div className='remove'\n             onClick={props.onClick}\n             title={props.title}>\n          <Octicon\n            icon={Trashcan} size=\"small\" verticalAlign=\"middle\"\n            ariaLabel='Remove'/>\n        </div>\n    );\n}\n\n/*** Inputs ***/\nclass ValidatedInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        let text = e.target.value;\n\n        this.setState((state) => ({text}));\n\n        if (this.props.isValid(text)) {\n            this.props.onValid(text);\n        } else if (text === '' && !this.props.dummy) {\n            this.props.onEmpty();\n        }\n    }\n\n    render() {\n        let className;\n        if (this.props.dummy && this.state.text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(this.state.text)) { // valid\n            className = 'valid_input';\n        } else if (this.state.text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n        \n        let size;\n        if (this.state.text.length === 0)\n            size = this.props.placeholder.length;\n        else\n            size = Math.max(this.state.text.length + 2, 4);\n\n        return (\n            <input\n              className={className}\n              size={size}\n              placeholder={this.props.placeholder}\n              type={'text'}\n              value={this.state.text}\n              onChange={this.textChange}\n            />\n        );\n    }\n}\n\nclass ValidatedArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        let text = e.target.value;\n\n        this.setState((state) => ({text}));\n\n        if (this.props.isValid(text)) {\n            this.props.onValid(text);\n        } else if (text === '' && !this.props.dummy) {\n            this.props.onEmpty();\n        }\n    }\n\n    render() {\n        let className;\n        if (this.props.dummy && this.state.text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(this.state.text)) { // valid\n            className = 'valid_input';\n        } else if (this.state.text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n\n        let rows,\n            newlines = this.state.text.match(/\\n/g);\n        if (newlines === null) {\n            rows = 1;\n        } else {\n            rows = newlines.length + 1;\n        }\n\n        let cols;\n        if (this.state.text.length === 0)\n            cols = this.props.placeholder.length;\n        else\n            cols = Math.max(...this.state.text.split('\\n').map((line) => line.length + 1), 4);\n\n        return (\n            <textarea\n              className={className + ' validated_area'}\n              rows={rows}\n              cols={cols}\n              placeholder={this.props.placeholder}\n              onChange={this.textChange}\n              spellCheck={false}\n              value={this.state.text}\n            />\n        );\n    }\n}\n\n/*** Table Sections ***/\n// let's put everything in one table woo\nfunction Succinct(props) {\n\n    function tableChange(newTab, oldTab) {\n        const exists = props.tables.indexOf(oldTab) !== -1;\n\n        let alteredTabs;\n        if (exists) {\n            alteredTabs = props.tables.map((table) => table === oldTab ? newTab : table);\n        } else {\n            alteredTabs = [...props.tables, newTab];\n        }\n\n        props.programChange(alteredTabs);\n    }\n\n    function remTable(deadTab) {\n        let aliveTabs = props.tables.filter((table) => table !== deadTab);\n        props.programChange(aliveTabs);\n    }\n\n    // String -> Boolean\n    function validName(text, modTab) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        let tableVars = props.tables.filter((table) => table !== modTab).map((otherTab) => ({name: otherTab.name, binding: null}));\n        let paramVars = modTab.params.map((param) => ({name: param, binding: null}));\n        let env = [...globalEnv, ...tableVars, ...paramVars];\n\n        return varRE.test(text) && !inEnv(text, env);\n    }\n\n    // TODO make more sophisticated parser that can handle functions as parameters in signature\n    function validSignature(text, modTab) {\n        let sides = text.split(/\\s+->\\s+/g);\n\n        if (sides.length !== 2) {\n            return false;\n        }\n\n        let paramTypes = sides[0].match(/[a-zA-Z]+/g);\n        let outType = sides[1].match(/[a-zA-Z]+/g);\n\n        let noNull = paramTypes !== null && outType !== null;\n\n        return noNull && paramTypes.length === modTab.params.length && outType.length === 1;\n    }\n\n    const reals = props.tables.map((table) => (\n        <div key={table.key} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Table Name'\n                isValid={(text) => validName(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                name: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            name: yellow},\n                                           table)}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Signature'\n                isValid={(text) => validSignature(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                signature: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            signature: yellow},\n                                           table)}\n              />\n              <RemButton\n                onClick={() => remTable(table)}\n                title='Remove this table'\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Purpose'\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({...table,\n                                                purpose: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            purpose: yellow},\n                                           table)}\n              />\n            </div>\n            <SuccinctTab\n              table={table}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, table)}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    ));\n\n    const dummy = (\n        <div key={peekKey()} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Table Name'\n                isValid={(text) => validName(text, {params: []})}\n                onValid={(text) => tableChange({name: text,\n                                                signature: yellow,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Signature'\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: text,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Purpose'\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: yellow,\n                                                purpose: text,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <SuccinctTab\n              table={{name: yellow,\n                      signature: yellow,\n                      purpose: yellow,\n                      examples: [],\n                      formulas: [],\n                      params: [],\n                      key: peekKey()}}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, {})}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    );\n\n    return (\n        <div>\n          {[...reals, dummy]}\n        </div>\n    );\n}\n\nfunction SuccinctTab(props) {\n    function paramsExamplesChange(params, examples) {\n        props.tableChange({...props.table, params, examples});\n    }\n\n    function formulasChange(formulas) {\n        props.tableChange({...props.table, formulas});\n    }\n\n    function examplesFormulasChange(examples, formulas) {\n        props.tableChange({...props.table, examples, formulas});\n    }\n\n    return (\n        <table className={'grow'}>\n          <SuccinctHead\n            params={props.table.params}\n            examples={props.table.examples}\n            tableNames={props.tableNames}\n            paramsExamplesChange={paramsExamplesChange}\n\n            formulas={props.table.formulas}\n            formulasChange={formulasChange}\n          />\n          <SuccinctBody\n            examples={props.table.examples}\n            formulas={props.table.formulas}\n            paramNames={props.table.params.map((param) => param.name)}\n            examplesFormulasChange={examplesFormulasChange}\n            formulasChange={formulasChange}\n          />\n        </table>\n    );\n}\n\nfunction SuccinctHead(props) {\n    // String -> Boolean\n    // checks if the given string is a valid program\n    function validProg(text) {\n        let isgood = true;\n\n        try {\n            parseCheck(text);\n        } catch(e) {\n            if (e instanceof SyntaxError) {\n                isgood = false;\n            } else { // this should never happen\n                throw e;\n            }\n        }\n\n        return isgood;\n    }\n\n    // Formula -> Side Effect\n    // removes a given formula from the tree\n    function remFormula(deadForm) {\n        const aliveForms = props.formulas.filter((formula) => formula !== deadForm);\n        props.formulasChange(aliveForms);\n    }\n\n    // Formula -> Formula -> Side Effect\n    // replaces one formula with another one\n    function formulaChange(newForm, oldForm) {\n\n        let alteredForms;\n        if (props.formulas.indexOf(oldForm) === -1) {\n            alteredForms = [...props.formulas, newForm];\n        } else {\n            alteredForms = props.formulas.map((form) => form === oldForm ? newForm : form);\n        }\n        props.formulasChange(alteredForms);\n    }\n\n    // Formula -> Number -> Number\n    // gives the maximum depth of a Formula, second parameter is an accumulator\n    function maxDepth(formula, curMax) {\n        if (!isBooleanFormula(formula)) {\n            return curMax;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => Math.max(acc, maxDepth(child, curMax + 1)), curMax + 1);\n        }\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    // Number -> [Number]\n    // takes a number, returns an array that counts from 1 to that number, input of 0 gives empty array\n    // e.g. countUp(5) -> [1, 2, 3, 4, 5]\n    function countUp(num) {\n        // special case: want an empty array for 0\n        if (num === 0) {\n            return [];\n        } else if (num === 1)\n            return [1];\n        else\n            return [...countUp(num - 1), num];\n    }\n\n    const abyss = props.formulas.reduce((acc, formula) => Math.max(acc, maxDepth(formula, 0)), 0);\n    const numParams = props.params.length;\n\n    const reals = props.formulas.map((formula) => (\n        <th key={formula.key} colSpan={countWidth(formula)} >\n          <div className='flex_horiz'>\n            <ValidatedArea\n              placeholder={'Formula'}\n              dummy={false}\n              isValid={validProg}\n              onValid={(text) => formulaChange({...formula,\n                                                prog: parseCheck(text)},\n                                               formula)}\n              onEmpty={() => formulaChange({...formula,\n                                            prog: yellow},\n                                           formula)}\n            />\n            <RemButton\n              title={'Remove this formula'}\n              onClick={() => remFormula(formula)}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()} colSpan={1}>\n          <div className='flex_horiz'>\n            <ValidatedArea\n              dummy={true}\n              placeholder='Formula'\n              isValid={validProg}\n              onValid={(text) => formulaChange({prog: parseCheck(text),\n                                                outputs: props.examples.map((_) => yellow),\n                                                key: takeKey()},\n                                               {})}\n            />\n          </div>\n        </th>\n    );\n\n    const children = countUp(abyss).map((depth) => (\n        <tr key={depth}>\n          <th colSpan={numParams + 2}>{/* empty cell to align with example RemButton and Parameters */}</th>\n          {props.formulas.map((formula) => (\n              <DepictFormula\n                key={formula.key}\n                formula={formula}\n                depth={depth}\n                numExamples={props.examples.length}\n                formulaChange={(newForm) => formulaChange(newForm, formula)}\n              />\n          ))}\n          {Array(depth).map((_, i) => (<th key={i}>{/* empty cell under some parent dummy formula */}</th>))}\n          <th>{/* empty cell above wants */}</th>\n        </tr>\n    ));\n\n    return (\n        <thead>\n          <tr>\n            <Parameters\n              params={props.params}\n              examples={props.examples}\n              tableNames={props.tableNames}\n              paramsExamplesChange={props.paramsExamplesChange}\n            />\n            {/* top level formulas */}\n            {[...reals, dummy, <th key={peekKey(1)}>{/* empty cell above wants */}</th>]}\n          </tr>\n          {/* rest of formulas */}\n          {children}\n        </thead>\n    );\n}\n\nfunction Parameters(props) {\n    function validParam(text, modParam) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        // These are not technically Variables, see note above\n        let paramVars = props.params.filter((param) => param !== modParam).map((param) => ({name: param.name, binding: null}));\n        let tableVars = props.tableNames.map((name) => ({name: name, binding: null}));\n        let env = [...globalEnv, ...tableVars, ...paramVars];\n\n        return varRE.test(text) && !inEnv(text, env);\n    }\n\n    function remParam(deadParam) {\n        const deadIndex = props.params.indexOf(deadParam);\n        const aliveParams = props.params.filter((param) => param !== deadParam);\n\n        // need to maintain #inputs = #params\n        const modExamples = props.examples.map((example => ({...example,\n                                                             inputs: example.inputs.filter((_, i) => i !== deadIndex)})));\n\n        props.paramsExamplesChange(aliveParams, modExamples);\n    }\n\n    // String, Number -> Side Effect\n    // changes the name of the given parameter\n    // if that parameter doesn't exist yet, it makes it\n    function paramChange(newParam, modParam) {\n\n        let alteredParams, alteredExamples;\n        if (props.params.indexOf(modParam) === -1) {\n            alteredParams = [...props.params, newParam];\n            // need to maintain #inputs = #params\n            alteredExamples = props.examples.map((example) => ({...example,\n                                                                inputs: [...example.inputs, {prog: yellow, key: takeKey()}]}));\n        } else {\n            alteredParams = props.params.map((param) => param === modParam ? newParam : param);\n            // examples don't actually change\n            alteredExamples = props.examples;\n        }\n\n        props.paramsExamplesChange(alteredParams, alteredExamples);\n    }\n\n    const reals = props.params.map((param) => (\n        <th key={param.key} >\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={false}\n              placeholder='Parameter'\n              isValid={(text) => validParam(text, param)}\n              onValid={(text) => paramChange({...param,\n                                              name: text},\n                                             param)}\n              onEmpty={() => paramChange({...param,\n                                          name: yellow},\n                                         param)}\n            />\n            <RemButton\n              title='Remove this parameter'\n              onClick={() => remParam(param)}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()}>\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={true}\n              placeholder='Parameter'\n              isValid={(text) => validParam(text, {})}\n              onValid={(text) => paramChange({name: text,\n                                              key: takeKey()},\n                                             {})}\n            />\n          </div>\n        </th>\n    );\n\n    return (\n        <React.Fragment>\n          <th>{/* empty cell to align with example RemButtons */}</th>\n          <React.Fragment>\n            {[...reals, dummy]}\n          </React.Fragment>\n        </React.Fragment>\n    );\n}\n\n/*\n  props: formula, depth, kill, formulaChange\n*/\nfunction DepictFormula(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // this is pretty macabre...\n    function remChild(deadChild) {\n        const aliveChildren = props.formula.thenChildren.filter((child) => child !== deadChild);\n        props.formulaChange({...props.formula, thenChildren: aliveChildren});\n    }\n\n    function childChange(newChild, modChild) {\n        let children;\n        if (props.formula.thenChildren.indexOf(modChild) === -1) {\n            children = [...props.formula.thenChildren, newChild];\n        } else {\n            children = props.formula.thenChildren.map((child) => child === modChild ? newChild : child);\n        }\n        props.formulaChange({...props.formula, thenChildren: children});\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.depth > 1) {\n        return (\n            <React.Fragment>\n              <th>{/* empty cell to align with parent input */}</th>\n              {isBooleanFormula(props.formula) ?\n               <React.Fragment>\n                 {props.formula.thenChildren.map((child) => (\n                     <DepictFormula\n                       key={child.key}\n                       formula={child}\n                       depth={props.depth - 1}\n                       numExamples={props.numExamples}\n                       formulaChange={(formula) => childChange(formula, child)}\n                     />))}\n                 <th>{/* empty cell to align with child input */}</th>\n               </React.Fragment>\n               : <script/> }\n            </React.Fragment>\n        );\n    } else {\n        if (isBooleanFormula(props.formula)) {\n            const reals = props.formula.thenChildren.map((child) => (\n                <th key={child.key} colSpan={countWidth(child)} >\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={false}\n                      placeholder={'Formula'}\n                      isValid={validProg}\n                      onValid={(text) => childChange({...child,\n                                                      prog: parseCheck(text)},\n                                                     child)}\n                      onEmpty={() => childChange({...child,\n                                                  prog: yellow},\n                                                 child)}\n                    />\n                    <RemButton\n                      title={'Remove this formula'}\n                      onClick={() => remChild(child)}\n                    />\n                  </div>\n                </th>\n            ));\n\n            const dummy = (\n                <th key={peekKey()} colSpan={1}>\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={true}\n                      placeholder='Formula'\n                      isValid={validProg}\n                      onValid={(text) => childChange({prog: parseCheck(text),\n                                                      outputs: Array(props.numExamples).fill(yellow),\n                                                      key: takeKey()},\n                                                     {})}\n                    />\n                  </div>\n                </th>\n            );\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                   <React.Fragment>\n                     {[...reals, dummy]}\n                   </React.Fragment>\n                </React.Fragment>\n            );\n        } else {\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction SuccinctBody(props) {\n    function remExample(deadExample) {\n        const deadIndex = props.examples.indexOf(deadExample);\n        // Formula -> Formula\n        // removes the output at deadIndex from the given formula and all of its children (if it has any) so stuff works\n        function removeOutputFromFormula(formula) {\n            let outputs = formula.outputs.filter((_, i) => i !== deadIndex);\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(removeOutputFromFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n\n        const aliveExamples = props.examples.filter((example) => example !== deadExample);\n        const alteredForms = props.formulas.map(removeOutputFromFormula);\n        props.examplesFormulasChange(aliveExamples, alteredForms);\n    }\n\n    function exampleChange(newExample, oldExample) {\n        const exists = props.examples.indexOf(oldExample) !== -1;\n\n        if (newExample === dryRun) {\n            return exists;\n        }\n\n        // Formula -> Formula\n        // adds an init output to the given formula and all of its children (if it has any) so stuff works\n        function addAnotherOutputToFormula(formula) {\n            let outputs = [...formula.outputs, yellow];\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(addAnotherOutputToFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n        let alteredExamples, alteredForms;\n        if (exists) {\n            alteredExamples = props.examples.map((example) => example === oldExample ? newExample : example);\n            alteredForms = props.formulas;\n        } else {\n            alteredExamples = [...props.examples, newExample];\n            alteredForms = props.formulas.map(addAnotherOutputToFormula);\n        }\n\n        props.examplesFormulasChange(alteredExamples, alteredForms);\n        return true; // this doesn't actually do anything\n    }\n\n    const reals = props.examples.map((example, i) => (\n          <tr key={example.key}>\n            <td>\n              <RemButton\n                onClick={() => remExample(example)}\n                title={'Remove this example'}\n              />\n            </td>\n            <Inputs\n              dummy={false}\n              inputs={example.inputs}\n              inputsChange={(inputs) => exampleChange({...example, inputs},\n                                                      example)}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              dummy={false}\n              formulas={props.formulas}\n              want={example.want}\n              row={i}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              dummy={false}\n              want={example.want}\n              wantChange={(want) => exampleChange({...example, want},\n                                                  example)}\n            />\n          </tr>\n    ));\n    \n    const dummy = (\n          <tr key={peekKey(props.paramNames.length)}>\n            <td>{/* empty cell to offset rembutton */}</td>\n            <Inputs\n              dummy={true}\n              inputs={props.paramNames.map((_, i) => ({key: peekKey(i)}))}\n              inputsChange={(inputs) => exampleChange({inputs,\n                                                       want: yellow,\n                                                       key: takeKey()},\n                                                      {})}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              dummy={true}\n              formulas={props.formulas}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              dummy={true}\n              wantChange={(want) => exampleChange({want,\n                                                   inputs: props.paramNames.map((_) => ({prog: yellow, key: takeKey()})),\n                                                   key: takeKey()},\n                                                  {})}\n            />\n          </tr>\n    );\n\n    return (\n        <tbody>\n          {[...reals, dummy]}\n        </tbody>\n    );\n}\n\nfunction Inputs(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    function inputChange(newInput, oldInput) {\n        let alteredInputs;\n        if (props.dummy) {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? {...newInput, key: takeKey()} : {prog: yellow, key: takeKey()});\n        } else {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? newInput : input);\n        }\n        props.inputsChange(alteredInputs);\n    }\n\n    // this looks awful...\n    let inputFields = props.inputs.map((input, i) => {\n        let error = <div/>;\n        if (props.dummy) {\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({prog: parseCheck(text)},\n                                                       input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        } else {\n            if (input.prog !== yellow) {\n                try {\n                    interp(input.prog, globalEnv);\n                } catch (e) {\n                    error = <ErrorMessage error={e}/>\n                }\n            }\n\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({...input,\n                                                        prog: parseCheck(text)},\n                                                       input)}\n                        onEmpty={() => inputChange({...input,\n                                                    prog: yellow},\n                                                   input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        }\n    });\n\n    return (\n        <React.Fragment>\n          {inputFields}\n        </React.Fragment>\n    );\n}\n\nfunction Outputs(props) {\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.dummy) {\n        return (\n            <React.Fragment>\n            {props.formulas.map((formula) => (\n                <td key={formula.key} colSpan={countWidth(formula)}>{/* empty cell */}</td>\n            ))}\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n              {props.formulas.map((formula) => (\n                  <React.Fragment key={formula.key}>\n                    <TestCell\n                      output={formula.outputs[props.row]}\n                      want={props.want}\n                    />\n                    {isBooleanFormula(formula) ?\n                     <React.Fragment>\n                       <Outputs\n                         formulas={formula.thenChildren}\n                         want={props.want}\n                         row={props.row}\n                       />\n                       <DummyCell\n                         parentOutput={formula.outputs[props.row]}\n                       />\n                     </React.Fragment>\n                     : <script/> }\n                  </React.Fragment>\n              ))}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction TestCell(props) {\n    let output = props.output;\n\n    if (output === gray) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    }\n\n    if (output === pink) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    }\n\n    if (output === yellow) {\n        return (\n            <td className={'yellow'}>\n            </td>\n        );\n    }\n\n    if (output instanceof Error) {\n        return <td><ErrorMessage error={output}/></td>\n    }\n\n    let want;\n    try {\n        want = interp(props.want, globalEnv);\n    } catch (e) {\n        want = yellow;\n    }\n\n    if (want !== yellow && deepEquals(output, want)) {\n        return (\n            <td className='output'>\n              {unparse(output)}\n              <div title={\"Yay! It's right!\"} className=\"check\">\n                <Octicon\n                  icon={Check} size=\"small\" verticalAlign=\"middle\"\n                  ariaLabel='Yay!'/>\n              </div>\n            </td>\n        )\n    } else {\n        return (\n            <td className='output'>\n              {unparse(output)}\n            </td>\n        );\n    }\n}\n\nfunction DummyCell (props) {\n    if (props.parentOutput === gray || props.parentOutput.value === false) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    } else if (props.parentOutput === pink || !isRBOOL(props.parentOutput)) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    } else {\n        return <td></td>;\n    }\n}\n\nfunction Want(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    let valueCell;\n    if (props.dummy || props.want === yellow) {\n        valueCell = <script/>;\n    } else {\n        try {\n            let evalWant = interp(props.want, globalEnv);\n            if (deepEquals(evalWant, props.want)) {\n                valueCell = <script/>;\n            } else {\n                valueCell = <td className='output'>{unparse(evalWant)}</td>;\n            }\n        } catch (e) {\n            valueCell = <td><ErrorMessage error={e}/></td>\n        }\n    }\n\n    return (\n        <React.Fragment>\n          <td>\n            <div className='flex_horiz'>\n              <ValidatedArea\n                dummy={props.dummy}\n                placeholder={'Want'}\n                isValid={validProg}\n                onValid={(text) => props.wantChange(parseCheck(text))}\n                onEmpty={() => props.wantChange(yellow)}\n              />\n            </div>\n          </td>\n          {valueCell}\n        </React.Fragment>\n    );\n}\n\nclass DefinitionsArea extends React.Component {\n    constructor (props) {\n        super(props);\n\n        let error = <div/>;\n        this.state = {error};\n\n        this.prefixChange = this.prefixChange.bind(this);\n    }\n\n    validPrefix (text) {\n        try {\n            parsePrefix(text);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    prefixChange (text) {\n        let error = <div/>;\n        try {\n            globalEnv = interpPrefix(parsePrefix(text), initEnv);\n        } catch (e) {\n            error = <ErrorMessage error={e}/>\n        }\n\n        this.setState((state) => ({error}));\n\n        this.props.programChange(this.props.tables);\n    }\n\n\n    render () {\n        return (\n            <div className='flex_horiz'>\n              <div className='flex_vert no_grow'>\n                <ValidatedArea\n                  dummy={false}\n                  placeholder='Definitions Area'\n                  isValid={this.validPrefix}\n                  onValid={this.prefixChange}\n                />\n                {this.state.error}\n              </div>\n              <div className='grow'>{/* div to prevent this stuff from growing across the screen */}</div>\n            </div>\n        );\n    }\n}\n\nclass BSLArea extends React.Component {\n    constructor (props) {\n        super(props);\n\n        let showBSL = false;\n        this.state = {showBSL};\n\n        this.toggleDisplay = this.toggleDisplay.bind(this);\n    }\n\n    toggleDisplay (e) {\n        this.setState((state) => ({showBSL: !state.showBSL}));\n    }\n\n    render () {\n\n        let bslArea;\n        if (this.state.showBSL) {\n            bslArea = (\n                <textarea\n                  className='bsl_field'\n                  rows={20}\n                  cols={70}\n                  readOnly={true}\n                  value={toBSL(this.props.tables, listOrCons, 70, 70)}\n                />\n            );\n        } else {\n            bslArea = <div/>;\n        }\n\n        return (\n            <div className='bsl_io'>\n              <div className='bsl_checkbox'>\n                <input\n                  type='checkbox'\n                  id='bsl_toggle'\n                  name='bsl_output'\n                  onChange={this.toggleDisplay}\n                />\n                <label htmlFor='bsl_toggle'>Show BSL Output</label>\n              </div>\n              {bslArea}\n            </div>\n        );\n\n    }\n}\n\n/*\n  notes:\n  #inputs === #params\n  #outputs === #examples\n  ---------------------\n  |#inputs !== #outputs| (well it can but not always)\n  ---------------------\n*/\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        let tables = [{examples: [{inputs: [{prog: yellow, key: takeKey()}], want: yellow, key: takeKey()}],\n                       formulas: [{prog: yellow, outputs: [yellow], key: takeKey()}],\n                       params: [{name: yellow, key: takeKey()}],\n                       name: yellow,\n                       signature: yellow,\n                       purpose: yellow,\n                       key: takeKey()}];\n        let snapshots = [tables];\n        this.state = {tables, snapshots};\n\n        this.programChange = this.programChange.bind(this);\n        this.render = this.render.bind(this);\n    }\n\n    calculate(program) {\n        function makeLookup(table) {\n            function lookup(args) {\n                if (args.length !== table.params.length) {\n                    throw new Error('Arity Mismatch, expected ' + table.params.length + ' argument' + (table.params.length === 1 ? '' : 's'));\n                }\n                let expr = table.examples.reduce((acc, example) => {\n\n                    if (acc !== undefined) {\n                        return acc;\n                    }\n\n                    // I have no idea what should happen if this is called on a table with no params\n                    if (example.inputs.every((input, i) => {\n                        if (input.prog === yellow) {\n                            return false;\n                        }\n                        let bool;\n                        try {\n                            bool = deepEquals(interp(input.prog, globalEnv), args[i]);\n                        } catch (e) {\n                            bool = false;\n                        }\n                        return bool;\n                    })) {\n                        if (example.want === yellow) {\n                            let e = new ReferenceError();\n                            // shoehorn a non-string into the message field\n                            e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) doesn't have a want</React.Fragment>;\n                            throw e;\n                        } else {\n                            // Note: don't need to catch exception here because it will be caught in calcFormula\n                            return interp(example.want, globalEnv);\n                        }\n                    }\n\n                    return undefined;\n                }, undefined);\n\n                if (expr === undefined) {\n                    // it's like a reference error in the super meta table language\n                    let e = new ReferenceError();\n                    // shoehorn a non-string into the message field\n                    e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) is not an example</React.Fragment>;\n                    throw e;\n                }\n\n                return expr;\n            }\n\n            return lookup;\n        }\n\n        let lookups = program.map((table) => ({name: table.name, binding: {value: makeLookup(table), type: RFUNCT_T}}));\n        let tableEnv = [...globalEnv, ...lookups];\n\n        function calcTable(table) {\n            function calcFormula(formula, examples) {\n                let outputs = examples.map((example) => {\n\n                    if (example === gray) {\n                        return gray;\n                    } if (example === pink) {\n                        return pink;\n                    } else if (!example.inputs.every((input) => input.prog !== yellow) || formula.prog === yellow) {\n                        // if any of the inputs or the formula isn't initialized, return yellow\n                        return yellow;\n                    }\n\n                    let error = false;\n                    try {\n                        example.inputs.map((input) => interp(input.prog, tableEnv));\n                    } catch (e) {\n                        error = true;\n                    }\n\n                    if (example === pink || error) {\n                        return pink;\n                    }\n\n                    let localEnv = table.params.map((param, i) => ({name: param.name, binding: interp(example.inputs[i].prog, tableEnv)}));\n                    let env = [...tableEnv, ...localEnv];\n\n                    let output;\n                    try {\n                        output = interp(formula.prog, env);\n                    } catch (e) {\n                        output = e;\n                    }\n\n                    return output;\n                });\n\n                if (allBools(outputs) || (formula.thenChildren !== undefined && formula.thenChildren.length !== 0)) {\n                    function maybeSpecial(example, output) {\n                        if (example === gray || output.value === false)\n                            return gray;\n                        else if (typeof output.value !== 'boolean')\n                            return pink;\n                        else\n                            return example;\n                    }\n\n                    if (formula.thenChildren === undefined) {\n                        var thenChildren = [];\n                    } else {\n                        let subExamples = examples.map((example, i) => maybeSpecial(example, outputs[i]));\n                        thenChildren = formula.thenChildren.map((formula) => calcFormula(formula, subExamples));\n                    }\n\n                    return {...formula,\n                            outputs,\n                            thenChildren};\n                } else {\n                    let newFormula = {...formula,\n                                      outputs};\n                    delete newFormula.thenChildren;\n                    return newFormula;\n                }\n            }\n\n            if (table.name === yellow || !table.params.every((param) => param.name !== yellow)) {\n                // if the table or any of the table's parameters don't have a name yet, freeze outputs\n                return {...table}; \n            } else {\n                let formulas = table.formulas.map((formula) => calcFormula(formula, table.examples));\n                return {...table,\n                        formulas};\n            }\n        }\n\n        return program.map(calcTable);\n    }\n\n    // React people say that this is unsafe (https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate)\n    // but it sends the ith list of snapshots to the server whereas the safe componentDidUpdate sends the i-1th\n    componentWillUpdate(_, nextState) {\n        // He's always watching...\n        tellBigBrother(JSON.stringify(nextState.snapshots));\n    }\n\n    programChange(newProg) {\n        let calkedProg = this.calculate(newProg);\n        //console.log(calkedProg);\n        //console.log('next key: ', peekKey());\n        this.setState((state) => {\n            return {tables: calkedProg,\n                    snapshots: [...state.snapshots, calkedProg]};\n        });\n    }\n\n    render(){\n        return (\n            <div>\n              <DefinitionsArea\n                tables={this.state.tables}\n                programChange={this.programChange}\n              />\n              <Succinct\n                tables={this.state.tables}\n                programChange={this.programChange}\n              />\n              <div className='language_select'>\n                <select\n                  defaultValue='cons'\n                  onChange={(e) => {\n                      if (e.target.value === 'cons'){\n                          listOrCons = 'cons';\n                          unparse = unparse_cons;\n                      } else {\n                          listOrCons = 'list';\n                          unparse = unparse_list;\n                      }\n                      // this just rerenders everything, the state remains unchanged\n                      this.setState((state) => state);\n                  }}\n                >\n                  <option value='cons'>Beginning Student</option>\n                  <option value='list'>Beginning Student with List Abbreviations</option>\n                </select>\n              </div>\n              <BSLArea\n                tables={this.state.tables}\n              />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n// The following line mitigates the problem that sometimes toRGBAArray returns\n// all-zeros.  Probably it doesn't completely fix #12.\ndocument.createElement('img');\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}