{"version":3,"sources":["image.js","interpreter.js","header.js","prettyprint.js","sendifier.js","App.js","serviceWorker.js","index.js"],"names":["colorDb","makeColor","r","g","b","a","Error","changeAlpha","color","checkDimension","maybeDimension","checkColor","maybeColor","replace","toUpperCase","undefined","checkMode","maybeMode","checkXPlace","maybeXPlace","checkYPlace","maybeYPlace","makeCircle","mode","type","makeRectangle","width","height","makeEquiTriangle","length","A","B","C","makeTriangle","makeBeside","images","yplace","makeAbove","xplace","makeOverlay","makePlace","image","x","y","scene","emptyScene","w","h","coordinates","map","coord","reduce","acc","Math","max","s","area","sqrt","round","render","red","green","blue","alpha","cx","cy","fill","stroke","strokeWidth","render_circle","render_rect","D","pow","c","points","render_triangle","cur","render_polygon","initY","yCorrect","make_list_renderer","dx","dy","renderoozle","render_beside","initX","xCorrect","render_above","render_overlay","render_place","xChange","yChange","render_list","first","rest","slice","paint","picture","viewBox","xmlns","key","random","RFUNCT_T","varRE","appRE","numRE","boolRE","strRE","quoteRE","symRE","listRE","initEnv","makeStruct","name","binding","value","args","forEach","arg","typeCheck","firstArg","secondArg","car","cdr","d","reverse","isnull","val","thirdArg","fourthArg","restArgs","img","parse","text","test","numStr","match","prog","trim","boolStr","toLowerCase","matches","substring","parseFunct","funct","app","parseArg","SyntaxError","tst","els","thn","parseQ","listArr","charAt","str","sym","parsePrefix","defStructRE","defineRE","nameRE","progs","parsed","parsePrefixExpr","openRE","superID","fieldClose","fieldOpen","fieldIDs","fieldID","closRE","parameters","param","body","interp","env","variable","ReferenceError","lookup","isRVAR","rator","rands","extedEnv","i","TypeError","interpPrefix","curEnv","closVar","def","makeDefine","unparse_cons","arr","id","fields","field","unparse_list","elems","parseCheck","types","includes","typesString","e","message","Fragment","numFields","fieldExtractors","fid","struct","extract","isRBOOL","gray","pink","yellow","allBools","every","isBooleanFormula","formula","outputs","thenChildren","NIL","nil","string","String","line","union","docL","docR","left","right","concat","nest","doc","indent","group","flatten","makePretty","ribbon","best","thisRibbon","current","be","k","pairs","memoize","fits","diffWidth","diffRibbon","thunk","better","console","log","seen","layout","repeat","putSpace","putLine","compose","folddoc","f","docs","spread","stack","bracket","progToDoc_cons","program","progToDoc_list","list","Infinity","toBSL","tables","listOrCons","progToDoc","pretty","table","fieldToDoc","sig","signature","purp","purpose","params","checkExpects","examples","example","inputs","input","want","join","formulasToDoc","formulas","bools","splitForms","filter","nonbools","splitFormulas","form","condRows","tableToString","sessionURL","sessionID","Sendifier","delay","this","url","item","sendItem","bind","clear","sent","fetch","method","JSON","stringify","headers","then","timerID","setTimeout","news","clearTimeout","dryRun","yo","keyCount","takeKey","peekKey","lookahead","unparse","unparse_to_string","deepEquals","proga","progb","isRAPP","functCheck","argCheck","arga","elem","isRSTRUCT","fieldsSame","structa","structb","idSame","fielda","isRIMAGE","toRGBAArray","can","document","createElement","ctx","getContext","svg","xml","ReactDOMServer","renderToString","image64","btoa","src","drawImage","getImageData","data","imgA","imgB","dataA_red","dataA_green","dataB_red","dataB_green","redSame","datumA_red","greenSame","datumA_green","Colon","props","className","ErrorMessage","error","title","icon","Alert","size","verticalAlign","ariaLabel","RemButton","onClick","Trashcan","ValidatedInput","state","textChange","target","setState","isValid","onValid","dummy","onEmpty","placeholder","onChange","React","Component","ValidatedArea","rows","cols","newlines","split","spellCheck","Succinct","tableChange","newTab","oldTab","alteredTabs","indexOf","programChange","validName","modTab","tableVars","otherTab","paramVars","globalEnv","inEnv","reals","disabled","sides","paramTypes","outType","validSignature","deadTab","aliveTabs","remTable","SuccinctTab","tableNames","formulasChange","SuccinctHead","paramsExamplesChange","SuccinctBody","paramNames","examplesFormulasChange","validProg","isgood","formulaChange","newForm","oldForm","alteredForms","countWidth","child","abyss","maxDepth","curMax","numParams","colSpan","deadForm","aliveForms","remFormula","_","children","countUp","num","depth","DepictFormula","numExamples","Array","Parameters","validParam","modParam","paramChange","newParam","alteredParams","alteredExamples","deadParam","deadIndex","aliveParams","modExamples","remParam","childChange","newChild","modChild","deadChild","aliveChildren","remChild","exampleChange","newExample","oldExample","exists","addAnotherOutputToFormula","deadExample","aliveExamples","removeOutputFromFormula","remExample","Inputs","inputsChange","Outputs","row","Want","wantChange","inputChange","newInput","oldInput","alteredInputs","inputFields","TestCell","output","DummyCell","parentOutput","Check","valueCell","evalWant","DefinitionsArea","prefixChange","validPrefix","BSLArea","showBSL","toggleDisplay","bslArea","readOnly","htmlFor","App","prefix","prefixError","snapshots","calculate","playbackTime","playbackTimeChange","sendifier","floor","prevProps","setItem","makeLookup","expr","bool","flatMap","lookups","tableEnv","calcFormula","localEnv","subExamples","maybeSpecial","newFormula","newProg","event","min","t","defaultValue","ListRecordings","recordings","response","json","o","Object","entries","info","startsWith","alignRight","columns","Cell","to","Header","accessor","maxWidth","date","Date","abs","toLocaleString","dateStyle","timeStyle","defaultSortDesc","headerStyle","style","defaultSorted","desc","FetchRecordings","playbackSessionIDChange","playbackSessionID","snapshot","Boolean","window","location","hostname","ReactDOM","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff2c1b99.chunk.js","sourcesContent":["/*******************************************\n    This here is the image library in js\n*******************************************/\n\n\n/***\n    Data Definitions:\nAn Image is one of \n      - Circle\n      - Rectangle\n      - Triangle\n      - Polygon\n      - Beside\n      - Above\n      - Overlay\n      - Place\n\n    A Circle is\n      {r:     Integer,\n       color: Color,\n       mode:  String,\n       type:  'circle'}\n     \n    A Rectangle is\n      {width:  Integer,\n       height: Integer,\n       color:  Color,\n       mode:   String,\n       type:   'rect'}\n       \n    A Triangle is                   \n      {A:      Integer,             /\\\n       B:      Integer,            /  \\\n       C:      Integer,        B  /    \\  C\n       color:  Color,            /      \\\n       mode:   String,          /________\\\n       type:   'triangle'}          A      \n       \n    A Polygon is\n      {coordinates: [{x: Integer, y: Integer}],\n       color:       Color,\n       mode:        String,\n       type:        'polygon'}\n       \n    note: only acute triangles are handled\n       \n    A Beside is\n      {type:   'beside',\n       yplace:  String,\n       images: [Image]} note: images must be non-empty\n       \n    An Above is\n      {type:   'above',\n       xplace:  String,\n       images: [Image]} note: images must be non-empty\n\n    An Overlay is\n      {type:   'overlay',\n       yplace: String\n       xplace: String,\n       images: [Image]} note: images must be non-empty\n       \n   A Place is\n     {type: place,\n      x:     Integer,\n      y:     Integer,\n      image: Image,\n      scene: Image}\n       \n    A Color is\n      {r: Integer,\n       g: Integer,\n       b: Integer,\n       a: Integer}\n***/\n\nimport React from 'react';\n\n// these colors taken from https://github.com/brownplt/code.pyret.org/blob/horizon/src/web/js/trove/image-lib.js\nconst colorDb = {\n    \"DARK-RED\" : makeColor(139, 0, 0),\n    \"FIRE-BRICK\" : makeColor(178, 34, 34),\n    \"DEEP-PINK\" : makeColor(255, 20, 147),\n    \"INDIAN-RED\" : makeColor(205, 92, 92),\n    \"MEDIUM-VIOLET-RED\" : makeColor(199, 21, 133),\n    \"VIOLET-RED\" : makeColor(208, 32, 144),\n    \"LIGHT-CORAL\" : makeColor(240, 128, 128),\n    \"HOT-PINK\" : makeColor(255, 105, 180),\n    \"PALE-VIOLET-RED\" : makeColor(219, 112, 147),\n    \"LIGHT-PINK\" : makeColor(255, 182, 193),\n    \"ROSY-BROWN\" : makeColor(188, 143, 143),\n    \"LAVENDER-BLUSH\" : makeColor(255, 240, 245),\n    \"SADDLE-BROWN\" : makeColor(139, 69, 19),\n    \"DARK-ORANGE\" : makeColor(255, 140, 0),\n    \"DARK-GOLDENRON\" : makeColor(184, 134, 11),\n    \"SANDY-BROWN\" : makeColor(244, 164, 96),\n    \"LIGHT-SALMON\" : makeColor(255, 160, 122),\n    \"DARK-SALMON\" : makeColor(233, 150, 122),\n    \"NAVAJO-WHITE\" : makeColor(255, 222, 173),\n    \"PEACH-PUFF\" : makeColor(255, 218, 185),\n    \"DARK-KHAKI\" : makeColor(189, 183, 107),\n    \"PALE-GOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHE-DIAMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM-GOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYA-WHIP\" : makeColor(255, 239, 213),\n    \"MISTY-ROSE\" : makeColor(255, 228, 225),\n    \"LEMON-CHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUE-WHITE\" : makeColor(250, 235, 215),\n    \"CORN-SILK\" : makeColor(255, 248, 220),\n    \"LIGHT-GOLDENRON-YELLOW\" : makeColor(250, 250, 210),\n    \"OLD-LACE\" : makeColor(253, 245, 230),\n    \"LIGHT-YELLOW\" : makeColor(255, 255, 224),\n    \"FLORAL-WHITE\" : makeColor(255, 250, 240),\n    \"LAWN-GREEN\" : makeColor(124, 252, 0),\n    \"GREEN-YELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW-GREEN\" : makeColor(154, 205, 50),\n    \"OLIVE-DRAB\" : makeColor(107, 142, 35),\n    \"MEDIUM-FOREST-GREEN\" : makeColor(107, 142, 35),\n    \"DARK-OLIVE-GREEN\" : makeColor(85, 107, 47),\n    \"DARK-SEA-GREEN\" : makeColor(143, 188, 139),\n    \"DARK-GREEN\" : makeColor(0, 100, 0),\n    \"LIME-GREEN\" : makeColor(50, 205, 50),\n    \"FOREST-GREEN\" : makeColor(34, 139, 34),\n    \"SPRING-GREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM-SPRING-GREEN\" : makeColor(0, 250, 154),\n    \"SEA-GREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM-SEA-GREEN\" : makeColor(60, 179, 113),\n    \"LIGHT-GREEN\" : makeColor(144, 238, 144),\n    \"PALE-GREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM-AQUAMARINE\" : makeColor(102, 205, 170),\n    \"LIGHT-SEA-GREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM-TURQUOISE\" : makeColor(72, 209, 204),\n    \"MINT-CREAM\" : makeColor(245, 255, 250),\n    \"ROYAL-BLUE\" : makeColor(65, 105, 225),\n    \"DODGER-BLUE\" : makeColor(30, 144, 255),\n    \"DEEP-SKY-BLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWER-BLUE\" : makeColor(100, 149, 237),\n    \"STEEL-BLUE\" : makeColor(70, 130, 180),\n    \"LIGHT-SKY-BLUE\" : makeColor(135, 206, 250),\n    \"DARK-TURQUOISE\" : makeColor(0, 206, 209),\n    \"DARKTURQUOISE\" : makeColor(0, 206, 209),\n    \"SKY-BLUE\" : makeColor(135, 206, 235),\n    \"SKYBLUE\" : makeColor(135, 206, 235),\n    \"CADET-BLUE\" : makeColor(96, 160, 160),\n    \"DARK-SLATE-GRAY\" : makeColor(47, 79, 79),\n    \"LIGHT-STEEL-BLUE\" : makeColor(176, 196, 222),\n    \"LIGHT-BLUE\" : makeColor(173, 216, 230),\n    \"POWDER-BLUE\" : makeColor(176, 224, 230),\n    \"PALE-TURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHT-CYAN\" : makeColor(224, 255, 255),\n    \"ALICE-BLUE\" : makeColor(240, 248, 255),\n    \"MEDIUM-BLUE\" : makeColor(0, 0, 205),\n    \"DARK-BLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT-BLUE\" : makeColor(25, 25, 112),\n    \"BLUE-VIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM-SLATE-BLUE\" : makeColor(123, 104, 238),\n    \"SLATE-BLUE\" : makeColor(106, 90, 205),\n    \"DARK-SLATE-BLUE\" : makeColor(72, 61, 139),\n    \"DARK-VIOLET\" : makeColor(148, 0, 211),\n    \"DARK-ORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUM-PURPLE\" : makeColor(147, 112, 219),\n    \"MEDIUM-ORCHID\" : makeColor(186, 85, 211),\n    \"DARK-MAGENTA\" : makeColor(139, 0, 139),\n    \"GHOST-WHITE\" : makeColor(248, 248, 255),\n    \"WHITE-SMOKE\" : makeColor(245, 245, 245),\n    \"LIGHT-GRAY\" : makeColor(211, 211, 211),\n    \"DARK-GRAY\" : makeColor(169, 169, 169),\n    \"DIM-GRAY\" : makeColor(105, 105, 105),\n\n    \"ORANGE\" : makeColor(255, 165, 0),\n    \"ORANGERED\" : makeColor(255, 69, 0),\n    \"TOMATO\" : makeColor(255, 99, 71),\n    \"DARKRED\" : makeColor(139, 0, 0),\n    \"RED\" : makeColor(255, 0, 0),\n    \"FIREBRICK\" : makeColor(178, 34, 34),\n    \"CRIMSON\" : makeColor(220, 20, 60),\n    \"DEEPPINK\" : makeColor(255, 20, 147),\n    \"MAROON\" : makeColor(176, 48, 96),\n    \"INDIAN RED\" : makeColor(205, 92, 92),\n    \"INDIANRED\" : makeColor(205, 92, 92),\n    \"MEDIUM VIOLET RED\" : makeColor(199, 21, 133),\n    \"MEDIUMVIOLETRED\" : makeColor(199, 21, 133),\n    \"VIOLET RED\" : makeColor(208, 32, 144),\n    \"VIOLETRED\" : makeColor(208, 32, 144),\n    \"LIGHTCORAL\" : makeColor(240, 128, 128),\n    \"HOTPINK\" : makeColor(255, 105, 180),\n    \"PALEVIOLETRED\" : makeColor(219, 112, 147),\n    \"LIGHTPINK\" : makeColor(255, 182, 193),\n    \"ROSYBROWN\" : makeColor(188, 143, 143),\n    \"PINK\" : makeColor(255, 192, 203),\n    \"ORCHID\" : makeColor(218, 112, 214),\n    \"LAVENDERBLUSH\" : makeColor(255, 240, 245),\n    \"SNOW\" : makeColor(255, 250, 250),\n    \"CHOCOLATE\" : makeColor(210, 105, 30),\n    \"SADDLEBROWN\" : makeColor(139, 69, 19),\n    \"BROWN\" : makeColor(132, 60, 36),\n    \"DARKORANGE\" : makeColor(255, 140, 0),\n    \"CORAL\" : makeColor(255, 127, 80),\n    \"SIENNA\" : makeColor(160, 82, 45),\n    \"SALMON\" : makeColor(250, 128, 114),\n    \"PERU\" : makeColor(205, 133, 63),\n    \"DARKGOLDENROD\" : makeColor(184, 134, 11),\n    \"GOLDENROD\" : makeColor(218, 165, 32),\n    \"SANDYBROWN\" : makeColor(244, 164, 96),\n    \"LIGHTSALMON\" : makeColor(255, 160, 122),\n    \"DARKSALMON\" : makeColor(233, 150, 122),\n    \"GOLD\" : makeColor(255, 215, 0),\n    \"YELLOW\" : makeColor(255, 255, 0),\n    \"OLIVE\" : makeColor(128, 128, 0),\n    \"BURLYWOOD\" : makeColor(222, 184, 135),\n    \"TAN\" : makeColor(210, 180, 140),\n    \"NAVAJOWHITE\" : makeColor(255, 222, 173),\n    \"PEACHPUFF\" : makeColor(255, 218, 185),\n    \"KHAKI\" : makeColor(240, 230, 140),\n    \"DARKKHAKI\" : makeColor(189, 183, 107),\n    \"MOCCASIN\" : makeColor(255, 228, 181),\n    \"WHEAT\" : makeColor(245, 222, 179),\n    \"BISQUE\" : makeColor(255, 228, 196),\n    \"PALEGOLDENROD\" : makeColor(238, 232, 170),\n    \"BLANCHEDALMOND\" : makeColor(255, 235, 205),\n    \"MEDIUM GOLDENROD\" : makeColor(234, 234, 173),\n    \"MEDIUMGOLDENROD\" : makeColor(234, 234, 173),\n    \"PAPAYAWHIP\" : makeColor(255, 239, 213),\n    \"MISTYROSE\" : makeColor(255, 228, 225),\n    \"LEMONCHIFFON\" : makeColor(255, 250, 205),\n    \"ANTIQUEWHITE\" : makeColor(250, 235, 215),\n    \"CORNSILK\" : makeColor(255, 248, 220),\n    \"LIGHTGOLDENRODYELLOW\" : makeColor(250, 250, 210),\n    \"OLDLACE\" : makeColor(253, 245, 230),\n    \"LINEN\" : makeColor(250, 240, 230),\n    \"LIGHTYELLOW\" : makeColor(255, 255, 224),\n    \"SEASHELL\" : makeColor(255, 245, 238),\n    \"BEIGE\" : makeColor(245, 245, 220),\n    \"FLORALWHITE\" : makeColor(255, 250, 240),\n    \"IVORY\" : makeColor(255, 255, 240),\n    \"GREEN\" : makeColor(0, 255, 0),\n    \"LAWNGREEN\" : makeColor(124, 252, 0),\n    \"CHARTREUSE\" : makeColor(127, 255, 0),\n    \"GREEN YELLOW\" : makeColor(173, 255, 47),\n    \"GREENYELLOW\" : makeColor(173, 255, 47),\n    \"YELLOW GREEN\" : makeColor(154, 205, 50),\n    \"YELLOWGREEN\" : makeColor(154, 205, 50),\n    \"MEDIUM FOREST GREEN\" : makeColor(107, 142, 35),\n    \"OLIVEDRAB\" : makeColor(107, 142, 35),\n    \"MEDIUMFORESTGREEN\" : makeColor(107, 142, 35),\n    \"DARK OLIVE GREEN\" : makeColor(85, 107, 47),\n    \"DARKOLIVEGREEN\" : makeColor(85, 107, 47),\n    \"DARKSEAGREEN\" : makeColor(143, 188, 139),\n    \"LIME\" : makeColor(0, 255, 0),\n    \"DARK GREEN\" : makeColor(0, 100, 0),\n    \"DARKGREEN\" : makeColor(0, 100, 0),\n    \"LIME GREEN\" : makeColor(50, 205, 50),\n    \"LIMEGREEN\" : makeColor(50, 205, 50),\n    \"FOREST GREEN\" : makeColor(34, 139, 34),\n    \"FORESTGREEN\" : makeColor(34, 139, 34),\n    \"SPRING GREEN\" : makeColor(0, 255, 127),\n    \"SPRINGGREEN\" : makeColor(0, 255, 127),\n    \"MEDIUM SPRING GREEN\" : makeColor(0, 250, 154),\n    \"MEDIUMSPRINGGREEN\" : makeColor(0, 250, 154),\n    \"SEA GREEN\" : makeColor(46, 139, 87),\n    \"SEAGREEN\" : makeColor(46, 139, 87),\n    \"MEDIUM SEA GREEN\" : makeColor(60, 179, 113),\n    \"MEDIUMSEAGREEN\" : makeColor(60, 179, 113),\n    \"AQUAMARINE\" : makeColor(112, 216, 144),\n    \"LIGHTGREEN\" : makeColor(144, 238, 144),\n    \"PALE GREEN\" : makeColor(152, 251, 152),\n    \"PALEGREEN\" : makeColor(152, 251, 152),\n    \"MEDIUM AQUAMARINE\" : makeColor(102, 205, 170),\n    \"MEDIUMAQUAMARINE\" : makeColor(102, 205, 170),\n    \"TURQUOISE\" : makeColor(64, 224, 208),\n    \"LIGHTSEAGREEN\" : makeColor(32, 178, 170),\n    \"MEDIUM TURQUOISE\" : makeColor(72, 209, 204),\n    \"MEDIUMTURQUOISE\" : makeColor(72, 209, 204),\n    \"HONEYDEW\" : makeColor(240, 255, 240),\n    \"MINTCREAM\" : makeColor(245, 255, 250),\n    \"ROYALBLUE\" : makeColor(65, 105, 225),\n    \"DODGERBLUE\" : makeColor(30, 144, 255),\n    \"DEEPSKYBLUE\" : makeColor(0, 191, 255),\n    \"CORNFLOWERBLUE\" : makeColor(100, 149, 237),\n    \"STEEL BLUE\" : makeColor(70, 130, 180),\n    \"STEELBLUE\" : makeColor(70, 130, 180),\n    \"LIGHTSKYBLUE\" : makeColor(135, 206, 250),\n    \"DARK TURQUOISE\" : makeColor(0, 206, 209),\n    \"CYAN\" : makeColor(0, 255, 255),\n    \"AQUA\" : makeColor(0, 255, 255),\n    \"DARKCYAN\" : makeColor(0, 139, 139),\n    \"TEAL\" : makeColor(0, 128, 128),\n    \"SKY BLUE\" : makeColor(135, 206, 235),\n    \"CADET BLUE\" : makeColor(96, 160, 160),\n    \"CADETBLUE\" : makeColor(95, 158, 160),\n    \"DARK SLATE GRAY\" : makeColor(47, 79, 79),\n    \"DARKSLATEGRAY\" : makeColor(47, 79, 79),\n    \"LIGHTSLATEGRAY\" : makeColor(119, 136, 153),\n    \"SLATEGRAY\" : makeColor(112, 128, 144),\n    \"LIGHT STEEL BLUE\" : makeColor(176, 196, 222),\n    \"LIGHTSTEELBLUE\" : makeColor(176, 196, 222),\n    \"LIGHT BLUE\" : makeColor(173, 216, 230),\n    \"LIGHTBLUE\" : makeColor(173, 216, 230),\n    \"POWDERBLUE\" : makeColor(176, 224, 230),\n    \"PALETURQUOISE\" : makeColor(175, 238, 238),\n    \"LIGHTCYAN\" : makeColor(224, 255, 255),\n    \"ALICEBLUE\" : makeColor(240, 248, 255),\n    \"AZURE\" : makeColor(240, 255, 255),\n    \"MEDIUM BLUE\" : makeColor(0, 0, 205),\n    \"MEDIUMBLUE\" : makeColor(0, 0, 205),\n    \"DARKBLUE\" : makeColor(0, 0, 139),\n    \"MIDNIGHT BLUE\" : makeColor(25, 25, 112),\n    \"MIDNIGHTBLUE\" : makeColor(25, 25, 112),\n    \"NAVY\" : makeColor(36, 36, 140),\n    \"BLUE\" : makeColor(0, 0, 255),\n    \"INDIGO\" : makeColor(75, 0, 130),\n    \"BLUE VIOLET\" : makeColor(138, 43, 226),\n    \"BLUEVIOLET\" : makeColor(138, 43, 226),\n    \"MEDIUM SLATE BLUE\" : makeColor(123, 104, 238),\n    \"MEDIUMSLATEBLUE\" : makeColor(123, 104, 238),\n    \"SLATE BLUE\" : makeColor(106, 90, 205),\n    \"SLATEBLUE\" : makeColor(106, 90, 205),\n    \"PURPLE\" : makeColor(160, 32, 240),\n    \"DARK SLATE BLUE\" : makeColor(72, 61, 139),\n    \"DARKSLATEBLUE\" : makeColor(72, 61, 139),\n    \"DARKVIOLET\" : makeColor(148, 0, 211),\n    \"DARK ORCHID\" : makeColor(153, 50, 204),\n    \"DARKORCHID\" : makeColor(153, 50, 204),\n    \"MEDIUMPURPLE\" : makeColor(147, 112, 219),\n    \"CORNFLOWER BLUE\" : makeColor(68, 64, 108),\n    \"MEDIUM ORCHID\" : makeColor(186, 85, 211),\n    \"MEDIUMORCHID\" : makeColor(186, 85, 211),\n    \"MAGENTA\" : makeColor(255, 0, 255),\n    \"FUCHSIA\" : makeColor(255, 0, 255),\n    \"DARKMAGENTA\" : makeColor(139, 0, 139),\n    \"VIOLET\" : makeColor(238, 130, 238),\n    \"PLUM\" : makeColor(221, 160, 221),\n    \"LAVENDER\" : makeColor(230, 230, 250),\n    \"THISTLE\" : makeColor(216, 191, 216),\n    \"GHOSTWHITE\" : makeColor(248, 248, 255),\n    \"WHITE\" : makeColor(255, 255, 255),\n    \"WHITESMOKE\" : makeColor(245, 245, 245),\n    \"GAINSBORO\" : makeColor(220, 220, 220),\n    \"LIGHT GRAY\" : makeColor(211, 211, 211),\n    \"LIGHTGRAY\" : makeColor(211, 211, 211),\n    \"SILVER\" : makeColor(192, 192, 192),\n    \"GRAY\" : makeColor(190, 190, 190),\n    \"DARK GRAY\" : makeColor(169, 169, 169),\n    \"DARKGRAY\" : makeColor(169, 169, 169),\n    \"DIM GRAY\" : makeColor(105, 105, 105),\n    \"DIMGRAY\" : makeColor(105, 105, 105),\n    \"BLACK\" : makeColor(0, 0, 0),\n    \"TRANSPARENT\" : makeColor(0, 0, 0, 0),\n};\n\n// Integer\n// generates a random key so react stops complaining\nfunction genKey() {\n    return Math.round(Math.random() * 100000000);\n}\n\n/*\nTODO:\n  Figure out how stars, pentagons, hexagons should work (yay geometry)\n  turn rectangles and triangles into polygons?\n*/\n\n// Integer, Integer, Integer[, Integer] -> Color \nfunction makeColor (r, g, b, a = 255) {\n    if (r < 0 || r > 255 ||\n        g < 0 || g > 255 ||\n        b < 0 || b > 255 ||\n        a < 0 || a > 255 ){\n        throw new Error('r g b a values must be between 0 and 255 (inclusive)');\n    }\n\n    return {r, g, b, a};\n}\n\n// Color, Integer -> Color\nfunction changeAlpha (color, a) {\n    return makeColor(color.r, color.g, color.b, a);\n}\n\n// Integer -> Integer\n// pretty much makes sure the argument is non-negative\nfunction checkDimension(maybeDimension) {\n    if (maybeDimension < 0) {\n        throw new Error('shape dimensions must be non-negative');\n    }\n\n    return maybeDimension;\n}\n\n// (String or Color) -> Color\nfunction checkColor(maybeColor) {\n    if (typeof maybeColor === 'string') {\n        let color = colorDb[maybeColor.replace(' ', '').toUpperCase()];\n        if (color === undefined) {\n            throw new Error(`${maybeColor} is not a valid color`);\n        }\n\n        return color;\n    } \n\n    // T_ODO: check if maybeColor is actually a color object\n    // nvm, I do that in interpreter.js\n    return maybeColor;\n}\n\nfunction checkMode(maybeMode) {\n    if (maybeMode !== 'solid' && maybeMode !== 'outline') {\n        throw new Error(`${maybeMode} is not a valid mode`);\n    }\n\n    return maybeMode;\n}\n\nfunction checkXPlace(maybeXPlace) {\n    if (maybeXPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeXPlace !== 'left' && maybeXPlace !== 'right' && maybeXPlace !== 'center') {\n        throw new Error(`${maybeXPlace} is not a valid x-place`);\n    }\n\n    return maybeXPlace;\n}\n\nfunction checkYPlace(maybeYPlace) {\n    if (maybeYPlace === 'middle') {\n        return 'center';\n    }\n\n    if (maybeYPlace !== 'top' && maybeYPlace !== 'bottom' && maybeYPlace !== 'center') {\n        throw new Error(`${maybeYPlace} is not a valid y-place`);\n    }\n\n    return maybeYPlace;\n}\n\n// Integer (String or Integer) Color -> Circle\nfunction makeCircle (r, mode, color) {\n    if (typeof mode === 'string') {\n        return {r: checkDimension(r), mode: checkMode(mode), color: checkColor(color), type: 'circle'};\n    } else {\n        return {r: checkDimension(r), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'circle'};\n    }\n}\n\n// Integer Integer (String or Integer) Color -> Rectangle\nfunction makeRectangle (width, height, mode, color) {\n    if (typeof mode === 'string') {\n        return {width: checkDimension(width), height: checkDimension(height), mode: checkMode(mode),  color: checkColor(color), type: 'rect'};\n    } else {\n        return {width: checkDimension(width), height: checkDimension(height), mode: 'solid',  color: changeAlpha(checkColor(color), mode), type: 'rect'};\n    }\n}\n\n// Integer Integer Integer (String or Integer) Color -> Triangle\nfunction makeTriangle (A, B, C, mode, color) {\n    if (typeof mode === 'string') {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: checkMode(mode), color: checkColor(color), type: 'triangle'};\n    } else {\n        return {A: checkDimension(A), B: checkDimension(B), C: checkDimension(C), mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'triangle'};\n    }\n}\n\n// Integer (String or Integer) Color -> Triangle\nfunction makeEquiTriangle (length, mode, color) {\n    return makeTriangle(length, length, length, mode, color);\n}\n\n// [{x: Integer, y: Integer}], (String or Integer), Color -> Polygon\nfunction makePolygon (coords, mode, color) {\n    if (typeof mode === 'string') {\n        return {coordinates: coords, mode: checkMode(mode), color: checkColor(color), type: 'polygon'};\n    } else {\n        return {coordinates: coords, mode: 'solid', color: changeAlpha(checkColor(color), mode), type: 'polygon'};\n    }\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makePentagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeHexagon (length, mode, color) {\n}\n\n// Integer, (String or Integer), Color -> Polygon\nfunction makeStar (length, mode, color) {\n    \n}\n\n// [Image] -> Image\nfunction makeBeside (images, yplace = 'center') {\n    return {images, yplace: checkYPlace(yplace), type: 'beside'};\n}\n\n// [Image] -> Image\nfunction makeAbove (images, xplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), type: 'above'};\n}\n\n// [Image] -> Image\nfunction makeOverlay (images, xplace = 'center', yplace = 'center') {\n    return {images, xplace: checkXPlace(xplace), yplace: checkYPlace(yplace), type: 'overlay'};\n}\n\nfunction makePlace (image, x, y, scene) {\n    return {image, x, y, scene, type: 'place'};\n}\n\n// Integer, Integer[, (Color or String)] -> Image\nfunction emptyScene (w, h, color = 'white') {\n    return makeOverlay([makeRectangle(w, h, 'outline', 'black'), makeRectangle(w, h, 'solid', color)]);\n}\n\n// Image -> Integer\nfunction width (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.width;\n    case 'triangle':\n        return image.A;\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.x).reduce((acc, x) => Math.max(acc, x));\n    case 'beside':\n        return image.images.reduce((acc, image) => acc + width(image), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, width(image)), 0);\n    case 'place':\n        return width(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Image -> Integer\nfunction height (image) {\n    switch (image.type) {\n    case 'circle':\n        return image.r * 2;\n    case 'rect':\n        return image.height;\n    case 'triangle':\n        // Heron's Formula, I went on Wikihow for this, don't judge\n        let s = (image.A + image.B + image.C) / 2;\n        let area = Math.sqrt(s * (s  - image.A) * (s - image.B) * (s - image.C));\n        return Math.round((area * 2) / image.A);\n    case 'polygon':\n        return image.coordinates.map((coord) => coord.y).reduce((acc, y) => Math.max(acc, y));\n    case 'beside':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'above':\n        return image.images.reduce((acc, image) => acc + height(image), 0);\n    case 'overlay':\n        return image.images.reduce((acc, image) => Math.max(acc, height(image)), 0);\n    case 'place':\n        return height(image.scene);\n    default:\n        return new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n\n// Image, Integer, Integer -> SVG\nfunction render (image, x, y) {\n    switch (image.type) {\n    case 'circle':\n        return render_circle(image, x, y);\n    case 'rect':\n        return render_rect(image, x, y);\n    case 'triangle':\n        return render_triangle(image, x, y);\n    case 'polygon':\n        return render_polygon(image, x, y);\n    case 'beside':\n        return render_beside(image, x, y);\n    case 'above':\n        return render_above(image, x, y);\n    case 'overlay':\n        return render_overlay(image, x, y);\n    case 'place':\n        return render_place(image, x, y);\n    default:\n        throw new Error (`Unknown Image Type: ${image.type}`);\n    }\n}\n\n// Circle, Integer, Integer -> SVG\nfunction render_circle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    // for some reason alpha is the only float in rgba in css...\n    let alpha = image.color.a / 255;\n    switch (image.mode) {\n    case 'solid':\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r}\n                       fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke is pretty annoying...\n        // it draws both outside of the shape and inside it...\n        //so it's difficult to figure out where exactly it wants to draw\n\n        // this should draw the outline of a circle (approximately)\n        // not sure how it works on browsers besides firefox though\n        return <circle cx={x + image.r}\n                       cy={y + image.r}\n                       r={image.r - .5}\n                       fill='none'\n                       stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                       strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Rectangle, Integer, Integer -> SVG\nfunction render_rect (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    switch (image.mode) {\n    case 'solid':\n        return <rect x={x}\n                     y={y}\n                     width={image.width}\n                     height={image.height}\n                     fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        // stroke has similar problems here as it does in circle\n        return <rect x={x + .5}\n                      y={y + .5}\n                      width={image.width - 1}\n                      height={image.height - 1}\n                      fill='none'\n                      stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                      strokeWidth={1}\n                 />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Triangle, Integer, Integer -> SVG\nfunction render_triangle (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let D = Math.round(Math.sqrt(Math.pow(image.B, 2) - Math.pow(height(image), 2))); \n    // these are coordinates                                   //         b       \n    let a = {x: x, y: y + height(image)};                      //         .       \n    let b = {x: x + D, y: y};                                  //        /|\\      \n    let c = {x: x + width(image), y: y + height(image)};       //       / | \\     \n                                                               //   B  /  |  \\  C\n                                                               //     /   |h  \\\n                                                               //    /    |    \\\n                                                               //   ._____|_____.\n                                                               //  a   D  A      c\n    switch (image.mode) {                                       \n    case 'solid':                                               \n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={`${a.x},${a.y} ${b.x},${b.y} ${c.x},${c.y}`}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n// Polygon, Integer, Integer -> SVG\nfunction render_polygon (image, x, y) {\n    let red = image.color.r;\n    let green = image.color.g;\n    let blue = image.color.b;\n    let alpha = image.color.a / 255;\n\n    let points = image.coordinates.map((coord) => `${coord.x + x},${coord.y + y}`).reduce((acc, cur) => acc + ' ' + cur);\n    switch (image.mode) {\n    case 'solid':                                               \n        return <polygon\n                 points={points}\n                 fill={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n               />;\n    case 'outline':\n        return <polygon\n                 points={points}\n                 fill='none'\n                 stroke={`rgba(${red}, ${green}, ${blue}, ${alpha})`}\n                 strokeWidth={1}\n               />;\n    default:\n        throw new Error (`Unknown Image Mode: ${image.mode}`);\n    }\n}\n\n\n// should I flatten [SVG]s?\n// no, not really any point. react seems to figure it out\n\n// (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer), (Integer, Integer -> Integer) -> ([Image], Integer, Integer) -> [SVG]\nfunction make_list_renderer (xCorrect, yCorrect, xChange, yChange) {\n    function render_list (images, x, y) {\n        if (images.length === 0) {\n            throw new Error('I need at least 1 image to render!');\n        }\n\n        let w = width(images[0]);\n        let h = height(images[0]);\n\n        let first = render(images[0], xCorrect(x, w), yCorrect(y, h));\n\n        if (images.length === 1) {\n            return [first];\n        }\n\n        let rest = render_list(images.slice(1), xChange(x, w), yChange(y, h));\n\n        // return list in reverse because the last child of an svg tag is shown on top\n        // this matters for overlay, but makes no difference in beside, above\n        return [...rest, first];\n    }\n\n    return render_list;\n}\n\n// Beside, Ingeger, Integer -> [SVG]\nfunction render_beside (image, x, y) {\n    let initY = y,\n        yCorrect = (y, h) => y;\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer((x, w) => x,\n                                         yCorrect,\n                                         (x, dx) => x + dx,\n                                         (y, dy) => y);\n    return renderoozle(image.images, x, initY);\n}\n\n// Above, Integer, Integer -> [SVG]\nfunction render_above (image, x, y) {\n    let initX = x,\n        xCorrect = (x, w) => x;\n\n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         (y, h) => y,\n                                         (x, dx) => x,\n                                         (y, dy) => y + dy);\n    return renderoozle(image.images, initX, y);\n\n}\n\n// Overlay, Integer, Integer -> [SVG]\nfunction render_overlay (image, x, y) {\n    let initX = x,\n        initY = y,\n        xCorrect = (x, w) => x,\n        yCorrect = (y, h) => y;\n    \n    switch(image.xplace) {\n    case 'left':\n        break;\n    case 'center':\n        initX = x + width(image) / 2;\n        xCorrect = (x, w) => x - w/2;\n        break;\n    case 'right':\n        initX = x + width(image);\n        xCorrect = (x, w) => x - w;\n        break;\n    default:\n        throw new Error(`Unknown x-place: ${image.xplace}`);\n    }\n\n    switch(image.yplace) {\n    case 'top':\n        break;\n    case 'center':\n        initY = y + height(image) / 2;\n        yCorrect = (y, h) => y - h/2;\n        break;\n    case 'bottom':\n        initY = y + height(image);\n        yCorrect = (y, h) => y - h;\n        break;\n    default:\n        throw new Error(`Unknown y-place: ${image.yplace}`);\n    }\n\n    let renderoozle = make_list_renderer(xCorrect,\n                                         yCorrect,\n                                         (x, dx) => x,\n                                         (y, dy) => y);\n    return renderoozle(image.images, initX, initY);\n}\n\n// Place, Integer, Integer -> SVG\nfunction render_place (image, x, y) {\n    return [render(image.scene, x, y), render(image.image, x + image.x - width(image.image) / 2, y + image.y - height(image.image) / 2)];\n}\n\n// Image -> top level SVG\nfunction paint (image) {\n    let picture = render(image, 0, 0);\n    return (\n        <svg viewBox={`0 0 ${width(image)} ${height(image)}`}\n             xmlns='http://www.w3.org/2000/svg'\n             width={width(image)}\n             height={height(image)}\n             key={genKey()}\n        >\n          {picture}\n        </svg>\n    );\n}\n\nexport {makeCircle, makeRectangle, makeEquiTriangle, makeStar, makePentagon, makeHexagon,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint, width, height};\n","// for typeCheck Error messages\nimport React from 'react';\nimport {makeCircle, makeRectangle, makeEquiTriangle,\n        makeBeside, makeAbove, makeOverlay,\n        makePlace, emptyScene, makeColor,\n        paint} from './image.js';\n\n/****************\n   Interpreter\n****************/\n\nconst RVAR_T =    0;\nconst RAPP_T =    1;\nconst RFUNCT_T =  2;\nconst RNUM_T =    3;\nconst RBOOL_T =   4;\nconst RSTRING_T = 5;\nconst RLIST_T =   6;\nconst RSYM_T =    7;\nconst RIMAGE_T =  8;\nconst RCOLOR_T =  9;\nconst RIF_T =     10;\nconst RSTRUCT_T = 11;\nconst RCLOS_T =   12;\n\nconst varRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst appRE = /^\\(/;\nconst numRE = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#])/; // this one doesn't permit fractions\nconst boolRE = /^#(?:[tfTF]|true|false)(?=$|[\\s\",'`()[\\]{}|;#])/;\nconst strRE = /^\"[^\\\\\"]*\"/; // TODO: handle backslash escape\nconst quoteRE = /^'/;\nconst symRE = /^[^\\s\",'`()[\\]{}|;#]+/; // except numbers\nconst listRE = /^\\(/;\n\nconst protoEnv = [\n    // functions\n    {name: '+', binding: {type: RFUNCT_T,\n                          value: plus}},\n    {name: 'add1', binding: {type: RFUNCT_T,\n                          value: add1}},\n    {name: '-', binding: {type: RFUNCT_T,\n                          value: minus}},\n    {name: 'sub1', binding: {type: RFUNCT_T,\n                          value: sub1}},\n    {name: '*', binding: {type: RFUNCT_T,\n                          value: times}},\n    {name: '/', binding: {type: RFUNCT_T,\n                          value: divide}},\n    {name: 'car', binding: {type: RFUNCT_T,\n                            value: car}},\n    {name: 'first', binding: {type: RFUNCT_T,\n                              value: car}},\n    {name: 'cdr', binding: {type: RFUNCT_T,\n                            value: cdr}},\n    {name: 'rest', binding: {type: RFUNCT_T,\n                             value: cdr}},\n    {name: 'cons', binding: {type: RFUNCT_T,\n                             value: cons}},\n    {name: 'list', binding: {type: RFUNCT_T,\n                             value: list}},\n    {name: 'not', binding: {type: RFUNCT_T,\n                            value: not}},\n    {name: 'and', binding: {type: RFUNCT_T,\n                            value: and}},\n    {name: 'or', binding: {type: RFUNCT_T,\n                           value: or}},\n    {name: 'eqv?', binding: {type: RFUNCT_T,\n                             value: iseqv}},\n    {name: 'null?', binding: {type: RFUNCT_T,\n                              value: isnull}},\n    {name: 'empty?', binding: {type: RFUNCT_T,\n                               value: isnull}},\n    {name: 'cons?', binding: {type: RFUNCT_T,\n                               value: iscons}},\n    {name: '=', binding: {type: RFUNCT_T,\n                          value: equalsign}},\n    {name: '>', binding: {type: RFUNCT_T,\n                          value: gtsign}},\n    {name: '>=', binding: {type: RFUNCT_T,\n                           value: gesign}},\n    {name: '<', binding: {type: RFUNCT_T,\n                          value: ltsign}},\n    {name: '<=', binding: {type: RFUNCT_T,\n                           value: lesign}},\n    {name: 'string-length', binding: {type: RFUNCT_T,\n                           value: stringLength}},\n    {name: 'string-append', binding: {type: RFUNCT_T,\n                           value: stringAppend}},\n    {name: 'string=?', binding: {type: RFUNCT_T,\n                                 value: isstrequal}},\n    {name: 'circle', binding: {type: RFUNCT_T,\n                               value: circle}},\n    {name: 'rectangle', binding: {type: RFUNCT_T,\n                               value: rectangle}},\n    {name: 'square', binding: {type: RFUNCT_T,\n                               value: square}},\n    {name: 'triangle', binding: {type: RFUNCT_T,\n                               value: triangle}},\n    {name: 'beside', binding: {type: RFUNCT_T,\n                               value: beside}},\n    {name: 'beside/align', binding: {type: RFUNCT_T,\n                               value: besideAlign}},\n    {name: 'above', binding: {type: RFUNCT_T,\n                               value: above}},\n    {name: 'above/align', binding: {type: RFUNCT_T,\n                               value: aboveAlign}},\n    {name: 'overlay', binding: {type: RFUNCT_T,\n                               value: overlay}},\n    {name: 'overlay/align', binding: {type: RFUNCT_T,\n                               value: overlayAlign}},\n    {name: 'place-image', binding: {type: RFUNCT_T,\n                                    value: placeImage}},\n    {name: 'empty-scene', binding: {type: RFUNCT_T,\n                                    value: empty_Scene}},\n    {name: 'color', binding: {type: RFUNCT_T,\n                              value: color}},\n    // constants\n    {name: 'true', binding: {type: RBOOL_T,\n                             value: true}},\n    {name: 'false', binding: {type: RBOOL_T,\n                              value: false}},\n    {name: 'null', binding: {type: RLIST_T,\n                             value: null}},\n    {name: 'empty', binding: {type: RLIST_T,\n                              value: null}},\n];\n\n// put posn in initEnv becaouse why not\nconst initEnv = makeStruct('posn', ['x', 'y'], protoEnv);\n\n// String -> {prog: Program, rest: String}\n// parses all expressions except quoted expressions\nfunction parse(text) {\n    if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n    } else if (varRE.test(text)) {\n        let matches = text.match(varRE);\n        let name = matches[0];\n        let rest = text.slice(name.length).trim();\n        let variable = {value: name, type: RVAR_T};\n\n        return {prog: variable, rest: rest};\n\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr[1].toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (appRE.test(text)) {\n        text = text.slice(1).trim(); // remove open paren\n        let parseFunct = parse(text); // parse function\n        let funct = parseFunct.prog; // get function\n        text = parseFunct.rest; // get past function\n        let args = [];\n\n        while (text[0] !== ')') {\n            let parseArg = parse(text);\n            args = [...args, parseArg.prog];\n            text = parseArg.rest;\n        }\n\n        let app;\n        if (funct.value === 'or') {\n            if (args.length === 2) {\n                app = {value: {tst: args[0], els: args[1], thn: {value : true, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'and') {\n\n\n         if (args.length === 2) {\n                app = {value: {tst: args[0], thn: args[1], els: {value : false, type : RBOOL_T} }, type: RIF_T};\n            }\n            else if (args.length < 2) {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n            else {\n                // should have a loop here\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        }\n        else if (funct.value === 'if') {\n            if (args.length === 3) {\n                app = {value: {tst: args[0], thn: args[1], els: args[2]}, type: RIF_T};\n            }\n            else {\n                throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n            }\n        } else {\n            app = {value: {funct: funct, args: args}, type: RAPP_T};\n        }\n        let rest = text.slice(1).trim(); // remove close paren\n\n        return {prog: app, rest: rest};\n\n    } else if (quoteRE.test(text)) {\n        return parseQ(text.slice(1).trim());\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> {prog: Program, rest: String}\n// parses quoted expressions\nfunction parseQ(text) {\n    if (listRE.test(text)) {\n        text = text.slice(1).trim(); // remove quote, open paren\n        let listArr = [];\n\n        while (text[0] !== ')') {\n            let cur = parseQ(text);\n            listArr = [cur.prog, ...listArr]; // listArr is constructed backwards\n            text = cur.rest;\n        }\n\n        let rest = text.slice(1).trim();\n        let prog = listArr.reduce((acc, cur) => ({value: {a: cur, d: acc}, type: RLIST_T}), {value: null, type: RLIST_T}); // turn listArr into an Rlist\n\n        return {prog: prog, rest: rest};\n\n    } else if (numRE.test(text)) {\n        let matches = text.match(numRE);\n        let numStr = matches[0];\n        let rest = text.slice(numStr.length).trim();\n        let num = {value: +numStr, type: RNUM_T};\n\n        return {prog: num, rest: rest};\n\n    } else if (boolRE.test(text)) {\n        let matches = text.match(boolRE);\n        let boolStr = matches[0];\n        let rest = text.slice(boolStr.length).trim();\n        let bool = {value: boolStr.charAt(1).toLowerCase() === 't', type: RBOOL_T};\n\n        return {prog: bool, rest: rest};\n\n    } else if (strRE.test(text)) {\n        let matches = text.match(strRE);\n        let value = matches[0].substring(1, matches[0].length - 1); // trim off quotes\n        let str = {value: value, type: RSTRING_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: str, rest: rest};\n\n    } else if (symRE.test(text)) {\n        let matches = text.match(symRE);\n        let value = matches[0];\n        let sym = {value: value, type: RSYM_T};\n        let rest = text.slice(matches[0].length).trim();\n\n        return {prog: sym, rest: rest};\n    }\n\n    throw new SyntaxError('Invalid Syntax: \"' + text + '\"');\n}\n\n// String -> [PrefixProg]\nfunction parsePrefix (text) {\n    const commentRE = /;.*/g;\n    const defStructRE = /^\\(\\s*define-struct(?=$|[\\s\",'`()[\\]{}|;#])/;\n    const defineRE = /^\\(\\s*define(?=$|[\\s\",'`()[\\]{}|;#])/;\n    const nameRE = /^(?!-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#]))[^\\s\",'`()[\\]{}|;#]+/;\n\n    text = text.replace(commentRE, '');\n    text = text.trim();\n\n    let progs = [];\n\n    while(text !== '') {\n        let parsed = parsePrefixExpr(text);\n\n        text = parsed.rest;\n        progs = [...progs, parsed.prog];\n    }\n\n    return progs;\n\n    // Text -> {prog: PrefixProg, rest: String}\n    function parsePrefixExpr (text) {\n        if (defStructRE.test(text)) {\n            const openRE = /[([]/;\n\n            text = text.slice(text.match(defStructRE)[0].length).trim();\n\n            if (!nameRE.test(text)) {\n                throw new Error('Invalid Struct Name');\n            }\n\n            let superID = text.match(nameRE)[0];\n            text = text.slice(superID.length).trim();\n\n            if (!openRE.test(text)) {\n                throw new Error('Invalid Struct Definition');\n            }\n\n            let fieldOpen = text.match(openRE)[0];\n            text = text.slice(fieldOpen.length).trim();\n\n            let fieldClose;\n            if (fieldOpen === '(') {\n                fieldClose = ')';\n            } else if (fieldOpen === '[') {\n                fieldClose = ']';\n            }\n\n            let fieldIDs = [];\n            while (text[0] !== fieldClose) {\n                if (!nameRE.test(text)) {\n                    throw new Error('Invalid Field Name');\n                }\n\n                let fieldID = text.match(nameRE)[0];\n\n                text = text.slice(fieldID.length);\n                text = text.trim();\n\n                fieldIDs = [...fieldIDs, fieldID];\n            }\n\n            text = text.slice(1).trim();\n\n            if (text[0] !== ')') {\n                throw new Error('Invalid Struct Definition');\n            }\n            text = text.slice(1).trim();\n\n            return {prog: {superID, fieldIDs, type: 'struct'}, rest: text}\n        } else if (defineRE.test(text)) {\n            const closRE = /^\\(/;\n\n            text = text.slice(text.match(defineRE)[0].length).trim();\n\n            let name,\n                binding;\n            if (nameRE.test(text)) {    // not function definition\n                name = text.match(nameRE)[0];\n                text = text.slice(name.length).trim();\n\n                let parsed = parse(text);\n\n                binding = parsed.prog;\n                text = parsed.rest.trim();\n\n            } else if (closRE.test(text)) {\n                text = text.slice(text.match(closRE)[0].length).trim();\n\n                if (!nameRE.test(text)) {\n                    throw new Error(`Invalid Prefix Form: ${text}`);\n                }\n\n                name = text.match(nameRE)[0];\n                text = text.slice(name.length).trim();\n\n                let parameters = [];\n                while (text[0] !== ')') {\n                    if (!nameRE.test(text)) {\n                        throw new Error(`Invalid Prefix Form: ${text}`);\n                    }\n                    let param = text.match(nameRE)[0];\n                    text = text.slice(param.length).trim();\n                    parameters = [...parameters, param];\n                }\n\n                text = text.slice(1).trim();\n\n                let parsed = parse(text);\n\n                let body = parsed.prog;\n\n                text = parsed.rest;\n                text = text.trim();\n\n                binding = {value: {parameters, body}, type: RCLOS_T}\n            } else {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            if (text[0] !== ')') {\n                throw new Error(`Invalid Prefix Form: ${text}`);\n            }\n\n            text = text.slice(1).trim();\n\n            return {prog: {name, binding, type: 'define'}, rest: text};\n\n        } else {\n            throw new Error(`Invalid Prefix Form: ${text}`);\n        }\n    }\n}\n\n/***\n    Environment: [Variable]\n    Variable:    {name:    String,\n                  binding: Program}\n***/\n\n// Program, Environment -> Program\nfunction interp(prog, env) {\n    function lookup(name) {\n        let val = env.reduce((acc, variable) => {\n            if (acc !== undefined) {\n                return acc;\n            }\n\n            return variable.name === name ? variable.binding : undefined;\n        }, undefined);\n\n        if (val === undefined){\n            throw new ReferenceError(name + ' isn\\'t defined');\n        }\n\n        return val;\n    }\n\n    switch(prog.type) {\n        case RNUM_T:\n            return prog;\n        case RBOOL_T:\n            return prog;\n        case RSTRING_T:\n            return prog;\n        case RLIST_T:\n            return prog;\n        case RSYM_T:\n            return prog;\n        case RVAR_T:\n            return lookup(prog.value);\n        case RFUNCT_T:\n            return prog;\n        case RCLOS_T:\n            // put environment in there and stuff\n            return {value: {parameters: prog.value.parameters, body: prog.value.body, env: env}, type: RCLOS_T};\n        case RIF_T:\n            let tst = interp(prog.value.tst, env);\n            typeCheck(tst, [RBOOL_T]);\n\n            if (tst.value) {\n                return interp(prog.value.thn, env);\n            }\n            else {\n                return interp(prog.value.els, env);\n            }\n\n        case RAPP_T:\n            let name = 'anonymous';\n            if (isRVAR(prog.value.funct)) {\n                name = prog.value.funct.value; // that's a lot of .s\n            }\n\n            // interp operator (valof rator env)\n            let rator = interp(prog.value.funct, env);\n\n            // interpret arguments (valof rand env)\n            let rands = prog.value.args.map((arg) => interp(arg, env));\n            switch(rator.type) {\n                case RFUNCT_T:\n                    return rator.value(rands);\n                case RCLOS_T:\n                    if (rands.length !== rator.value.parameters.length) {\n                        throw new Error (`Arity Mismatch: ${name} expects ${rator.value.parameters.length} arguments but got ${rands.length}`);\n                    }\n\n                    let extedEnv = [...rator.value.env, ...rator.value.parameters.map((name, i) => ({name, binding: rands[i]}))];\n                    return interp(rator.value.body, extedEnv);\n                default:\n                    typeCheck(rator, [RFUNCT_T]);\n            }\n\n            // this break only exists to make the js syntax checker stop complaining\n            break;\n        case RIMAGE_T:\n            return prog;\n        case RCOLOR_T:\n            return prog;\n\n        default:\n            //console.log(prog);\n            throw new TypeError(\"Unknown Type \" + prog.value);\n    }\n}\n\n// [PrefixProgram], Environment -> Environment\nfunction interpPrefix (progs, env) {\n    let ext = progs.reduce((curEnv, prog) => {\n        switch (prog.type) {\n            case 'struct':\n                return makeStruct(prog.superID, prog.fieldIDs, curEnv);\n            case 'define':\n                return makeDefine(prog.name, prog.binding, curEnv);\n            default:\n                throw new Error('Invalid Prefix Prog');\n\n        }\n    }, env);\n\n    return ext;\n}\n\n// String, Program, Environment -> Environment\nfunction makeDefine (name, binding, env) {\n    switch (binding.type) {\n        case RCLOS_T: // TODO: make recursion work\n            let closVar = {name, binding: interp(binding, env)};\n            return [...env, closVar];\n        default:\n            let def = {name, binding: interp(binding, env)};\n            return [...env, def];\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_cons(prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            if (prog.value === null) {\n                return ['\\'()'];\n            } else {\n                return ['(cons ', ...unparse_cons(prog.value.a), ' ', ...unparse_cons(prog.value.d), ')'];\n            }\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_cons(prog.value.funct), ...prog.value.args.map(unparse_cons).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_cons(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            //console.log(prog);\n            return 'error or something';\n    }\n}\n\n// Program -> [(String or SVG)]\nfunction unparse_list (prog) {\n    switch (prog.type) {\n        case RNUM_T:\n            return [prog.value];\n        case RBOOL_T:\n            return ['#' + prog.value];\n        case RSTRING_T:\n            return [`\"${prog.value}\"`];\n        case RLIST_T:\n            // special case for empty list\n            if (prog.value === null) {\n                return ['\\'()'];\n            }\n\n            let elems = [];\n            while (prog.value !== null) {\n                elems = [...elems, ' ', ...unparse_list(prog.value.a)];\n                prog = prog.value.d;\n            }\n\n            return ['(list', ...elems, ')'];\n        case RSYM_T:\n            return [\"'\" + prog.value];\n        case RVAR_T:\n            return [prog.value];\n        case RFUNCT_T:\n            return ['#<procedure>'];\n        case RCLOS_T:\n            return ['#<user_defined_procedure>'];\n        case RAPP_T:\n            return ['(', ...unparse_list(prog.value.funct), ...prog.value.args.map(unparse_list).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        case RIMAGE_T:\n            return [paint(prog.value)];\n        case RCOLOR_T:\n            return ['#<color>'];\n        case RSTRUCT_T:\n            return [`(make-${prog.value.id}`, ...prog.value.fields.map((field) => unparse_list(field.binding)).reduce((acc, arr) => [...acc, ' ', ...arr], ''), ')'];\n        default:\n            return 'error or something';\n    }\n}\n\n// String -> Program\n// parses text and checks for syntax errors based on what's returned\nfunction parseCheck(text) {\n    let parsed = parse(text);\n\n    switch (parsed.rest) {\n    case '':\n        break;\n    default:\n        throw new SyntaxError('Parsing Error');\n    }\n\n    return parsed.prog;\n}\n\n// Program -> [Number] -> Error Maybe\n// checks if prog is of one of the types in types\nfunction typeCheck(prog, types) {\n    // Number -> String\n    function getType(type) {\n        switch (type) {\n        case RVAR_T:\n            return 'variable';\n        case RAPP_T:\n            return 'application';\n        case RFUNCT_T:\n            return 'function';\n        case RCLOS_T:\n            return 'closure';\n        case RNUM_T:\n            return 'number';\n        case RBOOL_T:\n            return 'boolean';\n        case RSTRING_T:\n            return 'string';\n        case RLIST_T:\n            return 'list';\n        case RSYM_T:\n            return 'symbol';\n        case RIMAGE_T:\n            return 'image';\n        case RCOLOR_T:\n            return 'color';\n        default:\n            return '???';\n        }\n    }\n\n    if (!types.includes(prog.type)) {\n        let typesString = types.map(getType).reduce((acc, type) => acc + ` or a ${type}`);\n        let e = new TypeError();\n        // shoehorn a non-string into the message field\n        // TODO: somehow make this use the approproate unparser maybe\n        e.message = <React.Fragment>{[unparse_cons(prog), \" ain't a \" + typesString]}</React.Fragment>;\n        throw e;\n    }\n}\n\n// Super-Id, [Field-Id], Environment -> Environment\n// makes a racket structure according to id and field and appends\n// a function to make an id, a function to check if something is an id\n// and n functions that each access one of the fields of an id\n// to the given environment (and returns it)\nfunction makeStruct(superID, fieldIDs, env) {\n    const numFields = fieldIDs.length;\n\n    // [Program] -> Struct\n    function construct (args) {\n        if (args.length !== numFields) {\n            throw new Error(`make-${superID}: arity mismatch, expected ${numFields} arguments but given ${args.length}`);\n        }\n\n        let fields = args.map((prog, i) => ({id: fieldIDs[i], binding: prog}));\n        return {value: {id: superID, fields}, type: RSTRUCT_T};\n    }\n\n    // [Program] -> RBOOL\n    function isID (args) {\n        if (args.length !== 1) {\n            throw new Error(`${superID}?: arity mismatch, expected 1 argument but given ${args.length}`);\n        }\n\n        let struct = args[0];\n\n        return {value: struct.type === RSTRUCT_T && struct.value.id === superID,\n                type: RBOOL_T};\n    }\n\n    let fieldExtractors = fieldIDs.map((fid) => (\n        // Struct -> Program\n        function (args) {\n            if (args.length !== 1) {\n                throw new Error(`${superID}-${fid}: arity mismatch, expected 1 argument but given ${args.length}`);\n            }\n\n            if (args[0].type !== RSTRUCT_T || args[0].value.id !== superID) {\n                throw new Error(`${superID}-${fid}: expects a ${superID}`);\n            }\n\n            let struct = args[0].value;\n\n            // hey, it's lookup again!\n            return struct.fields.reduce((acc, field) =>  {\n                if (acc !== undefined) {\n                    return acc;\n                } else if (field.id === fid) {\n                    //console.log(field);\n                    return field.binding;\n                } else {\n                    return undefined;\n                }\n            }, undefined);\n        }\n    ));\n\n    let extedEnv = [{name: `make-${superID}`, binding: {type:  RFUNCT_T,\n                                                        value: construct}},\n                    {name: `${superID}?`, binding: {type: RFUNCT_T,\n                                                    value: isID}},\n                    ...fieldExtractors.map((extract, i) => (\n                        {name: `${superID}-${fieldIDs[i]}`, binding: {type: RFUNCT_T,\n                                                                      value: extract}}\n                    ))];\n\n    return [...env, ...extedEnv];\n}\n\n/**\n * Type Checking Functions\n * so I don't have to do prog.type === RTYPE_T all the time\n */\n\nfunction isRVAR (prog) {\n    return prog.type === RVAR_T;\n}\nfunction isRAPP (prog) {\n    return prog.type === RAPP_T;\n}\nfunction isRFUNCT (prog) {\n    return prog.type === RFUNCT_T;\n}\nfunction isRNUM (prog) {\n    return prog.type === RNUM_T;\n}\nfunction isRBOOL (prog) {\n    return prog.type === RBOOL_T;\n}\nfunction isRSTRING (prog) {\n    return prog.type === RSTRING_T;\n}\nfunction isRLIST (prog) {\n    return prog.type === RLIST_T;\n}\nfunction isRSYM (prog) {\n    return prog.type === RSYM_T;\n}\nfunction isRIMAGE (prog) {\n    return prog.type === RIMAGE_T;\n}\nfunction isRCOLOR (prog) {\n    return prog.type === RCOLOR_T;\n}\nfunction isRIF (prog) {\n    return prog.type === RIF_T;\n}\nfunction isRSTRUCT (prog) {\n    return prog.type === RSTRUCT_T;\n}\n\n/************************************\n * Functions in initial Environment *\n ************************************/\n\nfunction plus(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction add1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value + 1,\n            type: RNUM_T};\n}\nfunction minus(args) {\n    if (args.length < 1) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        return {value: 0 - args[0].value,\n                type: RNUM_T};\n    }\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value - arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction sub1(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    typeCheck(args[0], [RNUM_T]);\n\n    return {value: args[0].value - 1,\n            type: RNUM_T};\n}\nfunction times(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value * arg.value,\n         type: RNUM_T}\n    ));\n}\nfunction divide(args) {\n    args.forEach((arg) => typeCheck(arg, [RNUM_T]));\n\n    if (args.length === 1) {\n        let firstArg = args[0];\n\n        typeCheck(firstArg, [RNUM_T]);\n\n        return {value: 1 / firstArg.value,\n                type: RNUM_T};\n    } else if (args.length === 2) {\n        let firstArg = args[0];\n        let secondArg = args[1];\n\n        typeCheck(firstArg, [RNUM_T]);\n        typeCheck(secondArg, [RNUM_T]);\n\n        return {value: firstArg.value / secondArg.value,\n                type: RNUM_T};\n    }\n\n    return {value: false, type: RBOOL_T};\n}\nfunction car(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    return firstArg.value.a;\n}\nfunction cdr(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    if (firstArg.value === null) {\n        throw new Error('expected a cons, but given empty list');\n    }\n\n    typeCheck(firstArg, [RLIST_T]);\n\n    return firstArg.value.d;\n}\nfunction cons(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    // because BSL\n    typeCheck(secondArg, [RLIST_T]);\n\n    return {value: {a: firstArg, d: secondArg},\n            type: RLIST_T};\n}\nfunction list(args) {\n    // this indentation is pretty jank\n    return args.reverse().reduce((acc, arg) => (\n        {value: {a: arg, d: acc},\n         type: RLIST_T}),\n                                 {value: null,\n                                  type: RLIST_T});\n}\nfunction not(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === false,\n            type: RBOOL_T};\n}\nfunction iseqv(args) {\n    if (args.length !== 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n\n    return {value: firstArg.value === secondArg.value,\n            type: RBOOL_T};\n}\nfunction and(args) {\n    return args.reduce((acc, cur) => {\n        return acc.value !== false ? cur : {value: false, type: RBOOL_T};\n    }, {value: true, type: RBOOL_T});\n\n} function or(args) {return args.reduce((acc, cur) => {\n        return acc.value !== false ? acc : cur;\n    }, {value: true, type: RBOOL_T});\n\n}\nfunction isnull(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value === null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction iscons(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    return {value: firstArg.value !== null && firstArg.type === RLIST_T,\n            type: RBOOL_T};\n}\nfunction equalsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value===cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gtsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value > cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction gesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value >= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction ltsign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value < cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction lesign(args) {\n    args.forEach((cur) => typeCheck(cur, [RNUM_T]));\n\n    let val = args.reduce((acc, cur) => {\n\n        if (acc.value === false) {\n            return {value: false, type: RBOOL_T};\n        }\n\n        return acc.value <= cur.value ? acc : {value: false, type: RBOOL_T};\n    });\n\n    if (val.value === false){\n        return val;\n    } else {\n        return {value: true, type: RBOOL_T};\n    }\n}\nfunction isstrequal(args) {\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    let value = args.map((arg) => arg.value).reduce((acc, val) => {\n\n        if (acc === false) {\n            return false;\n        }\n\n        return acc === val ? acc : false;\n    });\n\n    if (value !== false) {\n        return {value: true, type: RBOOL_T};\n    } else {\n        return {value, type: RBOOL_T};\n    }\n}\nfunction stringLength(args) {\n    if (args.length !== 1) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n\n    typeCheck(firstArg, [RSTRING_T]);\n\n    return {value: firstArg.value.length,\n            type: RNUM_T};\n}\nfunction stringAppend(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RSTRING_T]));\n\n    return args.reduce((acc, arg) => (\n        {value: acc.value + arg.value,\n         type: RSTRING_T}\n    ));\n}\nfunction circle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeCircle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction rectangle(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(fourthArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction square(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeRectangle(firstArg.value, firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction triangle(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T, RSTRING_T, RSYM_T]);\n    typeCheck(thirdArg, [RSTRING_T, RSYM_T, RCOLOR_T]);\n\n    let value = makeEquiTriangle(firstArg.value, secondArg.value, thirdArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction beside(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction besideAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeBeside(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction above(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction aboveAlign(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let restArgs = args.slice(1);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeAbove(restArgs.map((arg) => arg.value), firstArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlay(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    args.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(args.map((arg) => arg.value));\n\n    return {value, type: RIMAGE_T};\n}\nfunction overlayAlign(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let restArgs = args.slice(2);\n\n    typeCheck(firstArg, [RSTRING_T, RSYM_T]);\n    typeCheck(secondArg, [RSTRING_T, RSYM_T]);\n    restArgs.forEach((arg) => typeCheck(arg, [RIMAGE_T]));\n\n    let value = makeOverlay(restArgs.map((arg) => arg.value), firstArg.value, secondArg.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction placeImage(args) {\n    if (args.length < 4) {\n        throw new Error('arity mismatch');\n    }\n\n    let img = args[0];\n    let x = args[1];\n    let y = args[2];\n    let scene = args[3];\n\n    typeCheck(img, [RIMAGE_T]);\n    typeCheck(x, [RNUM_T]);\n    typeCheck(y, [RNUM_T]);\n    typeCheck(scene, [RIMAGE_T]);\n\n    let value = makePlace(img.value, x.value, y.value, scene.value);\n\n    return {value, type: RIMAGE_T};\n}\nfunction empty_Scene(args) {\n    if (args.length < 2) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n\n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n\n    let value;\n    if (thirdArg !== undefined) {\n        typeCheck(thirdArg, [RCOLOR_T, RSTRING_T, RSYM_T]);\n        value = emptyScene(firstArg.value, secondArg.value, thirdArg.value);\n    } else {\n        value = emptyScene(firstArg.value, secondArg.value);\n    }\n\n    return {value, type: RIMAGE_T};\n}\nfunction color(args) {\n    if (args.length < 3) {\n        throw new Error('arity mismatch');\n    }\n\n    let firstArg = args[0];\n    let secondArg = args[1];\n    let thirdArg = args[2];\n    let fourthArg = args[3];\n    \n    typeCheck(firstArg, [RNUM_T]);\n    typeCheck(secondArg, [RNUM_T]);\n    typeCheck(thirdArg, [RNUM_T]);\n\n    let value;\n    if (fourthArg !== undefined) {\n        typeCheck(fourthArg, [RNUM_T]);\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value, fourthArg.value);\n    } else {\n        value = makeColor(firstArg.value, secondArg.value, thirdArg.value);\n    }\n\n    return {value, type: RCOLOR_T};\n}\n\nexport {interp, parseCheck, initEnv, parsePrefix, interpPrefix,\n        isRVAR, isRAPP, isRFUNCT, isRNUM, isRBOOL, isRSTRING, isRLIST, isRSYM, isRIMAGE, isRCOLOR, isRIF, isRSTRUCT,\n        RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T, RIMAGE_T, RCOLOR_T, RIF_T,\n        unparse_cons, unparse_list};\n","import {isRBOOL} from './interpreter.js';\n\n/************\n    Colors\n************/\n\n// value to put in child formulas that don't have an output for that row\nexport const gray = {gray: 'gray'};\n// value to put in child formulas that have an error output for that row (non-boolean and non-gray)\nexport const pink = {pink: 'pink'};\n// value that indicates an uninitialized input\nexport const yellow = {yellow: 'yellow'};\n\n/*********************\n   Functions I Want\n*********************/\n// [Program] -> Boolean\n// returns true if progs has at least one member and all of its members are boooleans\n//    otherwise returns false\nexport function allBools(progs){\n    if (progs.length === 0 || progs.every((prog) => prog === gray)) {\n        return false;\n    }\n\n    return progs.every((prog) => prog === gray || isRBOOL(prog));\n}\n\nexport function isBooleanFormula(formula) {\n    return allBools(formula.outputs) || formula.thenChildren !== undefined;\n}\n\n","import {yellow, isBooleanFormula} from './header.js';\nimport {RVAR_T, RAPP_T, RFUNCT_T, RNUM_T, RBOOL_T, RSTRING_T, RLIST_T, RSYM_T} from './interpreter.js';\n\n/*********************\n    Pretty Printer\n*********************/\n\n/***\n    Data Definitions\n\n    a DOC is one of\n    - NIL\n    - TEXT\n    - LINE\n\n    A NIL is\n    () => {type: 'NIL'}\n\n    A TEXT is\n    () => {type: 'TEXT',\n    text: String,\n    rest: DOC}\n\n    A LINE is\n    () => {type: 'LINE',\n    indent: Integer,\n    rest: DOC}\n\n    A Doc is one of\n    - Nil\n    - Concat\n    - Nest\n    - Text\n    - Line\n    - Union\n\n    A Nil is\n    {type: 'nil'}\n    A Nest is\n    {type:   'nest',\n    indent: Integer,\n    rest:   Doc}\n\n    A Text is\n    {type: 'text',\n    text: String}\n\n    A Line is\n    {type: 'line'}\n\n    A Concat is\n    {type: 'concat',\n    left: Doc,\n    right: () => Doc}\n\n    A Union is\n    {type:  'union',\n    left:  Doc,\n    right: () => Doc}\n\n    A Pair is\n    {doc:    Doc,\n    indent: Integer}\n***/\n\n// DOC\nconst NIL = () => ({type: 'NIL'});\n\n// Doc\nconst nil = {type: 'nil'};\n\n// String -> Doc\nfunction text (string) {\n    if (string === '') {\n        return nil;\n    } else {\n        return {type: 'text', text: String(string)};\n    }\n}\n\n// Doc\nconst line = {type: 'line'};\n\n// Doc, () => Doc -> Doc\nfunction union (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    return {type: 'union', left: docL, right: docR};\n}\n\n// Doc, () => Doc -> Doc\nfunction concat (docL, docR) {\n    if (typeof docR !== 'function') {\n        throw new Error(\"docR isn't a thunk\");\n    }\n    // switch(docR.type) {\n    // case 'union':\n    //     return union(concat(docL, docR.left), concat(docL, docR.right));\n    // default:\n    //     break;\n    // }\n    switch (docL.type) {\n        case 'nil':\n            return docR();\n        case 'concat':\n            return {type: 'concat', left: docL.left, right: () => concat(docL.right(), docR)};\n        case 'union':\n            return union(concat(docL.left, docR), () => concat(docL.right(), docR));\n        default:\n            return {type: 'concat', left: docL, right: docR};\n    }\n}\n\n// Integer -> Doc\nfunction nest (i, doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(nest(i, doc.left), () => nest(i, doc.right()));\n        case 'nest':\n            return {type: 'nest', indent: doc.indent + i, rest: doc.rest};\n        case 'text':\n            return doc;\n        case 'line':\n            return {type: 'nest', indent: i, rest: doc};\n        case 'union':\n            return union(nest(i, doc.left), () => nest(i, doc.right()));\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// DOC -> String\nfunction layout (thunk) {\n\n    let doc = thunk();\n\n    switch (doc.type) {\n        case 'NIL':\n            return '';\n        case 'TEXT':\n            return doc.text + layout(doc.rest);\n        case 'LINE':\n            return '\\n' + ' '.repeat(doc.indent) + layout(doc.rest);\n        default:\n            throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n    }\n}\n\n// Doc -> Doc\nfunction group (doc) {\n    return union(flatten(doc), () => doc);\n}\n\n// Doc -> Doc\nfunction flatten (doc) {\n    switch (doc.type) {\n        case 'nil':\n            return nil;\n        case 'concat':\n            return concat(flatten(doc.left), () => flatten(doc.right()));\n        case 'nest':\n            return flatten(doc.rest);\n        case 'text':\n            return doc;\n        case 'line':\n            return text(' ');\n        case 'union':\n            return flatten(doc.left);\n        default:\n            throw Error(`unnexpected document type: ${doc.type}`);\n    }\n}\n\n// Integer, Integer -> (Doc -> String)\nfunction makePretty (width, ribbon) {\n\n    // Integer, Integer, Doc -> DOC\n    function best (thisRibbon, current, doc) {\n        return be(thisRibbon, current, [{indent: 0, doc: doc}]);\n    }\n\n    // DOC -> DOC\n    function memoize(thunk) {\n        let seen = false;\n        let value;\n\n        return () => {\n            if (seen) {\n                return value;\n            } else {\n                seen = true;\n                value = thunk();\n                return value;\n            }\n        };\n    }\n\n    // Integer, Integer, [Pair] -> DOC\n    function be (r, k, pairs) {\n        if (pairs.length === 0) {\n            return NIL;\n        }\n\n        let doc = pairs[0].doc;\n        let indent = pairs[0].indent;\n        let rest = pairs.slice(1);\n\n        switch (doc.type) {\n            case 'nil':\n                return be(r, k, rest);\n            case 'concat':\n                return be(r, k, [{indent, doc: doc.left}, {indent, doc: doc.right()}, ...rest]);\n            case 'nest':\n                return be(r, k, [{indent: indent + doc.indent, doc: doc.rest}, ...rest]);\n            case 'text':\n                if (doc.text === '') {\n                    return NIL;\n                } else {\n                    return memoize(() => ({type: 'TEXT', text: doc.text, rest: memoize(() => (be(r, k + doc.text.length, rest)()))}));\n                }\n            case 'line':\n                return memoize(() => ({type: 'LINE', indent: indent, rest: memoize(() => (be(r + indent, indent, rest)()))}));\n            case 'union':\n                return better(r, k, be(r, k, [{indent, doc: doc.left}, ...rest]),\n                                    memoize(() => (be(r, k, [{indent, doc: doc.right()}, ...rest])())));\n            default:\n                console.log(doc());\n                throw Error(`unnexpected document type: ${doc.type}`);\n        }\n    }\n\n    // Integer, Integer, Integer, DOC, DOC -> DOC\n    function better (thisRibbon, current, docL, docR) {\n        if (fits(width - current, thisRibbon - current, docL)) {\n            return docL;\n        } else {\n            return docR;\n        }\n    }\n\n    // Integer, Integer, DOC -> Boolean\n    function fits(diffWidth, diffRibbon, thunk) {\n        if (diffWidth < 0 || diffRibbon < 0) {\n            return false;\n        }\n\n        let doc = thunk();\n\n        switch (doc.type) {\n            case 'NIL':\n                return true;\n            case 'TEXT':\n                return fits(diffWidth - doc.text.length, diffRibbon - doc.text.length, doc.rest);\n            case 'LINE':\n                return true;\n            default:\n                throw Error(`unnexpected DOCUMENT type: ${doc.type}`);\n        }\n    }\n\n    function pretty (doc) {\n        return layout(best(ribbon, 0, doc));\n    }\n\n    return pretty;\n}\n\n/***\n    Utility Functions\n***/\n\n// Doc, Doc -> Doc\nfunction putSpace (docL, docR) {\n    return concat(docL, () => concat(text(' '), () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction putLine (docL, docR) {\n    return concat(docL, () => concat(line, () => docR));\n}\n\n// Doc, Doc -> Doc\nfunction compose (docL, docR) {\n    return concat(docL, () => docR);\n}\n\n// (Doc -> Doc -> Doc), [Doc] -> Doc\nfunction folddoc (f, docs) {\n    if (docs.length === 0) {\n        return nil;\n    } else if (docs.length === 1) {\n        return docs[0];\n    } else {\n        return f(docs[0], folddoc(f, docs.slice(1)));\n    }\n}\n\n// [Doc] -> Doc\n// puts a space between docs\nfunction spread (docs) {\n    return folddoc(putSpace, docs);\n}\n\n// [Doc] -> Doc\n// puts a line between docs\nfunction stack (docs) {\n    return folddoc(putLine, docs);\n}\n\n// [Doc] -> Doc\n// puts docs right next to eachother\nfunction level (docs) {\n    return folddoc(compose, docs);\n}\n\n// String -> Doc -> String -> Doc\n// puts the given document between left and right\nfunction bracket (left, doc, right) {\n    return level([text(left), doc, text(right)]);\n}\n\n/**************************************\n    Thing that Turns Tables Into BSL\n**************************************/\n\n// Program -> Doc\nfunction progToDoc_cons (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_cons(program.value.funct), ...program.value.args.map(progToDoc_cons)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T: // this just does cons, not list\n            if (program.value === null) {\n                return text(\"'()\");\n            } else {\n                return nest(1, bracket('(', group(stack([text('cons'), progToDoc_cons(program.value.a), progToDoc_cons(program.value.d)])), ')'));\n            }\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// Program -> Doc\nfunction progToDoc_list (program) {\n    switch (program.type) {\n        case RVAR_T:\n            return text(program.value);\n        case RAPP_T:\n            return nest(1, bracket('(', group(stack([progToDoc_list(program.value.funct), ...program.value.args.map(progToDoc_list)])), ')'));\n        case RFUNCT_T:\n            return text('function');\n        case RNUM_T:\n            return text(program.value);\n        case RBOOL_T:\n            return text('#' + program.value);\n        case RSTRING_T:\n            return text('\"' + program.value + '\"');\n        case RLIST_T:\n            if (program.value === null) {\n                return text(\"'()\");\n            }\n\n            let list = program.value.d,\n                elems = progToDoc_list(program.value.a);\n            while (list.value !== null) {\n                elems = stack([elems, progToDoc_list(list.value.a)]);\n                list = list.value.d;\n            }\n\n            return bracket('(', spread([text('list'), group(elems)]), ')');\n        case RSYM_T:\n            return text(\"'\" + program.value);\n        default:\n            throw new Error('unknown program type');\n    }\n}\n\n// [Table] -> String\nfunction toBSL(tables, listOrCons, width, ribbon) {\n    // TODO make me work better somehow\n    let progToDoc;\n    if (listOrCons === 'cons') {\n        progToDoc = progToDoc_cons;\n    } else {\n        progToDoc = progToDoc_list;\n    }\n\n    let pretty = makePretty(width, ribbon);\n    let tableBSLs = tables.map((table) => tableToString(table)).join('\\n\\n');\n    return tableBSLs;\n\n    // Table -> Doc\n    function tableToString(table) {\n        let name = fieldToDoc(table.name);\n        let sig = fieldToDoc(table.signature);\n        let purp = fieldToDoc(table.purpose);\n        let params = spread(table.params.map((param) => fieldToDoc(param.name)));\n\n        let checkExpects = table.examples.map((example) => {\n            let inputs = stack(example.inputs.map((input) => fieldToDoc(input.prog)));\n            let want = fieldToDoc(example.want);\n\n            return pretty(nest(1, bracket('(', group(stack([text('check-expect'), bracket('(', nest(1, stack([name, inputs])), ')'), want])), ')')));\n        }).join('\\n');\n\n        let body = formulasToDoc(table.formulas);\n\n        let signature = pretty(spread([text(';;'), name, text(':'), sig]));\n        let purpose = pretty(spread([text(';;'), purp]));\n        let funct = pretty(nest(2, bracket('(', spread([text('define'), stack([bracket('(', spread([name, params]), ')'), body])]), ')')));\n\n        return [signature, purpose, funct, '', checkExpects].join('\\n');\n    }\n\n    // [Formula] -> Doc\n    function formulasToDoc(formulas) {\n        // [Formula] -> {bools: [Formula], nonbools: [Formula]}\n        function splitFormulas(formulas) {\n            let bools = formulas.filter(isBooleanFormula);\n            let nonbools = formulas.filter((formula) => !isBooleanFormula(formula));\n            return {bools, nonbools};\n        }\n\n        let splitForms = splitFormulas(formulas);\n\n        // this one's a doc\n        let nonbools = stack(splitForms.nonbools.map((form) => fieldToDoc(form.prog))),\n            bools;\n\n        if (splitForms.bools.length !== 0) {\n            // this is an array of documents\n            let condRows = splitForms.bools.map((form) => (\n                nest(1, bracket('[', stack([fieldToDoc(form.prog), formulasToDoc(form.thenChildren)]),']'))\n            ));\n            // this one is just a doc\n            bools = nest(2, bracket('(', stack([text('cond'), ...condRows]),')'));\n        }\n\n        if (splitForms.bools.length !== 0 && splitForms.nonbools.length !== 0) {\n            return stack([bools, nonbools]);\n        } else if (splitForms.bools.length !== 0) {\n            return bools;\n        } else if (splitForms.nonbools.length !== 0) {\n            return nonbools;\n        } else {\n            return nil;\n        }\n    }\n\n    // Field (yellow or string or program) -> Doc\n    function fieldToDoc(input) {\n        if (input.yellow === 'yellow') {                 // empty\n            return text('...');\n        } else if (typeof input === 'string') { // name\n            return text(input);\n        } else {                                // program\n            return progToDoc(input);\n        }\n    }\n}\n\n/****************\n    Unparsers\n****************/\nconst widePretty = makePretty(Infinity, Infinity);\n\nexport let unparse_cons = (prog) => widePretty(progToDoc_cons(prog));\nexport let unparse_list = (prog) => widePretty(progToDoc_list(prog));\n\nexport default toBSL;\n","function sessionURL(sessionID) {\n    return (\"http://107.170.76.216:8000/log/session\" + sessionID);\n}\n\nclass Sendifier {\n    constructor(delay, sessionID) {\n        this.delay = delay;\n        this.url = sessionURL(sessionID);\n        this.item = false;\n        this.sendItem = this.sendItem.bind(this);\n        this.sendItem();\n    }\n\n    sendItem() {\n        this.clear();\n        if (this.item) {\n            const sent = this.item;\n            fetch(this.url, {\n                method: 'POST', // or 'PUT'\n                body: JSON.stringify(sent), // data can be `string` or {object}!\n                mode: 'no-cors',\n                headers: { 'Content-Type': 'application/json' }})\n            .then(() => {\n                      this.timerID = setTimeout(this.sendItem, this.delay);\n                  },\n                  () => {\n                      if (!this.item) this.item = sent;\n                      this.timerID = setTimeout(this.sendItem, this.delay);\n                  });\n            this.item = false;\n        } else {\n            this.timerID = setTimeout(this.sendItem, this.delay);\n        }\n    }\n\n    setItem(news) {\n        this.item = news;\n    }\n\n    clear() {\n        if (this.timerID) {\n            clearTimeout(this.timerID);\n            delete this.timerID;\n        }\n    }\n}\n\nexport { sessionURL, Sendifier };\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport TimeAgo from 'react-timeago';\nimport {Link} from 'react-router-dom';\nimport {interp, parseCheck, parsePrefix, interpPrefix, unparse_cons, unparse_list, initEnv, isRAPP, RFUNCT_T, isRLIST, isRIMAGE, isRBOOL, isRSTRUCT} from './interpreter.js';\nimport {gray, pink, yellow, allBools, isBooleanFormula} from './header.js';\nimport {paint, width, height, makeRectangle, makeOverlay} from './image.js';\nimport toBSL from './prettyprint.js';\nimport {sessionURL, Sendifier} from './sendifier.js';\nimport Octicon, {Trashcan, Alert, Check} from '@primer/octicons-react';\nimport './App.css';\n\n/*****************************\n  Universal Constants I Want\n*****************************/\n// value to indicate a dry run, i.e. don't actually change the underlying structure, just say\n// if the given value exists or not\nconst dryRun = {yo: 'don\\'t actually change anything'};\n// this one's different because it has a $ at the end so it tests\n// the string until the end\nconst nameRE = /^(?!-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?=$|[\\s\",'`()[\\]{}|;#]))[^\\s\",'`()[\\]{}|;#]+$/;\n\n\n/*********************\n    Key Management\n*********************/\n// variable used by takeKey and peekKey to generate keys\nlet keyCount = 0;\n\n// Number\n// returns a unique key\nfunction takeKey() {\n    return keyCount++;\n}\n\n// [Number] -> Number (the brackets here mean optional, not array)\n// returns current key without changing it\n// shoud be used to look at current state of key without actually taking it\n// optionally takes a number as an argument, in which case it returns the key that number\n// of steps ahead of the current key\nfunction peekKey(lookahead = 0) {\n    return keyCount + lookahead;\n}\n\n/**************\n    Globals\n**************/\n// TODO: maybe get rid of these?\nlet unparse = unparse_cons;\nlet listOrCons = 'cons';\n\nfunction unparse_to_string(prog) {\n    if (prog.yellow === 'yellow') {\n        return '';\n    }\n    return unparse(prog).join('');\n}\n\n/*****************\n    Deep Equals\n*****************/\n// Program -> Program -> Boolean\n// checks if two programs are equivalent, recurs on lists and applications\n// may not quite work on functions because I use js functions, not data represented closures or something\n//    thus 2 functions are only equal if they're a reference to the same object\n// maybe move this to interpreter.js?\nfunction deepEquals(proga, progb) {\n    if (proga.type !== progb.type) {\n        return false;\n    }\n\n    if (isRLIST(proga)) {\n        if (proga.value === null || progb.value === null) {\n            return proga.value === progb.value;\n        }\n        return deepEquals(proga.value.a, progb.value.a) && deepEquals(proga.value.d, progb.value.d);\n    }\n\n    // this case will prolly never even happen...\n    if (isRAPP(proga)) {\n        if (proga.value.args.length !== progb.value.args.length) {\n            return false;\n        }\n        let functCheck = deepEquals(proga.value.funct, progb.value.funct);\n        let argCheck = proga.value.args.map((arga, i) => deepEquals(arga, progb.value.args[i])).every((elem) => elem);\n        return functCheck && argCheck;\n    }\n\n    if (isRSTRUCT(proga)) {\n        let structa = proga.value;\n        let structb = progb.value;\n\n        let idSame = structa.id === structb.id;\n\n        let fieldsSame;\n        if (structa.fields.length === structb.fields.length) {\n            fieldsSame = structa.fields.every((fielda, i) => deepEquals(fielda.binding, structb.fields[i].binding));\n        } else {\n            fieldsSame = false;\n        }\n\n        return idSame && fieldsSame;\n    }\n\n    if (isRIMAGE(proga)) {\n        // Image -> Uint8ClampedArray\n        // takes an image and returns an array containing RGBA values of all pixels in the image\n        // a lot of this was taken from https://stackoverflow.com/questions/3768565/drawing-an-svg-file-on-a-html5-canvas\n        // sometimes this doesn't work...\n        //   - when it is first used in a certain instance of the table method, it returns an array containing only zeros,\n        //     however, after this I'm pretty sure it returns the array it should be returning\n        //   - maybe something hasn't been properly initialized by the first time around?\n        function toRGBAArray (image) {\n            let can = document.createElement('canvas');\n            can.width = width(image);\n            can.height = height(image);\n            let ctx = can.getContext('2d');\n            let svg = paint(image);\n\n            // pretty much just turns the jsx into a string\n            let xml = ReactDOMServer.renderToString(svg);\n\n            // make the xml base 64 for some reason (I dunno why)\n\n\n            let svg64 = btoa(xml);\n            // header that does stuff I guess\n            let b64Start = 'data:image/svg+xml;base64,';\n\n            // prepend a the header to the xml data\n            let image64 = b64Start + svg64;\n\n            // make image that contains the xml data so we can draw it\n            let img = document.createElement('img');\n            //console.log(img);\n            img.src = image64;\n\n            // draw the image onto the canvas\n            ctx.drawImage(img, 0, 0);\n\n            return ctx.getImageData(0, 0, width(image), height(image)).data;\n        }\n\n        let imgA = proga.value;\n        let imgB = progb.value\n\n        let dataA_red = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'red')]));\n        let dataA_green = toRGBAArray(makeOverlay([imgA, makeRectangle(width(imgA), width(imgA), 'solid', 'green')]));\n\n        let dataB_red = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'red')]));\n        let dataB_green = toRGBAArray(makeOverlay([imgB, makeRectangle(width(imgB), width(imgB), 'solid', 'green')]));\n\n        if (width(imgA) !== width(imgB) || height(imgA) !== height(imgB)) { // images have different dimensions\n            return false;\n        }\n\n        let redSame = dataA_red.every((datumA_red, i) => datumA_red === dataB_red[i]);\n        let greenSame = dataA_green.every((datumA_green, i) => datumA_green === dataB_green[i]);\n\n        return redSame && greenSame;\n    }\n\n    return proga.value === progb.value;\n}\n\n/*********************\n   React Components\n*********************/\n\n// it's a picture of a colon\nfunction Colon (props) {\n    return (\n        <div className='colon'>:</div>\n    );\n}\n\n// It's an error message (oh no!)\nfunction ErrorMessage (props) {\n    return (\n        <div>\n          {props.error.message}\n          <div title={\"Oh no! You got an error!\"} className=\"alert\">\n            <Octicon\n              icon={Alert} size=\"small\" verticalAlign=\"middle\"\n              ariaLabel='Error!'/>\n          </div>\n        </div>\n    );\n}\n\n/*** Buttons ***/\n// Button that probably removes something\nfunction RemButton(props){\n    return (\n        <div className='remove'\n             onClick={props.onClick}\n             title={props.title}>\n          <Octicon\n            icon={Trashcan} size=\"small\" verticalAlign=\"middle\"\n            ariaLabel='Remove'/>\n        </div>\n    );\n}\n\n/*** Inputs ***/\nclass ValidatedInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        if (this.props.text === undefined) {\n            const text = e.target.value;\n            this.setState({text});\n            if (this.props.isValid(text)) {\n                this.props.onValid(text);\n            } else if (text === '' && !this.props.dummy) {\n                this.props.onEmpty();\n            }\n        }\n    }\n\n    render() {\n        const text = this.props.text === undefined ? this.state.text\n                   : this.props.text.yellow === 'yellow' ? ''\n                   : this.props.text;\n        let className;\n        if (this.props.dummy && text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(text)) { // valid\n            className = 'valid_input';\n        } else if (text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n        \n        let size;\n        if (text.length === 0)\n            size = this.props.placeholder.length;\n        else\n            size = Math.max(text.length + 2, 4);\n\n        return (\n            <input\n              type={'text'}\n              className={className}\n              size={size}\n              placeholder={this.props.placeholder}\n              onChange={this.textChange}\n              value={text}\n            />\n        );\n    }\n}\n\nclass ValidatedArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: ''};\n        this.textChange = this.textChange.bind(this);\n    }\n\n    textChange(e) {\n        if (this.props.text === undefined) {\n            const text = e.target.value;\n            this.setState({text});\n            if (this.props.isValid(text)) {\n                this.props.onValid(text);\n            } else if (text === '' && !this.props.dummy) {\n                this.props.onEmpty();\n            }\n        }\n    }\n\n    render() {\n        const text = this.props.text === undefined ? this.state.text\n                   : this.props.text.yellow === 'yellow' ? ''\n                   : this.props.text;\n        let className;\n        if (this.props.dummy && text === '') { // empty dummy\n            className = 'dummy_input';\n        } else if (this.props.isValid(text)) { // valid\n            className = 'valid_input';\n        } else if (text === '') { // empty non-dummy\n            className = 'empty_input';\n        } else { // invalid\n            className = 'invalid_input';\n        }\n\n        let rows,\n            newlines = text.match(/\\n/g);\n        if (newlines === null) {\n            rows = 1;\n        } else {\n            rows = newlines.length + 1;\n        }\n\n        let cols;\n        if (text.length === 0)\n            cols = this.props.placeholder.length;\n        else\n            cols = Math.max(...text.split('\\n').map((line) => line.length + 1), 4);\n\n        return (\n            <textarea\n              className={className + ' validated_area'}\n              rows={rows}\n              cols={cols}\n              placeholder={this.props.placeholder}\n              onChange={this.textChange}\n              spellCheck={false}\n              value={text}\n            />\n        );\n    }\n}\n\n/*** Table Sections ***/\n// let's put everything in one table woo\nfunction Succinct(props) {\n\n    function tableChange(newTab, oldTab) {\n        const exists = props.tables.indexOf(oldTab) !== -1;\n\n        let alteredTabs;\n        if (exists) {\n            alteredTabs = props.tables.map((table) => table === oldTab ? newTab : table);\n        } else {\n            alteredTabs = [...props.tables, newTab];\n        }\n\n        props.programChange(alteredTabs);\n    }\n\n    function remTable(deadTab) {\n        let aliveTabs = props.tables.filter((table) => table !== deadTab);\n        props.programChange(aliveTabs);\n    }\n\n    // String -> Boolean\n    function validName(text, modTab) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        let tableVars = props.tables.filter((table) => table !== modTab).map((otherTab) => ({name: otherTab.name, binding: null}));\n        let paramVars = modTab.params.map((param) => ({name: param, binding: null}));\n        let env = [...props.globalEnv, ...tableVars, ...paramVars];\n\n        return nameRE.test(text) && !inEnv(text, env);\n    }\n\n    // TODO make more sophisticated parser that can handle functions as parameters in signature\n    function validSignature(text, modTab) {\n        let sides = text.split(/\\s+->\\s+/g);\n\n        if (sides.length !== 2) {\n            return false;\n        }\n\n        let paramTypes = sides[0].match(/[a-zA-Z]+/g);\n        let outType = sides[1].match(/[a-zA-Z]+/g);\n\n        let noNull = paramTypes !== null && outType !== null;\n\n        return noNull && paramTypes.length === modTab.params.length && outType.length === 1;\n    }\n\n    const reals = props.tables.map((table) => (\n        <div key={table.key} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Table Name'\n                text={props.disabled ? table.name : undefined}\n                isValid={(text) => validName(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                name: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            name: yellow},\n                                           table)}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Signature'\n                text={props.disabled ? table.signature : undefined}\n                isValid={(text) => validSignature(text, table)}\n                onValid={(text) => tableChange({...table,\n                                                signature: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            signature: yellow},\n                                           table)}\n              />\n              <RemButton\n                onClick={props.disabled ? undefined : (() => remTable(table))}\n                title='Remove this table'\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={false}\n                placeholder='Purpose'\n                text={props.disabled ? table.purpose : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({...table,\n                                                purpose: text},\n                                               table)}\n                onEmpty={() => tableChange({...table,\n                                            purpose: yellow},\n                                           table)}\n              />\n            </div>\n            <SuccinctTab\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              table={table}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, table)}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    ));\n\n    const dummy = (\n        <div key={peekKey()} className='flex_horiz table'>\n          <div className='flex_vert no_grow'>\n            <div className='flex_horiz no_grow signature'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Table Name'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => validName(text, {params: []})}\n                onValid={(text) => tableChange({name: text,\n                                                signature: yellow,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n              <Colon/>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Signature'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: text,\n                                                purpose: yellow,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <div className='flex_horiz no_grow'>\n              <ValidatedInput\n                dummy={true}\n                placeholder='Purpose'\n                text={props.disabled ? '' : undefined}\n                isValid={(text) => text !== ''}\n                onValid={(text) => tableChange({name: yellow,\n                                                signature: yellow,\n                                                purpose: text,\n                                                examples: [],\n                                                formulas: [],\n                                                params: [],\n                                                key: takeKey()},\n                                               {})}\n              />\n            </div>\n            <SuccinctTab\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              table={{name: yellow,\n                      signature: yellow,\n                      purpose: yellow,\n                      examples: [],\n                      formulas: [],\n                      params: [],\n                      key: peekKey()}}\n              tableNames={props.tables.map((table) => table.name)}\n              tableChange={(newTab) => tableChange(newTab, {})}\n            />\n          </div>\n          <div className='grow'>{/* div to prevent text fields from stretching across the screen */}</div>\n        </div>\n    );\n\n    return (\n        <div>\n          {[...reals, dummy]}\n        </div>\n    );\n}\n\nfunction SuccinctTab(props) {\n    function paramsExamplesChange(params, examples) {\n        props.tableChange({...props.table, params, examples});\n    }\n\n    function formulasChange(formulas) {\n        props.tableChange({...props.table, formulas});\n    }\n\n    function examplesFormulasChange(examples, formulas) {\n        props.tableChange({...props.table, examples, formulas});\n    }\n\n    return (\n        <table className={'grow'}>\n          <SuccinctHead\n            disabled={props.disabled}\n            globalEnv={props.globalEnv}\n            params={props.table.params}\n            examples={props.table.examples}\n            tableNames={props.tableNames}\n            paramsExamplesChange={paramsExamplesChange}\n\n            formulas={props.table.formulas}\n            formulasChange={formulasChange}\n          />\n          <SuccinctBody\n            disabled={props.disabled}\n            globalEnv={props.globalEnv}\n            examples={props.table.examples}\n            formulas={props.table.formulas}\n            paramNames={props.table.params.map((param) => param.name)}\n            examplesFormulasChange={examplesFormulasChange}\n            formulasChange={formulasChange}\n          />\n        </table>\n    );\n}\n\nfunction SuccinctHead(props) {\n    // String -> Boolean\n    // checks if the given string is a valid program\n    function validProg(text) {\n        let isgood = true;\n\n        try {\n            parseCheck(text);\n        } catch(e) {\n            if (e instanceof SyntaxError) {\n                isgood = false;\n            } else { // this should never happen\n                throw e;\n            }\n        }\n\n        return isgood;\n    }\n\n    // Formula -> Side Effect\n    // removes a given formula from the tree\n    function remFormula(deadForm) {\n        const aliveForms = props.formulas.filter((formula) => formula !== deadForm);\n        props.formulasChange(aliveForms);\n    }\n\n    // Formula -> Formula -> Side Effect\n    // replaces one formula with another one\n    function formulaChange(newForm, oldForm) {\n\n        let alteredForms;\n        if (props.formulas.indexOf(oldForm) === -1) {\n            alteredForms = [...props.formulas, newForm];\n        } else {\n            alteredForms = props.formulas.map((form) => form === oldForm ? newForm : form);\n        }\n        props.formulasChange(alteredForms);\n    }\n\n    // Formula -> Number -> Number\n    // gives the maximum depth of a Formula, second parameter is an accumulator\n    function maxDepth(formula, curMax) {\n        if (!isBooleanFormula(formula)) {\n            return curMax;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => Math.max(acc, maxDepth(child, curMax + 1)), curMax + 1);\n        }\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    // Number -> [Number]\n    // takes a number, returns an array that counts from 1 to that number, input of 0 gives empty array\n    // e.g. countUp(5) -> [1, 2, 3, 4, 5]\n    function countUp(num) {\n        // special case: want an empty array for 0\n        if (num === 0) {\n            return [];\n        } else if (num === 1)\n            return [1];\n        else\n            return [...countUp(num - 1), num];\n    }\n\n    const abyss = props.formulas.reduce((acc, formula) => Math.max(acc, maxDepth(formula, 0)), 0);\n    const numParams = props.params.length;\n\n    const reals = props.formulas.map((formula) => (\n        <th key={formula.key} colSpan={countWidth(formula)} >\n          <div className='flex_horiz'>\n            <ValidatedArea\n              placeholder={'Formula'}\n              dummy={false}\n              text={props.disabled ? unparse_to_string(formula.prog) : undefined}\n              isValid={validProg}\n              onValid={(text) => formulaChange({...formula,\n                                                prog: parseCheck(text)},\n                                               formula)}\n              onEmpty={() => formulaChange({...formula,\n                                            prog: yellow},\n                                           formula)}\n            />\n            <RemButton\n              title={'Remove this formula'}\n              onClick={props.disabled ? undefined : (() => remFormula(formula))}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()} colSpan={1}>\n          <div className='flex_horiz'>\n            <ValidatedArea\n              dummy={true}\n              placeholder='Formula'\n              text={props.disabled ? '' : undefined}\n              isValid={validProg}\n              onValid={(text) => formulaChange({prog: parseCheck(text),\n                                                outputs: props.examples.map((_) => yellow),\n                                                key: takeKey()},\n                                               {})}\n            />\n          </div>\n        </th>\n    );\n\n    const children = countUp(abyss).map((depth) => (\n        <tr key={depth}>\n          <th colSpan={numParams + 2}>{/* empty cell to align with example RemButton and Parameters */}</th>\n          {props.formulas.map((formula) => (\n              <DepictFormula\n                disabled={props.disabled}\n                key={formula.key}\n                formula={formula}\n                depth={depth}\n                numExamples={props.examples.length}\n                formulaChange={(newForm) => formulaChange(newForm, formula)}\n              />\n          ))}\n          {Array(depth).map((_, i) => (<th key={i}>{/* empty cell under some parent dummy formula */}</th>))}\n          <th>{/* empty cell above wants */}</th>\n        </tr>\n    ));\n\n    return (\n        <thead>\n          <tr>\n            <Parameters\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              params={props.params}\n              examples={props.examples}\n              tableNames={props.tableNames}\n              paramsExamplesChange={props.paramsExamplesChange}\n            />\n            {/* top level formulas */}\n            {[...reals, dummy, <th key={peekKey(1)}>{/* empty cell above wants */}</th>]}\n          </tr>\n          {/* rest of formulas */}\n          {children}\n        </thead>\n    );\n}\n\nfunction Parameters(props) {\n    function validParam(text, modParam) {\n        function inEnv(name, env) {\n            return env.reduce((acc, variable) => {\n                if (acc) {\n                    return true;\n                }\n\n                return variable.name === name;\n\n            }, false);\n        }\n\n        // These are not technically Variables, see note above\n        let paramVars = props.params.filter((param) => param !== modParam).map((param) => ({name: param.name, binding: null}));\n        let tableVars = props.tableNames.map((name) => ({name: name, binding: null}));\n        let env = [...props.globalEnv, ...tableVars, ...paramVars];\n\n        return nameRE.test(text) && !inEnv(text, env);\n    }\n\n    function remParam(deadParam) {\n        const deadIndex = props.params.indexOf(deadParam);\n        const aliveParams = props.params.filter((param) => param !== deadParam);\n\n        // need to maintain #inputs = #params\n        const modExamples = props.examples.map((example => ({...example,\n                                                             inputs: example.inputs.filter((_, i) => i !== deadIndex)})));\n\n        props.paramsExamplesChange(aliveParams, modExamples);\n    }\n\n    // String, Number -> Side Effect\n    // changes the name of the given parameter\n    // if that parameter doesn't exist yet, it makes it\n    function paramChange(newParam, modParam) {\n\n        let alteredParams, alteredExamples;\n        if (props.params.indexOf(modParam) === -1) {\n            alteredParams = [...props.params, newParam];\n            // need to maintain #inputs = #params\n            alteredExamples = props.examples.map((example) => ({...example,\n                                                                inputs: [...example.inputs, {prog: yellow, key: takeKey()}]}));\n        } else {\n            alteredParams = props.params.map((param) => param === modParam ? newParam : param);\n            // examples don't actually change\n            alteredExamples = props.examples;\n        }\n\n        props.paramsExamplesChange(alteredParams, alteredExamples);\n    }\n\n    const reals = props.params.map((param) => (\n        <th key={param.key} >\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={false}\n              placeholder='Parameter'\n              text={props.disabled ? param.name : undefined}\n              isValid={(text) => validParam(text, param)}\n              onValid={(text) => paramChange({...param,\n                                              name: text},\n                                             param)}\n              onEmpty={() => paramChange({...param,\n                                          name: yellow},\n                                         param)}\n            />\n            <RemButton\n              title='Remove this parameter'\n              onClick={props.disabled ? undefined : (() => remParam(param))}\n            />\n          </div>\n        </th>\n    ));\n\n    const dummy = (\n        <th key={peekKey()}>\n          <div className='flex_horiz'>\n            <ValidatedInput\n              dummy={true}\n              placeholder='Parameter'\n              text={props.disabled ? '' : undefined}\n              isValid={(text) => validParam(text, {})}\n              onValid={(text) => paramChange({name: text,\n                                              key: takeKey()},\n                                             {})}\n            />\n          </div>\n        </th>\n    );\n\n    return (\n        <React.Fragment>\n          <th>{/* empty cell to align with example RemButtons */}</th>\n          <React.Fragment>\n            {[...reals, dummy]}\n          </React.Fragment>\n        </React.Fragment>\n    );\n}\n\n/*\n  props: formula, depth, kill, formulaChange\n*/\nfunction DepictFormula(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n\n        return true;\n    }\n\n    // this is pretty macabre...\n    function remChild(deadChild) {\n        const aliveChildren = props.formula.thenChildren.filter((child) => child !== deadChild);\n        props.formulaChange({...props.formula, thenChildren: aliveChildren});\n    }\n\n    function childChange(newChild, modChild) {\n        let children;\n        if (props.formula.thenChildren.indexOf(modChild) === -1) {\n            children = [...props.formula.thenChildren, newChild];\n        } else {\n            children = props.formula.thenChildren.map((child) => child === modChild ? newChild : child);\n        }\n        props.formulaChange({...props.formula, thenChildren: children});\n    }\n\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.depth > 1) {\n        return (\n            <React.Fragment>\n              <th>{/* empty cell to align with parent input */}</th>\n              {isBooleanFormula(props.formula) ?\n               <React.Fragment>\n                 {props.formula.thenChildren.map((child) => (\n                     <DepictFormula\n                       disabled={props.disabled}\n                       key={child.key}\n                       formula={child}\n                       depth={props.depth - 1}\n                       numExamples={props.numExamples}\n                       formulaChange={(formula) => childChange(formula, child)}\n                     />))}\n                 <th>{/* empty cell to align with child input */}</th>\n               </React.Fragment>\n               : <script/> }\n            </React.Fragment>\n        );\n    } else {\n        if (isBooleanFormula(props.formula)) {\n            const reals = props.formula.thenChildren.map((child) => (\n                <th key={child.key} colSpan={countWidth(child)} >\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={false}\n                      placeholder={'Formula'}\n                      text={props.disabled ? unparse_to_string(child.prog) : undefined}\n                      isValid={validProg}\n                      onValid={(text) => childChange({...child,\n                                                      prog: parseCheck(text)},\n                                                     child)}\n                      onEmpty={() => childChange({...child,\n                                                  prog: yellow},\n                                                 child)}\n                    />\n                    <RemButton\n                      title={'Remove this formula'}\n                      onClick={props.disabled ? undefined : (() => remChild(child))}\n                    />\n                  </div>\n                </th>\n            ));\n\n            const dummy = (\n                <th key={peekKey()} colSpan={1}>\n                  <div className='flex_horiz'>\n                    <ValidatedArea\n                      dummy={true}\n                      placeholder='Formula'\n                      text={props.disabled ? '' : undefined}\n                      isValid={validProg}\n                      onValid={(text) => childChange({prog: parseCheck(text),\n                                                      outputs: Array(props.numExamples).fill(yellow),\n                                                      key: takeKey()},\n                                                     {})}\n                    />\n                  </div>\n                </th>\n            );\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                   <React.Fragment>\n                     {[...reals, dummy]}\n                   </React.Fragment>\n                </React.Fragment>\n            );\n        } else {\n\n            return (\n                <React.Fragment>\n                  <th>{/* empty cell to align with parent input */}</th>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nfunction SuccinctBody(props) {\n    function remExample(deadExample) {\n        const deadIndex = props.examples.indexOf(deadExample);\n        // Formula -> Formula\n        // removes the output at deadIndex from the given formula and all of its children (if it has any) so stuff works\n        function removeOutputFromFormula(formula) {\n            let outputs = formula.outputs.filter((_, i) => i !== deadIndex);\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(removeOutputFromFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n\n        const aliveExamples = props.examples.filter((example) => example !== deadExample);\n        const alteredForms = props.formulas.map(removeOutputFromFormula);\n        props.examplesFormulasChange(aliveExamples, alteredForms);\n    }\n\n    function exampleChange(newExample, oldExample) {\n        const exists = props.examples.indexOf(oldExample) !== -1;\n\n        if (newExample === dryRun) {\n            return exists;\n        }\n\n        // Formula -> Formula\n        // adds an init output to the given formula and all of its children (if it has any) so stuff works\n        function addAnotherOutputToFormula(formula) {\n            let outputs = [...formula.outputs, yellow];\n\n            if (isBooleanFormula(formula)) {\n                const thenChildren = formula.thenChildren.map(addAnotherOutputToFormula);\n                return {...formula,\n                        outputs,\n                        thenChildren};\n            } else {\n                return {...formula,\n                        outputs};\n            }\n        }\n\n        let alteredExamples, alteredForms;\n        if (exists) {\n            alteredExamples = props.examples.map((example) => example === oldExample ? newExample : example);\n            alteredForms = props.formulas;\n        } else {\n            alteredExamples = [...props.examples, newExample];\n            alteredForms = props.formulas.map(addAnotherOutputToFormula);\n        }\n\n        props.examplesFormulasChange(alteredExamples, alteredForms);\n        return true; // this doesn't actually do anything\n    }\n\n    const reals = props.examples.map((example, i) => (\n          <tr key={example.key}>\n            <td>\n              <RemButton\n                onClick={props.disabled ? undefined : (() => remExample(example))}\n                title={'Remove this example'}\n              />\n            </td>\n            <Inputs\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={false}\n              inputs={example.inputs}\n              inputsChange={(inputs) => exampleChange({...example, inputs},\n                                                      example)}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              globalEnv={props.globalEnv}\n              dummy={false}\n              formulas={props.formulas}\n              want={example.want}\n              row={i}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={false}\n              want={example.want}\n              wantChange={(want) => exampleChange({...example, want},\n                                                  example)}\n            />\n          </tr>\n    ));\n    \n    const dummy = (\n          <tr key={peekKey(props.paramNames.length)}>\n            <td>{/* empty cell to offset rembutton */}</td>\n            <Inputs\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={true}\n              inputs={props.paramNames.map((_, i) => ({key: peekKey(i)}))}\n              inputsChange={(inputs) => exampleChange({inputs,\n                                                       want: yellow,\n                                                       key: takeKey()},\n                                                      {})}\n            />\n            <td>{/* empty cell to align with param dummy input */}</td>\n            <Outputs\n              globalEnv={props.globalEnv}\n              dummy={true}\n              formulas={props.formulas}\n            />\n            <td>{/* empty cell to align with top level formula dummy input */}</td>\n            <Want\n              disabled={props.disabled}\n              globalEnv={props.globalEnv}\n              dummy={true}\n              wantChange={(want) => exampleChange({want,\n                                                   inputs: props.paramNames.map((_) => ({prog: yellow, key: takeKey()})),\n                                                   key: takeKey()},\n                                                  {})}\n            />\n          </tr>\n    );\n\n    return (\n        <tbody>\n          {[...reals, dummy]}\n        </tbody>\n    );\n}\n\nfunction Inputs(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    function inputChange(newInput, oldInput) {\n        let alteredInputs;\n        if (props.dummy) {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? {...newInput, key: takeKey()} : {prog: yellow, key: takeKey()});\n        } else {\n            alteredInputs = props.inputs.map((input) => input === oldInput ? newInput : input);\n        }\n        props.inputsChange(alteredInputs);\n    }\n\n    // this looks awful...\n    let inputFields = props.inputs.map((input, i) => {\n        let error = <div/>;\n        if (props.dummy) {\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        text={props.disabled ? '' : undefined}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({prog: parseCheck(text)},\n                                                       input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        } else {\n            if (input.prog.yellow !== 'yellow') {\n                try {\n                    interp(input.prog, props.globalEnv);\n                } catch (e) {\n                    error = <ErrorMessage error={e}/>\n                }\n            }\n\n            return (\n                <td key={input.key} >\n                  <div className='flex_vert'>\n                    <div className='flex_horiz'>\n                      <ValidatedArea\n                        dummy={props.dummy}\n                        placeholder={'Input'}\n                        text={props.disabled ? unparse_to_string(input.prog) : undefined}\n                        isValid={validProg}\n                        onValid={(text) => inputChange({...input,\n                                                        prog: parseCheck(text)},\n                                                       input)}\n                        onEmpty={() => inputChange({...input,\n                                                    prog: yellow},\n                                                   input)}\n                      />\n                    </div>\n                    {error}\n                  </div>\n                </td>\n            );\n\n        }\n    });\n\n    return (\n        <React.Fragment>\n          {inputFields}\n        </React.Fragment>\n    );\n}\n\nfunction Outputs(props) {\n    function countWidth(formula) {\n        if (!isBooleanFormula(formula)) {\n            return 1;\n        } else {\n            return formula.thenChildren.reduce((acc, child) => acc + countWidth(child), 2);\n        }\n    }\n\n    if (props.dummy) {\n        return (\n            <React.Fragment>\n            {props.formulas.map((formula) => (\n                <td key={formula.key} colSpan={countWidth(formula)}>{/* empty cell */}</td>\n            ))}\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n              {props.formulas.map((formula) => (\n                  <React.Fragment key={formula.key}>\n                    <TestCell\n                      globalEnv={props.globalEnv}\n                      output={formula.outputs[props.row]}\n                      want={props.want}\n                    />\n                    {isBooleanFormula(formula) ?\n                     <React.Fragment>\n                       <Outputs\n                         globalEnv={props.globalEnv}\n                         formulas={formula.thenChildren}\n                         want={props.want}\n                         row={props.row}\n                       />\n                       <DummyCell\n                         parentOutput={formula.outputs[props.row]}\n                       />\n                     </React.Fragment>\n                     : <script/> }\n                  </React.Fragment>\n              ))}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction TestCell(props) {\n    let output = props.output;\n\n    if (output === gray) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    }\n\n    if (output === pink) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    }\n\n    if (output.yellow === 'yellow') {\n        return (\n            <td className={'yellow'}>\n            </td>\n        );\n    }\n\n    if (output instanceof Error) {\n        return <td><ErrorMessage error={output}/></td>\n    }\n\n    let want;\n    try {\n        want = interp(props.want, props.globalEnv);\n    } catch (e) {\n        want = yellow;\n    }\n\n    if (want.yellow !== 'yellow' && deepEquals(output, want)) {\n        return (\n            <td className='output'>\n              {unparse(output)}\n              <div title={\"Yay! It's right!\"} className=\"check\">\n                <Octicon\n                  icon={Check} size=\"small\" verticalAlign=\"middle\"\n                  ariaLabel='Yay!'/>\n              </div>\n            </td>\n        )\n    } else {\n        return (\n            <td className='output'>\n              {unparse(output)}\n            </td>\n        );\n    }\n}\n\nfunction DummyCell (props) {\n    if (props.parentOutput === gray || props.parentOutput.value === false) {\n        return (\n            <td className={'gray'}>\n            </td>\n        );\n    } else if (props.parentOutput === pink || !isRBOOL(props.parentOutput)) {\n        return (\n            <td className={'pink'}>\n            </td>\n        );\n    } else {\n        return <td></td>;\n    }\n}\n\nfunction Want(props) {\n    function validProg(text) {\n        try {\n            parseCheck(text);\n        } catch(e) {\n            return false;\n        }\n        return true;\n    }\n\n    let valueCell;\n    if (props.dummy || props.want.yellow === 'yellow') {\n        valueCell = <script/>;\n    } else {\n        try {\n            let evalWant = interp(props.want, props.globalEnv);\n            if (deepEquals(evalWant, props.want)) {\n                valueCell = <script/>;\n            } else {\n                valueCell = <td className='output'>{unparse(evalWant)}</td>;\n            }\n        } catch (e) {\n            valueCell = <td><ErrorMessage error={e}/></td>\n        }\n    }\n\n    return (\n        <React.Fragment>\n          <td>\n            <div className='flex_horiz'>\n              <ValidatedArea\n                dummy={props.dummy}\n                placeholder={'Want'}\n                text={props.disabled ? props.dummy ? '' : unparse_to_string(props.want)\n                                     : undefined}\n                isValid={validProg}\n                onValid={(text) => props.wantChange(parseCheck(text))}\n                onEmpty={() => props.wantChange(yellow)}\n              />\n            </div>\n          </td>\n          {valueCell}\n        </React.Fragment>\n    );\n}\n\nclass DefinitionsArea extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {error: false};\n        this.prefixChange = this.prefixChange.bind(this);\n    }\n\n    validPrefix (text) {\n        try {\n            parsePrefix(text);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    prefixChange (text) {\n        this.setState({error: this.props.prefixChange(text)});\n    }\n\n    render () {\n        const e = this.props.error === undefined\n                  ? this.state.error\n                  : this.props.error;\n        return (\n            <div className='flex_horiz'>\n              <div className='flex_vert no_grow'>\n                <ValidatedArea\n                  dummy={false}\n                  placeholder='Definitions Area'\n                  text={this.props.text}\n                  isValid={this.validPrefix}\n                  onValid={this.prefixChange}\n                />\n                {e ? <ErrorMessage error={e}/> : []}\n              </div>\n              <div className='grow'>{/* div to prevent this stuff from growing across the screen */}</div>\n            </div>\n        );\n    }\n}\n\nclass BSLArea extends React.Component {\n    constructor (props) {\n        super(props);\n\n        let showBSL = false;\n        this.state = {showBSL};\n\n        this.toggleDisplay = this.toggleDisplay.bind(this);\n    }\n\n    toggleDisplay (e) {\n        this.setState((state) => ({showBSL: !state.showBSL}));\n    }\n\n    render () {\n\n        let bslArea;\n        if (this.state.showBSL) {\n            bslArea = (\n                <textarea\n                  className='bsl_field'\n                  rows={20}\n                  cols={70}\n                  readOnly={true}\n                  value={toBSL(this.props.tables, listOrCons, 70, 70)}\n                />\n            );\n        } else {\n            bslArea = <div/>;\n        }\n\n        return (\n            <div className='bsl_io'>\n              <div className='bsl_checkbox'>\n                <input\n                  type='checkbox'\n                  id='bsl_toggle'\n                  name='bsl_output'\n                  onChange={this.toggleDisplay}\n                />\n                <label htmlFor='bsl_toggle'>Show Combined Program</label>\n              </div>\n              {bslArea}\n            </div>\n        );\n\n    }\n}\n\n/*\n  notes:\n  #inputs === #params\n  #outputs === #examples\n  ---------------------\n  |#inputs !== #outputs| (well it can but not always)\n  ---------------------\n*/\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let prefix = '';\n        let prefixError = false;\n        let globalEnv = initEnv;\n        let tables = [{examples: [{inputs: [{prog: yellow, key: takeKey()}], want: yellow, key: takeKey()}],\n                       formulas: [{prog: yellow, outputs: [yellow], key: takeKey()}],\n                       params: [{name: yellow, key: takeKey()}],\n                       name: yellow,\n                       signature: yellow,\n                       purpose: yellow,\n                       key: takeKey()}];\n        if (props.snapshots && props.snapshots.length > 0) {\n            prefix = props.snapshots[0].prefix;\n            try {\n                globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n            } catch (e) {\n                prefixError = e;\n            }\n            tables = this.calculate(globalEnv, props.snapshots[0].tables);\n        }\n        this.state = {\n            prefix, prefixError, globalEnv, tables,\n            playbackTime: (props.snapshots ? 0 : undefined),\n            snapshots: (props.snapshots ? undefined : [{prefix, tables}])\n        };\n\n        this.prefixChange = this.prefixChange.bind(this);\n        this.programChange = this.programChange.bind(this);\n        this.playbackTimeChange = this.playbackTimeChange.bind(this);\n        this.render = this.render.bind(this);\n\n        // The following line mitigates the problem that sometimes toRGBAArray returns\n        // all-zeros.  Probably it doesn't completely fix #12.\n        document.createElement('img');\n    }\n\n    componentDidMount() {\n        /****************************************\n         * Thing That Sends Stuff Out To Server *\n         ****************************************/\n        this.sendifier = new Sendifier(3000, Math.floor(Math.random() * 1000000000));\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.snapshots &&\n            this.props.snapshots !== prevProps.snapshots &&\n            this.props.snapshots.length > 0) {\n            let prefix = this.props.snapshots[0].prefix;\n            let prefixError = false;\n            let globalEnv = initEnv;\n            try {\n                globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n            } catch (e) {\n                prefixError = e;\n            }\n            let tables = this.calculate(globalEnv, this.props.snapshots[0].tables);\n            this.setState({\n                prefix, prefixError, globalEnv, tables,\n                playbackTime: 0, snapshots: undefined\n            });\n        }\n        if (this.sendifier && !this.props.snapshots) {\n            this.sendifier.setItem(this.state.snapshots);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.sendifier) {\n            this.sendifier.clear();\n            delete this.sendifier;\n        }\n    }\n\n    calculate(env, program) {\n        function makeLookup(table) {\n            function lookup(args) {\n                if (args.length !== table.params.length) {\n                    throw new Error('Arity Mismatch, expected ' + table.params.length + ' argument' + (table.params.length === 1 ? '' : 's'));\n                }\n                let expr = table.examples.reduce((acc, example) => {\n\n                    if (acc !== undefined) {\n                        return acc;\n                    }\n\n                    // I have no idea what should happen if this is called on a table with no params\n                    if (example.inputs.every((input, i) => {\n                        if (input.prog.yellow === 'yellow') {\n                            return false;\n                        }\n                        let bool;\n                        try {\n                            bool = deepEquals(interp(input.prog, env), args[i]);\n                        } catch (e) {\n                            bool = false;\n                        }\n                        return bool;\n                    })) {\n                        if (example.want.yellow === 'yellow') {\n                            let e = new ReferenceError();\n                            // shoehorn a non-string into the message field\n                            e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) doesn't have a want</React.Fragment>;\n                            throw e;\n                        } else {\n                            // Note: don't need to catch exception here because it will be caught in calcFormula\n                            return interp(example.want, env);\n                        }\n                    }\n\n                    return undefined;\n                }, undefined);\n\n                if (expr === undefined) {\n                    // it's like a reference error in the super meta table language\n                    let e = new ReferenceError();\n                    // shoehorn a non-string into the message field\n                    e.message = <React.Fragment>({table.name}{args.flatMap(a => [' ',...unparse(a)])}) is not an example</React.Fragment>;\n                    throw e;\n                }\n\n                return expr;\n            }\n\n            return lookup;\n        }\n\n        let lookups = program.map((table) => ({name: table.name, binding: {value: makeLookup(table), type: RFUNCT_T}}));\n        let tableEnv = [...env, ...lookups];\n\n        function calcTable(table) {\n            function calcFormula(formula, examples) {\n                let outputs = examples.map((example) => {\n\n                    if (example === gray) {\n                        return gray;\n                    } if (example === pink) {\n                        return pink;\n                    } else if (!example.inputs.every((input) => input.prog.yellow !== 'yellow') || formula.prog.yellow === 'yellow') {\n                        // if any of the inputs or the formula isn't initialized, return yellow\n                        return yellow;\n                    }\n\n                    let error = false;\n                    try {\n                        example.inputs.map((input) => interp(input.prog, tableEnv));\n                    } catch (e) {\n                        error = true;\n                    }\n\n                    if (example === pink || error) {\n                        return pink;\n                    }\n\n                    let localEnv = table.params.map((param, i) => ({name: param.name, binding: interp(example.inputs[i].prog, tableEnv)}));\n                    let env = [...tableEnv, ...localEnv];\n\n                    let output;\n                    try {\n                        output = interp(formula.prog, env);\n                    } catch (e) {\n                        output = e;\n                    }\n\n                    return output;\n                });\n\n                if (allBools(outputs) || (formula.thenChildren !== undefined && formula.thenChildren.length !== 0)) {\n                    function maybeSpecial(example, output) {\n                        if (example === gray || output.value === false)\n                            return gray;\n                        else if (typeof output.value !== 'boolean')\n                            return pink;\n                        else\n                            return example;\n                    }\n\n                    if (formula.thenChildren === undefined) {\n                        var thenChildren = [];\n                    } else {\n                        let subExamples = examples.map((example, i) => maybeSpecial(example, outputs[i]));\n                        thenChildren = formula.thenChildren.map((formula) => calcFormula(formula, subExamples));\n                    }\n\n                    return {...formula,\n                            outputs,\n                            thenChildren};\n                } else {\n                    let newFormula = {...formula,\n                                      outputs};\n                    delete newFormula.thenChildren;\n                    return newFormula;\n                }\n            }\n\n            if (table.name.yellow === 'yellow' || !table.params.every((param) => param.name.yellow !== 'yellow')) {\n                // if the table or any of the table's parameters don't have a name yet, freeze outputs\n                return {...table}; \n            } else {\n                let formulas = table.formulas.map((formula) => calcFormula(formula, table.examples));\n                return {...table,\n                        formulas};\n            }\n        }\n\n        return program.map(calcTable);\n    }\n\n    prefixChange(prefix) {\n        let tables = this.state.tables;\n        let globalEnv;\n        try {\n            globalEnv = interpPrefix(parsePrefix(prefix), initEnv);\n        } catch (prefixError) {\n            this.setState(state => ({\n                prefix, prefixError,\n                snapshots: !this.props.snapshots && state.snapshots\n                           ? [...state.snapshots, {prefix, tables}]\n                           : state.snapshots}));\n            return prefixError;\n        }\n        tables = this.calculate(globalEnv, tables);\n        this.setState((state) => ({\n            prefix, prefixError: false, globalEnv, tables,\n            snapshots: !this.props.snapshots && state.snapshots\n                       ? [...state.snapshots, {prefix, tables}]\n                       : state.snapshots}));\n        return false;\n    }\n\n    programChange(newProg) {\n        this.setState(state => {\n            let prefix = state.prefix;\n            let tables = this.calculate(state.globalEnv, newProg);\n            return {\n                tables,\n                snapshots: !this.props.snapshots && state.snapshots\n                           ? [...state.snapshots, {prefix, tables}]\n                           : state.snapshots\n            }\n        });\n    }\n\n    playbackTimeChange(event) {\n        const snapshots = this.props.snapshots;\n        if (snapshots) {\n            const playbackTime = Math.max(0,\n                                 Math.min(snapshots.length-1,\n                                 Math.floor(event.target.value)));\n            const prefix = snapshots[playbackTime].prefix;\n            let globalEnv, prefixError = false;\n            for (let t = playbackTime; t >= 0; t--) {\n                try {\n                    globalEnv = interpPrefix(parsePrefix(snapshots[t].prefix), initEnv);\n                    break;\n                } catch (e) {\n                    globalEnv = initEnv;\n                    if (!prefixError) {\n                        prefixError = e;\n                    }\n                }\n            }\n            const tables = this.calculate(globalEnv, snapshots[playbackTime].tables);\n            this.setState({playbackTime, prefix, prefixError, globalEnv, tables});\n        }\n    }\n\n    render(){\n        const disabled = !!this.props.snapshots;\n        return (\n            <div>\n              {this.state.snapshots\n                  ? <p>Sessions may be recorded to ensure quality service.</p>\n                  : []}\n              <DefinitionsArea\n                text={disabled ? this.state.prefix : undefined}\n                error={disabled ? this.state.prefixError : undefined}\n                prefixChange={this.prefixChange}\n              />\n              <Succinct\n                disabled={disabled}\n                globalEnv={this.state.globalEnv}\n                tables={this.state.tables}\n                programChange={this.programChange}\n              />\n              <div className='language_select'>\n                <select\n                  defaultValue='cons'\n                  onChange={(e) => {\n                      if (e.target.value === 'cons'){\n                          listOrCons = 'cons';\n                          unparse = unparse_cons;\n                      } else {\n                          listOrCons = 'list';\n                          unparse = unparse_list;\n                      }\n                      // this just rerenders everything, the state remains unchanged\n                      this.setState((state) => state);\n                  }}\n                >\n                  <option value='cons'>Beginning Student</option>\n                  <option value='list'>Beginning Student with List Abbreviations</option>\n                </select>\n              </div>\n              <BSLArea\n                tables={this.state.tables}\n              />\n              <div className='flex_horiz'>\n                {this.props.snapshots ?\n                 <input\n                   className='grow'\n                   type='range'\n                   min='0'\n                   max={this.props.snapshots.length-1}\n                   value={this.state.playbackTime}\n                   onChange={this.playbackTimeChange}/>\n                 : []}\n              </div>\n            </div>\n        );\n    }\n}\n\nclass ListRecordings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {recordings: false};\n    }\n\n    componentDidMount() {\n        fetch('http://107.170.76.216:8000/list')\n        .then(response => response.json())\n        .then(o => { this.setState({ recordings:\n            Object.entries(o).flatMap(([name, info]) =>\n            name.startsWith('session') ? [{id: name.slice(7), ...info}] : []) }) });\n        // TODO: indicate request and error by yellow and pink\n    }\n\n    render() {\n        const alignRight = {'text-align': 'right'};\n        const columns = [{\n            Cell: props => <Link to={\"session\"+props.value}>{props.value}</Link>,\n            Header: 'Session ID',\n            accessor: 'id',\n            maxWidth: 150\n        }, {\n            Cell: props => {\n                const date = new Date(1000*props.value);\n                const abs = date.toLocaleString(undefined, {dateStyle: 'medium', timeStyle: 'medium'});\n                return <div className=\"date\">\n                    <span>{abs}</span>\n                    <TimeAgo date={date}/>\n                </div>;\n            },\n            defaultSortDesc: true,\n            Header: 'Last recording time',\n            accessor: 'time',\n            maxWidth: 350\n        }, {\n            defaultSortDesc: true,\n            Header: 'Size (bytes)',\n            accessor: 'size',\n            headerStyle: alignRight,\n            style: alignRight,\n            maxWidth: 150\n        }];\n\n        return (this.state.recordings\n                ? <ReactTable\n                    data={this.state.recordings}\n                    columns={columns}\n                    defaultSorted={[{id: 'time', desc: true}]}\n                  />\n                : <p>Loading list of recordings</p>);\n    }\n}\n\nclass FetchRecordings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {snapshots: false};\n    }\n\n    componentDidMount() {\n        this.playbackSessionIDChange();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id)\n            this.playbackSessionIDChange();\n    }\n\n    playbackSessionIDChange() {\n        const playbackSessionID = this.props.match.params.id;\n        this.setState({snapshots: false});\n        if (playbackSessionID.length > 0) {\n            const url = sessionURL(playbackSessionID);\n            fetch(url)\n            .then(response => response.json())\n            .then(snapshots => {\n                      if (snapshots.every(snapshot => !('prefix' in snapshot) &&\n                                                      !('tables' in snapshot))) {\n                          // Try to upgrade old snapshot\n                          snapshots = snapshots.map(tables => ({prefix:'', tables}));\n                      }\n                      this.setState({snapshots});\n                  }); // TODO: indicate request and error by yellow and pink\n        }\n    }\n\n    render() {\n        return (this.state.snapshots\n            ? <App snapshots={this.state.snapshots}/>\n            : <p>\n                Loading session {this.props.match.params.id} for playback\n              </p>);\n    }\n}\n\nexport { App, FetchRecordings, ListRecordings };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport { App, FetchRecordings, ListRecordings } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path=\"/(Beginning-Student-Tables)?/\" exact={true} component={App}/>\n        <Route path=\"/(Beginning-Student-Tables)?/list\" exact={true} component={ListRecordings}/>\n        <Route path=\"/(Beginning-Student-Tables)?/session:id\" component={FetchRecordings}/>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}